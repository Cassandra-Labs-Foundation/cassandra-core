{
  "openapi": "3.0.2",
  "info": {
    "title": "Unit OpenAPI specifications",
    "description": "An OpenAPI specifications for unit-sdk clients",
    "version": "0.2.3"
  },
  "servers": [
    {
      "url": "https://api.s.unit.sh"
    }
  ],
  "paths": {
    "/applications/{applicationId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApplication",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to get"
          },
          {
            "name": "included",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Application by Id",
        "description": "Get an Application from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Application Response With Included",
                  "properties": {
                    "data": {
                      "title": "Application",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "individualApplication",
                            "businessApplication"
                          ]
                        }
                      },
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "individualApplication": "#/components/schemas/IndividualApplication",
                          "businessApplication": "#/components/schemas/BusinessApplication"
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object"
                          },
                          "relationships": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateApplication",
        "summary": "Update Application",
        "description": "Update an Application via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to update"
          }
        ],
        "requestBody": {
          "description": "Update Application Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Application",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Business Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessApplication"
                            ],
                            "default": "businessApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "annualRevenue": {
                                "type": "string",
                                "enum": [
                                  "UpTo250k",
                                  "Between250kAnd500k",
                                  "Between500kAnd1m",
                                  "Between1mAnd5m",
                                  "Over5m"
                                ]
                              },
                              "numberOfEmployees": {
                                "type": "string",
                                "enum": [
                                  "UpTo10",
                                  "Between10And50",
                                  "Between50And100",
                                  "Between100And500",
                                  "Over500"
                                ]
                              },
                              "cashFlow": {
                                "type": "string",
                                "enum": [
                                  "Unpredictable",
                                  "Predictable"
                                ]
                              },
                              "yearOfIncorporation": {
                                "type": "string",
                                "pattern": "^\\d{4}$"
                              },
                              "countriesOfOperation": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                                },
                                "minItems": 1
                              },
                              "stockSymbol": {
                                "type": "string"
                              },
                              "website": {
                                "type": "string"
                              },
                              "businessVertical": {
                                "type": "string",
                                "enum": [
                                  "AdultEntertainmentDatingOrEscortServices",
                                  "AgricultureForestryFishingOrHunting",
                                  "ArtsEntertainmentAndRecreation",
                                  "BusinessSupportOrBuildingServices",
                                  "Cannabis",
                                  "Construction",
                                  "DirectMarketingOrTelemarketing",
                                  "EducationalServices",
                                  "FinancialServicesCryptocurrency",
                                  "FinancialServicesDebitCollectionOrConsolidation",
                                  "FinancialServicesMoneyServicesBusinessOrCurrencyExchange",
                                  "FinancialServicesOther",
                                  "FinancialServicesPaydayLending",
                                  "GamingOrGambling",
                                  "HealthCareAndSocialAssistance",
                                  "HospitalityAccommodationOrFoodServices",
                                  "LegalAccountingConsultingOrComputerProgramming",
                                  "Manufacturing",
                                  "Mining",
                                  "Nutraceuticals",
                                  "PersonalCareServices",
                                  "PublicAdministration",
                                  "RealEstate",
                                  "ReligiousCivicAndSocialOrganizations",
                                  "RepairAndMaintenance",
                                  "RetailTrade",
                                  "TechnologyMediaOrTelecom",
                                  "TransportationOrWarehousing",
                                  "Utilities",
                                  "WholesaleTrade"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Business Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "beneficialOwner"
                            ],
                            "default": "beneficialOwner"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "occupation": {
                                "type": "string",
                                "enum": [
                                  "ArchitectOrEngineer",
                                  "BusinessAnalystAccountantOrFinancialAdvisor",
                                  "CommunityAndSocialServicesWorker",
                                  "ConstructionMechanicOrMaintenanceWorker",
                                  "Doctor",
                                  "Educator",
                                  "EntertainmentSportsArtsOrMedia",
                                  "ExecutiveOrManager",
                                  "FarmerFishermanForester",
                                  "FoodServiceWorker",
                                  "GigWorker",
                                  "HospitalityOfficeOrAdministrativeSupportWorker",
                                  "HouseholdManager",
                                  "JanitorHousekeeperLandscaper",
                                  "Lawyer",
                                  "ManufacturingOrProductionWorker",
                                  "MilitaryOrPublicSafety",
                                  "NurseHealthcareTechnicianOrHealthcareSupport",
                                  "PersonalCareOrServiceWorker",
                                  "PilotDriverOperator",
                                  "SalesRepresentativeBrokerAgent",
                                  "ScientistOrTechnologist",
                                  "Student"
                                ]
                              },
                              "annualIncome": {
                                "type": "string",
                                "enum": [
                                  "UpTo10k",
                                  "Between10kAnd25k",
                                  "Between25kAnd50k",
                                  "Between50kAnd100k",
                                  "Between100kAnd250k",
                                  "Over250k"
                                ]
                              },
                              "sourceOfIncome": {
                                "type": "string",
                                "enum": [
                                  "EmploymentOrPayrollIncome",
                                  "PartTimeOrContractorIncome",
                                  "InheritancesAndGifts",
                                  "PersonalInvestments",
                                  "BusinessOwnershipInterests",
                                  "GovernmentBenefits"
                                ]
                              },
                              "relationships": {
                                "type": "object",
                                "properties": {
                                  "application": {
                                    "type": "object",
                                    "title": "Application Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "pattern": "^[1-9]\\d*$"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "businessApplication",
                                              "individualApplication",
                                              "application"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "type"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Sole Proprietor Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualApplication"
                            ],
                            "default": "individualApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "annualRevenue": {
                                "type": "string",
                                "enum": [
                                  "UpTo50k",
                                  "Between50kAnd100k",
                                  "Between100kAnd200k",
                                  "Between200kAnd500k",
                                  "Over500k"
                                ]
                              },
                              "numberOfEmployees": {
                                "type": "string",
                                "enum": [
                                  "One",
                                  "Between2And5",
                                  "Between5And10",
                                  "Over10"
                                ]
                              },
                              "businessVertical": {
                                "$ref": "../types.json#/components/schemas/BusinessVertical"
                              },
                              "website": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Individual Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualApplication"
                            ],
                            "default": "individualApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "occupation": {
                                "$ref": "../types.json#/components/schemas/Occupation"
                              },
                              "annualIncome": {
                                "$ref": "../types.json#/components/schemas/AnnualIncome"
                              },
                              "sourceOfIncome": {
                                "$ref": "../types.json#/components/schemas/SourceOfIncome"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Update Business Officer",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessApplication"
                            ],
                            "default": "businessApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "officer": {
                                "type": "object",
                                "properties": {
                                  "occupation": {
                                    "$ref": "../types.json#/components/schemas/Occupation"
                                  },
                                  "annualIncome": {
                                    "$ref": "../types.json#/components/schemas/AnnualIncome"
                                  },
                                  "sourceOfIncome": {
                                    "$ref": "../types.json#/components/schemas/SourceOfIncome"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "attributes",
                          "type"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitApplicationResponseWithIncluded"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/cancel": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "cancelApplication",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to get"
          }
        ],
        "summary": "Cancel Application by Id",
        "description": "Cancel a Application via API ",
        "requestBody": {
          "description": "Cancel Application Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Cancel Application Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "applicationCancel"
                        ]
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Cancel Application Response",
                  "properties": {
                    "data": {
                      "$ref": "./application.json#/components/schemas/Application"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "title": "Application Document",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "document"
                            ],
                            "default": "document"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "documentType": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "nationality": {
                                "type": "string",
                                "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                              },
                              "ssn": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "passport": {
                                "type": "string"
                              },
                              "matriculaConsular": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "address": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "dateOfIncorporation": {
                                "type": "string",
                                "format": "date"
                              },
                              "stateOfIncorporation": {
                                "type": "string"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "ein": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "reasonCode": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "evaluationId": {
                                "type": "string"
                              },
                              "frontDocumentId": {
                                "type": "string"
                              },
                              "backDocumentId": {
                                "type": "string"
                              },
                              "frontDocumentStoreId": {
                                "type": "string"
                              },
                              "backDocumentStoreId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "status"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApplicationsList",
        "summary": "Get List Application",
        "description": "Get List Applications from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "description": "Parameters for paginated list requests",
              "properties": {
                "limit": {
                  "type": "integer",
                  "default": 100,
                  "maximum": 1000
                },
                "offset": {
                  "type": "integer",
                  "default": 0
                }
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "AwaitingDocuments",
                      "PendingReview",
                      "Pending",
                      "Approved",
                      "Denied",
                      "Canceled"
                    ]
                  }
                },
                "email": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Applications Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./application.json#/components/schemas/Application"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "title": "Unit Error",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "details": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          }
                        }
                      },
                      "meta": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createApplication",
        "summary": "Create Application",
        "description": "Create an Application via API ",
        "requestBody": {
          "description": "Create Application Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Individual Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualApplication"
                            ],
                            "default": "individualApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "fullName": {
                                "title": "Full Name",
                                "type": "object",
                                "properties": {
                                  "first": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "last": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "first",
                                  "last"
                                ]
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "phone": {
                                "title": "Phone",
                                "type": "object",
                                "properties": {
                                  "countryCode": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "countryCode",
                                  "number"
                                ]
                              },
                              "ssn": {
                                "type": "string",
                                "nullable": true,
                                "pattern": "^\\d{9}|\\d{4}"
                              },
                              "passport": {
                                "type": "string",
                                "nullable": true
                              },
                              "nationality": {
                                "type": "string",
                                "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                              },
                              "address": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "deviceFingerprints": {
                                "type": "array",
                                "maxItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "provider": {
                                      "type": "string",
                                      "enum": [
                                        "iovation"
                                      ]
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "provider",
                                    "value"
                                  ]
                                }
                              },
                              "jwtSubject": {
                                "type": "string",
                                "nullable": true
                              },
                              "powerOfAttorneyAgent": {
                                "title": "Create Power of Attorney Agent",
                                "type": "object",
                                "properties": {
                                  "fullName": {
                                    "$ref": "../types.json#/components/schemas/FullName"
                                  },
                                  "email": {
                                    "$ref": "../types.json#/components/schemas/Email"
                                  },
                                  "phone": {
                                    "$ref": "../types.json#/components/schemas/Phone"
                                  },
                                  "ssn": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "passport": {
                                    "type": "string"
                                  },
                                  "nationality": {
                                    "$ref": "../types.json#/components/schemas/Country"
                                  },
                                  "matriculaConsular": {
                                    "type": "string"
                                  },
                                  "address": {
                                    "$ref": "../types.json#/components/schemas/Address"
                                  },
                                  "dateOfBirth": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "jwtSubject": {
                                    "$ref": "../types.json#/components/schemas/JwtSubject"
                                  },
                                  "EvaluationParams": {
                                    "title": "Evaluation Params",
                                    "type": "object",
                                    "properties": {
                                      "useSelfieVerification": {
                                        "type": "string",
                                        "enum": [
                                          "Never",
                                          "ReplaceIdentification",
                                          "Always"
                                        ]
                                      },
                                      "requireIdVerification": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "fullName",
                                  "email",
                                  "phone",
                                  "address",
                                  "dateOfBirth"
                                ]
                              },
                              "industry": {
                                "type": "string",
                                "enum": [
                                  "Retail",
                                  "Wholesale",
                                  "Restaurants",
                                  "Hospitals",
                                  "Construction",
                                  "Insurance",
                                  "Unions",
                                  "RealEstate",
                                  "FreelanceProfessional",
                                  "OtherProfessionalServices",
                                  "OnlineRetailer",
                                  "OtherEducationServices"
                                ]
                              },
                              "EvaluationParams": {
                                "$ref": "#/components/schemas/EvaluationParams"
                              },
                              "occupation": {
                                "type": "string",
                                "enum": [
                                  "ArchitectOrEngineer",
                                  "BusinessAnalystAccountantOrFinancialAdvisor",
                                  "CommunityAndSocialServicesWorker",
                                  "ConstructionMechanicOrMaintenanceWorker",
                                  "Doctor",
                                  "Educator",
                                  "EntertainmentSportsArtsOrMedia",
                                  "ExecutiveOrManager",
                                  "FarmerFishermanForester",
                                  "FoodServiceWorker",
                                  "GigWorker",
                                  "HospitalityOfficeOrAdministrativeSupportWorker",
                                  "HouseholdManager",
                                  "JanitorHousekeeperLandscaper",
                                  "Lawyer",
                                  "ManufacturingOrProductionWorker",
                                  "MilitaryOrPublicSafety",
                                  "NurseHealthcareTechnicianOrHealthcareSupport",
                                  "PersonalCareOrServiceWorker",
                                  "PilotDriverOperator",
                                  "SalesRepresentativeBrokerAgent",
                                  "ScientistOrTechnologist",
                                  "Student"
                                ]
                              },
                              "annualIncome": {
                                "type": "string",
                                "enum": [
                                  "UpTo10k",
                                  "Between10kAnd25k",
                                  "Between25kAnd50k",
                                  "Between50kAnd100k",
                                  "Between100kAnd250k",
                                  "Over250k"
                                ]
                              },
                              "sourceOfIncome": {
                                "type": "string",
                                "enum": [
                                  "EmploymentOrPayrollIncome",
                                  "PartTimeOrContractorIncome",
                                  "InheritancesAndGifts",
                                  "PersonalInvestments",
                                  "BusinessOwnershipInterests",
                                  "GovernmentBenefits"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "fullName",
                              "email",
                              "phone",
                              "address",
                              "dateOfBirth"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Create Sole Proprietor Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualApplication"
                            ],
                            "default": "individualApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "fullName": {
                                "$ref": "../types.json#/components/schemas/FullName"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "ssn": {
                                "type": "string",
                                "nullable": true,
                                "pattern": "^\\d{9}|\\d{4}"
                              },
                              "passport": {
                                "type": "string",
                                "nullable": true
                              },
                              "nationality": {
                                "$ref": "../types.json#/components/schemas/Country",
                                "nullable": true
                              },
                              "matriculaConsular": {
                                "type": "string",
                                "nullable": true
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "dba": {
                                "type": "string",
                                "nullable": true
                              },
                              "ein": {
                                "type": "string",
                                "nullable": true,
                                "pattern": "^\\d{9}$"
                              },
                              "ip": {
                                "type": "string"
                              },
                              "soleProprietorship": {
                                "type": "boolean",
                                "default": false
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "deviceFingerprints": {
                                "type": "array",
                                "maxItems": 1,
                                "items": {
                                  "$ref": "../types.json#/components/schemas/DeviceFingerprint"
                                }
                              },
                              "jwtSubject": {
                                "$ref": "../types.json#/components/schemas/JwtSubject"
                              },
                              "powerOfAttorneyAgent": {
                                "$ref": "#/components/schemas/CreatePowerOfAttorneyAgent"
                              },
                              "industry": {
                                "$ref": "../types.json#/components/schemas/Industry"
                              },
                              "EvaluationParams": {
                                "$ref": "#/components/schemas/EvaluationParams"
                              },
                              "occupation": {
                                "$ref": "../types.json#/components/schemas/Occupation"
                              },
                              "annualIncome": {
                                "$ref": "../types.json#/components/schemas/AnnualIncome"
                              },
                              "sourceOfIncome": {
                                "$ref": "../types.json#/components/schemas/SourceOfIncome"
                              },
                              "annualRevenue": {
                                "type": "string",
                                "enum": [
                                  "UpTo50k",
                                  "Between50kAnd100k",
                                  "Between100kAnd200k",
                                  "Between200kAnd500k",
                                  "Over500k"
                                ]
                              },
                              "numberOfEmployees": {
                                "type": "string",
                                "enum": [
                                  "One",
                                  "Between2And5",
                                  "Between5And10",
                                  "Over10"
                                ]
                              },
                              "businessVertical": {
                                "type": "string",
                                "enum": [
                                  "AdultEntertainmentDatingOrEscortServices",
                                  "AgricultureForestryFishingOrHunting",
                                  "ArtsEntertainmentAndRecreation",
                                  "BusinessSupportOrBuildingServices",
                                  "Cannabis",
                                  "Construction",
                                  "DirectMarketingOrTelemarketing",
                                  "EducationalServices",
                                  "FinancialServicesCryptocurrency",
                                  "FinancialServicesDebitCollectionOrConsolidation",
                                  "FinancialServicesMoneyServicesBusinessOrCurrencyExchange",
                                  "FinancialServicesOther",
                                  "FinancialServicesPaydayLending",
                                  "GamingOrGambling",
                                  "HealthCareAndSocialAssistance",
                                  "HospitalityAccommodationOrFoodServices",
                                  "LegalAccountingConsultingOrComputerProgramming",
                                  "Manufacturing",
                                  "Mining",
                                  "Nutraceuticals",
                                  "PersonalCareServices",
                                  "PublicAdministration",
                                  "RealEstate",
                                  "ReligiousCivicAndSocialOrganizations",
                                  "RepairAndMaintenance",
                                  "RetailTrade",
                                  "TechnologyMediaOrTelecom",
                                  "TransportationOrWarehousing",
                                  "Utilities",
                                  "WholesaleTrade"
                                ]
                              },
                              "website": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "fullName",
                              "email",
                              "phone",
                              "address",
                              "dateOfBirth"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Create Business Application",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessApplication"
                            ],
                            "default": "businessApplication"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "dba": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "ein": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "entityType": {
                                "type": "string",
                                "enum": [
                                  "Corporation",
                                  "LLC",
                                  "Partnership",
                                  "PubliclyTradedCorporation",
                                  "PrivatelyHeldCorporation",
                                  "NotForProfitOrganization"
                                ]
                              },
                              "dateOfIncorporation": {
                                "type": "string",
                                "format": "date"
                              },
                              "stateOfIncorporation": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2
                              },
                              "purpose": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 1024
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "contact": {
                                "title": "Contact",
                                "type": "object",
                                "properties": {
                                  "fullName": {
                                    "title": "Full Name",
                                    "type": "object",
                                    "properties": {
                                      "first": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "last": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "first",
                                      "last"
                                    ]
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email"
                                  },
                                  "phone": {
                                    "title": "Phone",
                                    "type": "object",
                                    "properties": {
                                      "countryCode": {
                                        "type": "string"
                                      },
                                      "number": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "countryCode",
                                      "number"
                                    ]
                                  },
                                  "jwtSubject": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "fullName",
                                  "email",
                                  "phone"
                                ]
                              },
                              "officer": {
                                "title": "Create Officer",
                                "type": "object",
                                "properties": {
                                  "fullName": {
                                    "$ref": "../types.json#/components/schemas/FullName"
                                  },
                                  "email": {
                                    "$ref": "../types.json#/components/schemas/Email"
                                  },
                                  "phone": {
                                    "$ref": "../types.json#/components/schemas/Phone"
                                  },
                                  "ssn": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "passport": {
                                    "type": "string"
                                  },
                                  "nationality": {
                                    "$ref": "../types.json#/components/schemas/Country"
                                  },
                                  "matriculaConsular": {
                                    "type": "string"
                                  },
                                  "address": {
                                    "$ref": "../types.json#/components/schemas/Address"
                                  },
                                  "dateOfBirth": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "title": {
                                    "type": "string",
                                    "enum": [
                                      "President",
                                      "CEO",
                                      "COO",
                                      "CFO",
                                      "BenefitsAdministrationOfficer",
                                      "CIO",
                                      "VP",
                                      "AVP",
                                      "Treasurer",
                                      "Secretary",
                                      "Controller",
                                      "Manager",
                                      "Partner",
                                      "Member"
                                    ]
                                  },
                                  "EvaluationParams": {
                                    "$ref": "#/components/schemas/EvaluationParams"
                                  },
                                  "occupation": {
                                    "$ref": "../types.json#/components/schemas/Occupation"
                                  },
                                  "annualIncome": {
                                    "$ref": "../types.json#/components/schemas/AnnualIncome"
                                  },
                                  "sourceOfIncome": {
                                    "$ref": "../types.json#/components/schemas/SourceOfIncome"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "fullName",
                                  "email",
                                  "phone",
                                  "address",
                                  "dateOfBirth",
                                  "occupation"
                                ]
                              },
                              "ip": {
                                "type": "string"
                              },
                              "website": {
                                "type": "string"
                              },
                              "beneficialOwners": {
                                "type": "array",
                                "items": {
                                  "title": "Create Beneficial Owner",
                                  "type": "object",
                                  "properties": {
                                    "fullName": {
                                      "$ref": "../types.json#/components/schemas/FullName"
                                    },
                                    "email": {
                                      "$ref": "../types.json#/components/schemas/Email"
                                    },
                                    "phone": {
                                      "$ref": "../types.json#/components/schemas/Phone"
                                    },
                                    "ssn": {
                                      "type": "string",
                                      "pattern": "^\\d{9}$"
                                    },
                                    "passport": {
                                      "type": "string"
                                    },
                                    "nationality": {
                                      "$ref": "../types.json#/components/schemas/Country"
                                    },
                                    "matriculaConsular": {
                                      "type": "string"
                                    },
                                    "address": {
                                      "$ref": "../types.json#/components/schemas/Address"
                                    },
                                    "dateOfBirth": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "percentage": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "EvaluationParams": {
                                      "$ref": "#/components/schemas/EvaluationParams"
                                    },
                                    "occupation": {
                                      "$ref": "../types.json#/components/schemas/Occupation"
                                    },
                                    "annualIncome": {
                                      "$ref": "../types.json#/components/schemas/AnnualIncome"
                                    },
                                    "sourceOfIncome": {
                                      "$ref": "../types.json#/components/schemas/SourceOfIncome"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "fullName",
                                    "email",
                                    "phone",
                                    "address",
                                    "dateOfBirth"
                                  ]
                                }
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "deviceFingerprints": {
                                "type": "array",
                                "maxItems": 1,
                                "items": {
                                  "$ref": "../types.json#/components/schemas/DeviceFingerprint"
                                }
                              },
                              "industry": {
                                "$ref": "../types.json#/components/schemas/Industry"
                              },
                              "annualRevenue": {
                                "type": "string",
                                "enum": [
                                  "UpTo250k",
                                  "Between250kAnd500k",
                                  "Between500kAnd1m",
                                  "Between1mAnd5m",
                                  "Over5m"
                                ]
                              },
                              "numberOfEmployees": {
                                "type": "string",
                                "enum": [
                                  "UpTo10",
                                  "Between10And50",
                                  "Between50And100",
                                  "Between100And500",
                                  "Over500"
                                ]
                              },
                              "cashFlow": {
                                "type": "string",
                                "enum": [
                                  "Unpredictable",
                                  "Predictable"
                                ]
                              },
                              "yearOfIncorporation": {
                                "type": "string",
                                "pattern": "^\\d{4}$"
                              },
                              "countriesOfOperation": {
                                "type": "array",
                                "items": {
                                  "$ref": "../types.json#/components/schemas/Country"
                                },
                                "minItems": 1
                              },
                              "stockSymbol": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 5
                              },
                              "businessVertical": {
                                "$ref": "../types.json#/components/schemas/BusinessVertical"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "ein",
                              "entityType",
                              "stateOfIncorporation",
                              "phone",
                              "address",
                              "contact",
                              "officer",
                              "beneficialOwners"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Create Application Response",
                  "properties": {
                    "data": {
                      "$ref": "./application.json#/components/schemas/Application"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "$ref": "./document.json#/components/schemas/ApplicationDocument"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/application-forms": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApplicationFormsList",
        "summary": "Get List Application Forms",
        "description": "Get List Application Forms from API ",
        "parameters": [
          {
            "$ref": "../types.json#/components/schemas/PageQuery"
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Approved"
                    ]
                  }
                },
                "email": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Application Forms List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Application Form",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "applicationForm"
                            ],
                            "default": "applicationForm"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "url": {
                                "type": "string"
                              },
                              "stage": {
                                "type": "string",
                                "enum": [
                                  "ChooseBusinessOrIndividual",
                                  "EnterIndividualInformation",
                                  "IndividualPhoneVerification",
                                  "IndividualApplicationCreated",
                                  "EnterBusinessInformation",
                                  "EnterBusinessAdditionalInformation",
                                  "EnterOfficerInformation",
                                  "BusinessPhoneVerification",
                                  "EnterBeneficialOwnersInformation",
                                  "BusinessApplicationCreated",
                                  "EnterSoleProprietorshipInformation",
                                  "EnterSoleProprietorshipBusinessInformation",
                                  "SoleProprietorshipPhoneVerification",
                                  "SoleProprietorshipApplicationCreated"
                                ]
                              },
                              "applicantDetails": {
                                "title": "Application Form Prefilled",
                                "type": "object",
                                "properties": {
                                  "applicationType": {
                                    "type": "string",
                                    "enum": [
                                      "Individual",
                                      "Business",
                                      "SoleProprietorship"
                                    ]
                                  },
                                  "fullName": {
                                    "title": "Full Name",
                                    "type": "object",
                                    "properties": {
                                      "first": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                      },
                                      "last": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "first",
                                      "last"
                                    ]
                                  },
                                  "ssn": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "passport": {
                                    "type": "string"
                                  },
                                  "nationality": {
                                    "type": "string",
                                    "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                                  },
                                  "dateOfBirth": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "email": {
                                    "$ref": "../types.json#/components/schemas/Email"
                                  },
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "stateOfIncorporation": {
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2
                                  },
                                  "entityType": {
                                    "type": "string",
                                    "enum": [
                                      "Corporation",
                                      "LLC",
                                      "Partnership",
                                      "PubliclyTradedCorporation",
                                      "PrivatelyHeldCorporation",
                                      "NotForProfitOrganization"
                                    ]
                                  },
                                  "contact": {
                                    "title": "Contact",
                                    "type": "object",
                                    "properties": {
                                      "fullName": {
                                        "$ref": "#/components/schemas/FullName"
                                      },
                                      "email": {
                                        "$ref": "#/components/schemas/Email"
                                      },
                                      "phone": {
                                        "$ref": "#/components/schemas/Phone"
                                      },
                                      "jwtSubject": {
                                        "$ref": "#/components/schemas/JwtSubject"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "fullName",
                                      "email",
                                      "phone"
                                    ]
                                  },
                                  "officer": {
                                    "title": "Create Officer",
                                    "type": "object",
                                    "properties": {
                                      "fullName": {
                                        "$ref": "../types.json#/components/schemas/FullName"
                                      },
                                      "email": {
                                        "$ref": "../types.json#/components/schemas/Email"
                                      },
                                      "phone": {
                                        "$ref": "../types.json#/components/schemas/Phone"
                                      },
                                      "ssn": {
                                        "type": "string",
                                        "pattern": "^\\d{9}$"
                                      },
                                      "passport": {
                                        "type": "string"
                                      },
                                      "nationality": {
                                        "$ref": "../types.json#/components/schemas/Country"
                                      },
                                      "matriculaConsular": {
                                        "type": "string"
                                      },
                                      "address": {
                                        "$ref": "../types.json#/components/schemas/Address"
                                      },
                                      "dateOfBirth": {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "title": {
                                        "type": "string",
                                        "enum": [
                                          "President",
                                          "CEO",
                                          "COO",
                                          "CFO",
                                          "BenefitsAdministrationOfficer",
                                          "CIO",
                                          "VP",
                                          "AVP",
                                          "Treasurer",
                                          "Secretary",
                                          "Controller",
                                          "Manager",
                                          "Partner",
                                          "Member"
                                        ]
                                      },
                                      "EvaluationParams": {
                                        "$ref": "#/components/schemas/EvaluationParams"
                                      },
                                      "occupation": {
                                        "$ref": "../types.json#/components/schemas/Occupation"
                                      },
                                      "annualIncome": {
                                        "$ref": "../types.json#/components/schemas/AnnualIncome"
                                      },
                                      "sourceOfIncome": {
                                        "$ref": "../types.json#/components/schemas/SourceOfIncome"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "fullName",
                                      "email",
                                      "phone",
                                      "address",
                                      "dateOfBirth",
                                      "occupation"
                                    ]
                                  },
                                  "beneficialOwners": {
                                    "type": "array",
                                    "items": {
                                      "title": "Create Beneficial Owner",
                                      "type": "object",
                                      "properties": {
                                        "fullName": {
                                          "$ref": "../types.json#/components/schemas/FullName"
                                        },
                                        "email": {
                                          "$ref": "../types.json#/components/schemas/Email"
                                        },
                                        "phone": {
                                          "$ref": "../types.json#/components/schemas/Phone"
                                        },
                                        "ssn": {
                                          "type": "string",
                                          "pattern": "^\\d{9}$"
                                        },
                                        "passport": {
                                          "type": "string"
                                        },
                                        "nationality": {
                                          "$ref": "../types.json#/components/schemas/Country"
                                        },
                                        "matriculaConsular": {
                                          "type": "string"
                                        },
                                        "address": {
                                          "$ref": "../types.json#/components/schemas/Address"
                                        },
                                        "dateOfBirth": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "minimum": 0,
                                          "maximum": 100
                                        },
                                        "EvaluationParams": {
                                          "$ref": "#/components/schemas/EvaluationParams"
                                        },
                                        "occupation": {
                                          "$ref": "../types.json#/components/schemas/Occupation"
                                        },
                                        "annualIncome": {
                                          "$ref": "../types.json#/components/schemas/AnnualIncome"
                                        },
                                        "sourceOfIncome": {
                                          "$ref": "../types.json#/components/schemas/SourceOfIncome"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "fullName",
                                        "email",
                                        "phone",
                                        "address",
                                        "dateOfBirth"
                                      ]
                                    }
                                  },
                                  "website": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "title": "Phone",
                                    "type": "object",
                                    "properties": {
                                      "countryCode": {
                                        "type": "string"
                                      },
                                      "number": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "countryCode",
                                      "number"
                                    ]
                                  },
                                  "address": {
                                    "title": "Address",
                                    "type": "object",
                                    "properties": {
                                      "street": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "street2": {
                                        "type": "string",
                                        "nullable": true,
                                        "pattern": "^.*$"
                                      },
                                      "city": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "type": "string",
                                        "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                      },
                                      "country": {
                                        "type": "string",
                                        "default": "US"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "street",
                                      "city",
                                      "postalCode",
                                      "country",
                                      "state"
                                    ]
                                  },
                                  "dba": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "ein": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "jwtSubject": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "industry": {
                                    "type": "string",
                                    "enum": [
                                      "Retail",
                                      "Wholesale",
                                      "Restaurants",
                                      "Hospitals",
                                      "Construction",
                                      "Insurance",
                                      "Unions",
                                      "RealEstate",
                                      "FreelanceProfessional",
                                      "OtherProfessionalServices",
                                      "OnlineRetailer",
                                      "OtherEducationServices"
                                    ]
                                  },
                                  "businessVertical": {
                                    "type": "string",
                                    "enum": [
                                      "AdultEntertainmentDatingOrEscortServices",
                                      "AgricultureForestryFishingOrHunting",
                                      "ArtsEntertainmentAndRecreation",
                                      "BusinessSupportOrBuildingServices",
                                      "Cannabis",
                                      "Construction",
                                      "DirectMarketingOrTelemarketing",
                                      "EducationalServices",
                                      "FinancialServicesCryptocurrency",
                                      "FinancialServicesDebitCollectionOrConsolidation",
                                      "FinancialServicesMoneyServicesBusinessOrCurrencyExchange",
                                      "FinancialServicesOther",
                                      "FinancialServicesPaydayLending",
                                      "GamingOrGambling",
                                      "HealthCareAndSocialAssistance",
                                      "HospitalityAccommodationOrFoodServices",
                                      "LegalAccountingConsultingOrComputerProgramming",
                                      "Manufacturing",
                                      "Mining",
                                      "Nutraceuticals",
                                      "PersonalCareServices",
                                      "PublicAdministration",
                                      "RealEstate",
                                      "ReligiousCivicAndSocialOrganizations",
                                      "RepairAndMaintenance",
                                      "RetailTrade",
                                      "TechnologyMediaOrTelecom",
                                      "TransportationOrWarehousing",
                                      "Utilities",
                                      "WholesaleTrade"
                                    ]
                                  },
                                  "occupation": {
                                    "type": "string",
                                    "enum": [
                                      "ArchitectOrEngineer",
                                      "BusinessAnalystAccountantOrFinancialAdvisor",
                                      "CommunityAndSocialServicesWorker",
                                      "ConstructionMechanicOrMaintenanceWorker",
                                      "Doctor",
                                      "Educator",
                                      "EntertainmentSportsArtsOrMedia",
                                      "ExecutiveOrManager",
                                      "FarmerFishermanForester",
                                      "FoodServiceWorker",
                                      "GigWorker",
                                      "HospitalityOfficeOrAdministrativeSupportWorker",
                                      "HouseholdManager",
                                      "JanitorHousekeeperLandscaper",
                                      "Lawyer",
                                      "ManufacturingOrProductionWorker",
                                      "MilitaryOrPublicSafety",
                                      "NurseHealthcareTechnicianOrHealthcareSupport",
                                      "PersonalCareOrServiceWorker",
                                      "PilotDriverOperator",
                                      "SalesRepresentativeBrokerAgent",
                                      "ScientistOrTechnologist",
                                      "Student"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "settingsOverride": {
                                "type": "object",
                                "properties": {
                                  "redirectUrl": {
                                    "type": "string",
                                    "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
                                  },
                                  "privacyPolicyUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "electronicDisclosuresUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "depositTermsUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "clientTermsUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "cardholderTermsUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "cashAdvancedTermsUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "debitCardDisclosureUrl": {
                                    "$ref": "../types.json#/components/schemas/Url"
                                  },
                                  "additionalDisclosures": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "title": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string",
                                          "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
                                        }
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "allowedApplicationTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Individual",
                                    "Business",
                                    "SoleProprietorship"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "url"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Application Form Relationships",
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "application": {
                                    "type": "object",
                                    "title": "Application Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "businessApplication",
                                              "individualApplication",
                                              "application"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "type"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createApplicationForm",
        "summary": "Create Application Form",
        "description": "Create an Application Form via API ",
        "requestBody": {
          "description": "Create Application Form Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "applicationForm"
                        ],
                        "default": "applicationForm"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          },
                          "applicantDetails": {
                            "title": "Application Form Prefilled",
                            "type": "object",
                            "properties": {
                              "applicationType": {
                                "type": "string",
                                "enum": [
                                  "Individual",
                                  "Business",
                                  "SoleProprietorship"
                                ]
                              },
                              "fullName": {
                                "$ref": "../types.json#/components/schemas/FullName"
                              },
                              "ssn": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "passport": {
                                "type": "string"
                              },
                              "nationality": {
                                "$ref": "../types.json#/components/schemas/Country"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "stateOfIncorporation": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2
                              },
                              "entityType": {
                                "$ref": "../types.json#/components/schemas/EntityType"
                              },
                              "contact": {
                                "$ref": "../types.json#/components/schemas/Contact"
                              },
                              "officer": {
                                "$ref": "createApplication.json#/components/schemas/CreateOfficer"
                              },
                              "beneficialOwners": {
                                "type": "array",
                                "items": {
                                  "$ref": "createApplication.json#/components/schemas/CreateBeneficialOwner"
                                }
                              },
                              "website": {
                                "type": "string"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "dba": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "ein": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "jwtSubject": {
                                "$ref": "../types.json#/components/schemas/JwtSubject"
                              },
                              "industry": {
                                "$ref": "../types.json#/components/schemas/Industry"
                              },
                              "businessVertical": {
                                "$ref": "../types.json#/components/schemas/BusinessVertical"
                              },
                              "occupation": {
                                "$ref": "../types.json#/components/schemas/Occupation"
                              }
                            },
                            "additionalProperties": false
                          },
                          "settingsOverride": {
                            "type": "object",
                            "properties": {
                              "redirectUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "privacyPolicyUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "electronicDisclosuresUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "depositTermsUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "clientTermsUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "cardholderTermsUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "cashAdvancedTermsUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "debitCardDisclosureUrl": {
                                "$ref": "../types.json#/components/schemas/Url"
                              },
                              "additionalDisclosures": {
                                "$ref": "orgSettings.json#/components/schemas/ApplicationFormAdditionalDisclosures"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireIdVerification": {
                            "type": "object",
                            "properties": {
                              "individual": {
                                "type": "boolean",
                                "default": false
                              },
                              "officer": {
                                "type": "boolean",
                                "default": false
                              },
                              "beneficialOwners": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "allowedApplicationTypes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Individual",
                                "Business",
                                "SoleProprietorship"
                              ]
                            }
                          },
                          "lang": {
                            "type": "string",
                            "enum": [
                              "en",
                              "es"
                            ]
                          },
                          "hideApplicationProgressTracker": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Create Application Form Relationships",
                            "required": [
                              "application"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "application": {
                                "type": "object",
                                "title": "Application Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "businessApplication",
                                          "individualApplication",
                                          "application"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "data"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Application Form Response",
                  "properties": {
                    "data": {
                      "$ref": "./applicationForm.json#/components/schemas/ApplicationForm"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents/{documentId}/multipart": {
      "put": {
        "tags": [
          "unit"
        ],
        "operationId": "uploadApplicationDocumentFile",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to upload a file to"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "ID of the document to upload a file for"
          }
        ],
        "summary": "Upload an application document file. Supports PDF, PNG and JPG files",
        "requestBody": {
          "description": "An application document file",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileType": {
                    "type": "string",
                    "enum": [
                      "application/pdf",
                      "image/png",
                      "image/jpeg"
                    ]
                  }
                },
                "required": [
                  "file",
                  "fileType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Document Response",
                  "properties": {
                    "data": {
                      "$ref": "./document.json#/components/schemas/ApplicationDocument"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents/{documentId}/back/multipart": {
      "put": {
        "tags": [
          "unit"
        ],
        "operationId": "uploadApplicationDocumentFileBackSide",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to upload a file to"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "ID of the document to upload a file for"
          }
        ],
        "summary": "Upload an application document file - Back Side. Supports PDF, PNG and JPG files",
        "description": "Upload an application file via API - Back Side. Supports PDF, PNG and JPG files",
        "requestBody": {
          "description": "Upload an application document file - Back Side. Supports PDF, PNG and JPG files",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "./uploadApplicationDocument.json#/components/schemas/UploadApplicationDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "applicationPaths.json#/components/schemas/UnitDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApplicationDocuments",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to get documents for"
          }
        ],
        "summary": "Get List of Documents",
        "description": "Get List of Documents via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Documents Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./document.json#/components/schemas/ApplicationDocument"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createApplicationDocument",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to create a file for"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "description": "A workaround to properly assign the content type for the request body while providing no body, just set the one possible enum value",
            "schema": {
              "type": "string",
              "enum": [
                "application/vnd.api+json"
              ]
            }
          }
        ],
        "summary": "Create an application document",
        "description": "Create an application document via API",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "applicationPaths.json#/components/schemas/UnitDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents/{documentId}/verify": {
      "put": {
        "tags": [
          "unit"
        ],
        "operationId": "verifyApplicationDocument",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application to verify a file for"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "ID of the document to verify"
          }
        ],
        "summary": "Verify a document",
        "description": "Verify a document via API ",
        "requestBody": {
          "description": "Verify Document",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Verify Document",
                "properties": {
                  "jobId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "applicationPaths.json#/components/schemas/UnitDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "downloadApplicationDocument",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "ID of the document to download"
          }
        ],
        "summary": "Download a Document",
        "description": "Download a Document via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/documents/{documentId}/download/back": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "downloadApplicationBackSideDocument",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "ID of the application"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "documentId",
            "in": "path",
            "required": true,
            "description": "ID of the document to download"
          }
        ],
        "summary": "Download a Document - Back Side",
        "description": "Download a Document - Back Side via API",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/application-forms/{applicationFormId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApplicationForm",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "applicationFormId",
            "in": "path",
            "required": true,
            "description": "ID of the application form to get"
          },
          {
            "name": "included",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get ApplicationForm by Id",
        "description": "Get an Application Form from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Application Form Response With Included",
                  "properties": {
                    "data": {
                      "$ref": "./applicationForm.json#/components/schemas/ApplicationForm"
                    },
                    "included": {
                      "$ref": "./application.json#/components/schemas/Application"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/beneficial-owner/{beneficialOwnerId}": {
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateBusinessBeneficialOwner",
        "description": "Update a Business Beneficial Owner",
        "summary": "Update a Business Beneficial Owner via API",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "beneficialOwnerId",
            "in": "path",
            "required": true,
            "description": "ID of the beneficial owner to update"
          }
        ],
        "requestBody": {
          "description": "Update Business Beneficial Owner Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Update Business Beneficial Owner Request",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Update Business Beneficial Owner",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "beneficialOwner"
                            ],
                            "default": "beneficialOwner"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "occupation": {
                                "type": "string",
                                "enum": [
                                  "ArchitectOrEngineer",
                                  "BusinessAnalystAccountantOrFinancialAdvisor",
                                  "CommunityAndSocialServicesWorker",
                                  "ConstructionMechanicOrMaintenanceWorker",
                                  "Doctor",
                                  "Educator",
                                  "EntertainmentSportsArtsOrMedia",
                                  "ExecutiveOrManager",
                                  "FarmerFishermanForester",
                                  "FoodServiceWorker",
                                  "GigWorker",
                                  "HospitalityOfficeOrAdministrativeSupportWorker",
                                  "HouseholdManager",
                                  "JanitorHousekeeperLandscaper",
                                  "Lawyer",
                                  "ManufacturingOrProductionWorker",
                                  "MilitaryOrPublicSafety",
                                  "NurseHealthcareTechnicianOrHealthcareSupport",
                                  "PersonalCareOrServiceWorker",
                                  "PilotDriverOperator",
                                  "SalesRepresentativeBrokerAgent",
                                  "ScientistOrTechnologist",
                                  "Student"
                                ]
                              },
                              "annualIncome": {
                                "type": "string",
                                "enum": [
                                  "UpTo10k",
                                  "Between10kAnd25k",
                                  "Between25kAnd50k",
                                  "Between50kAnd100k",
                                  "Between100kAnd250k",
                                  "Over250k"
                                ]
                              },
                              "sourceOfIncome": {
                                "type": "string",
                                "enum": [
                                  "EmploymentOrPayrollIncome",
                                  "PartTimeOrContractorIncome",
                                  "InheritancesAndGifts",
                                  "PersonalInvestments",
                                  "BusinessOwnershipInterests",
                                  "GovernmentBenefits"
                                ]
                              }
                            }
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Update Business Beneficial Owner Relationships",
                                "additionalProperties": true,
                                "required": [
                                  "application"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "application": {
                                    "type": "object",
                                    "title": "Application Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "businessApplication",
                                              "individualApplication",
                                              "application"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "type"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "attributes",
                          "type",
                          "relationships"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Beneficial Owner Response",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "beneficialOwner"
                          ],
                          "default": "beneficialOwner"
                        },
                        "attributes": {
                          "title": "Beneficial Owner",
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            },
                            "fullName": {
                              "title": "Full Name",
                              "type": "object",
                              "properties": {
                                "first": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255
                                },
                                "last": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "first",
                                "last"
                              ]
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "phone": {
                              "title": "Phone",
                              "type": "object",
                              "properties": {
                                "countryCode": {
                                  "type": "string"
                                },
                                "number": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "countryCode",
                                "number"
                              ]
                            },
                            "ssn": {
                              "type": "string",
                              "pattern": "^\\d{9}$"
                            },
                            "passport": {
                              "type": "string"
                            },
                            "nationality": {
                              "type": "string",
                              "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                            },
                            "matriculaConsular": {
                              "type": "string"
                            },
                            "address": {
                              "title": "Address",
                              "type": "object",
                              "properties": {
                                "street": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "pattern": "^.*$"
                                },
                                "street2": {
                                  "type": "string",
                                  "nullable": true,
                                  "pattern": "^.*$"
                                },
                                "city": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "pattern": "^.*$"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string",
                                  "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                },
                                "country": {
                                  "type": "string",
                                  "default": "US"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "street",
                                "city",
                                "postalCode",
                                "country",
                                "state"
                              ]
                            },
                            "dateOfBirth": {
                              "type": "string",
                              "format": "date"
                            },
                            "evaluationId": {
                              "type": "string"
                            },
                            "percentage": {
                              "type": "integer",
                              "minimum": 25,
                              "maximum": 100
                            },
                            "evaluationFlags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "maskedSSN": {
                              "type": "string",
                              "pattern": "^\\*{5}\\d{4}$"
                            },
                            "maskedPassport": {
                              "type": "string"
                            },
                            "maskedMatriculaConsular": {
                              "type": "string"
                            },
                            "idTheftScore": {
                              "type": "integer"
                            },
                            "evaluationCodes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "occupation": {
                              "type": "string",
                              "enum": [
                                "ArchitectOrEngineer",
                                "BusinessAnalystAccountantOrFinancialAdvisor",
                                "CommunityAndSocialServicesWorker",
                                "ConstructionMechanicOrMaintenanceWorker",
                                "Doctor",
                                "Educator",
                                "EntertainmentSportsArtsOrMedia",
                                "ExecutiveOrManager",
                                "FarmerFishermanForester",
                                "FoodServiceWorker",
                                "GigWorker",
                                "HospitalityOfficeOrAdministrativeSupportWorker",
                                "HouseholdManager",
                                "JanitorHousekeeperLandscaper",
                                "Lawyer",
                                "ManufacturingOrProductionWorker",
                                "MilitaryOrPublicSafety",
                                "NurseHealthcareTechnicianOrHealthcareSupport",
                                "PersonalCareOrServiceWorker",
                                "PilotDriverOperator",
                                "SalesRepresentativeBrokerAgent",
                                "ScientistOrTechnologist",
                                "Student"
                              ]
                            },
                            "annualIncome": {
                              "type": "string",
                              "enum": [
                                "UpTo10k",
                                "Between10kAnd25k",
                                "Between25kAnd50k",
                                "Between50kAnd100k",
                                "Between100kAnd250k",
                                "Over250k"
                              ]
                            },
                            "sourceOfIncome": {
                              "type": "string",
                              "enum": [
                                "EmploymentOrPayrollIncome",
                                "PartTimeOrContractorIncome",
                                "InheritancesAndGifts",
                                "PersonalInvestments",
                                "BusinessOwnershipInterests",
                                "GovernmentBenefits"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAccountsList",
        "summary": "Get List Accounts",
        "description": "Get List Accounts from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Open",
                      "Frozen",
                      "Closed"
                    ]
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "credit"
                    ]
                  }
                },
                "fromBalance": {
                  "type": "number"
                },
                "toBalance": {
                  "type": "number"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Accounts List Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Account Document",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "depositAccount",
                              "creditAccount",
                              "walletAccount"
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "depositAccount": "#/components/schemas/DepositAccount",
                            "creditAccount": "#/components/schemas/CreditAccount",
                            "walletAccount": "#/components/schemas/WalletAccount"
                          }
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "title": "Customer",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualCustomer",
                              "businessCustomer"
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "individualCustomer": "#/components/schemas/IndividualCustomer",
                            "businessCustomer": "#/components/schemas/BusinessCustomer",
                            "businessWalletCustomer": "#/components/schemas/BusinessWalletCustomer"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unexpected error",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createAccount",
        "summary": "Create Account",
        "description": "Create Account via API ",
        "requestBody": {
          "description": "Create Account Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Credit Account",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "creditAccount",
                            "enum": [
                              "creditAccount"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "creditTerms": {
                                "type": "string"
                              },
                              "creditLimit": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "creditTerms",
                              "creditLimit"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Credit Account Relationships",
                                "type": "object",
                                "required": [
                                  "customer"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "title": "Create Deposit Account",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "depositAccount",
                            "enum": [
                              "depositAccount"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "depositProduct": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "depositProduct"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "$ref": "../relationships.json#/components/schemas/CustomerRelationship"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customers": {
                                    "type": "object",
                                    "title": "Customers Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            },
                                            "type": {
                                              "type": "string",
                                              "default": "customer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "walletAccount",
                            "enum": [
                              "walletAccount"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "walletTerms": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              }
                            },
                            "required": [
                              "walletTerms"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Wallet Account Relationships",
                                "type": "object",
                                "required": [
                                  "customer"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CustomerRelationship"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Account Response",
                  "properties": {
                    "data": {
                      "$ref": "./account.json#/components/schemas/Account"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAccount",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Account by Id",
        "description": "Get an Account from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Account Response With Included",
                  "properties": {
                    "data": {
                      "$ref": "./account.json#/components/schemas/Account"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "$ref": "../customer/customer.json#/components/schemas/Customer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateAccount",
        "summary": "Update Account",
        "description": "Update an Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to update"
          }
        ],
        "requestBody": {
          "description": "Update Account Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Account",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Deposit Account",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "depositAccount"
                            ],
                            "default": "depositAccount"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "depositProduct": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Credit Account",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "creditAccount"
                            ],
                            "default": "creditAccount"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "creditLimit": {
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/limits": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAccountLimits",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get"
          }
        ],
        "summary": "Get Account Limits by Id",
        "description": "Get Account Limits from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Get Account Limits Response",
                  "properties": {
                    "data": {
                      "title": "Account Limits Resource",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "limits",
                            "creditLimits",
                            "walletLimits"
                          ]
                        }
                      },
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "limits": "#/components/schemas/DepositLimits",
                          "creditLimits": "#/components/schemas/CreditLimits",
                          "walletLimits": "#/components/schemas/WalletLimits"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/unfreeze": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "unfreezeAccount",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get"
          }
        ],
        "summary": "Unfreeze Account by Id",
        "description": "Unfreeze an Account via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/freeze": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "freezeAccount",
        "summary": "Freeze Account by Id",
        "description": "Freeze Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to freeze"
          }
        ],
        "requestBody": {
          "description": "Freeze Account Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "creditAccountFreeze",
                          "accountFreeze",
                          "walletAccountFreeze"
                        ]
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "Fraud",
                              "Other"
                            ]
                          },
                          "reasonText": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/close": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "closeAccount",
        "summary": "Close an Account by Id",
        "description": "Close an Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to close"
          }
        ],
        "requestBody": {
          "description": "Close Account Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Close Account Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "creditAccountClose",
                          "depositAccountClose",
                          "walletAccountClose"
                        ]
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "ByCustomer",
                              "Fraud"
                            ],
                            "default": "ByCustomer"
                          },
                          "fraudReason": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "ACHActivity",
                              "CardActivity",
                              "CheckActivity",
                              "ApplicationHistory",
                              "AccountActivity",
                              "ClientIdentified",
                              "IdentityTheft",
                              "LinkedToFraudulentCustomer"
                            ]
                          },
                          "bankReason": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "ProhibitedBusiness",
                              "MissingCddEdd",
                              "NonUsOperation",
                              "SuspectedFraud"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/reopen": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "reopenAccount",
        "summary": "Reopen an Account by Id",
        "description": "Reopen an Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to close"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/enter-daca": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "enterControlAgreementForAccount",
        "summary": "Enter Account Control Agreement by Id",
        "description": "Enter Control Agreement for Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/activate-daca": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "activateControlAgreementForAccount",
        "summary": "Activate Account Control Agreement by Id",
        "description": "Activate Control Agreement for Account via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/deactivate-daca": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "deactivateControlAgreementForAccount",
        "summary": "Deactivate Account Control Agreement by Id",
        "description": "Deactivate Control Agreement for Account via API",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAccountResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/account-end-of-day": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAccountBalanceHistory",
        "summary": "Get Account Balance History",
        "description": "Get Account Balance History List from API ",
        "parameters": [
          {
            "$ref": "../types.json#/components/schemas/PageQuery"
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "accountId": {
                  "type": "string"
                },
                "since": {
                  "type": "string",
                  "format": "date"
                },
                "until": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Account Balance History Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Account End Of Day Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "accountEndOfDay"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "balance": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "hold": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "available": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "overdraftLimit": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "required": [
                              "date",
                              "balance",
                              "hold",
                              "available"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "customer",
                                  "account"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id",
                          "relationships",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/repayment-information": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRepaymentInformation",
        "summary": "Get Repayment Information",
        "description": "Retrieve the repayment information for a specific account via API",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get repayment information for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Credit Account Repayment Information Response",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "creditAccountRepaymentInformation"
                          ],
                          "default": "creditAccountRepaymentInformation"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "remainingAmountDue": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "remainingAmountOverdue": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "initiatedRepayments": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "statementPeriodStart": {
                              "type": "string",
                              "format": "date"
                            },
                            "statementPeriodEnd": {
                              "type": "string",
                              "format": "date"
                            },
                            "nextRepaymentDueDate": {
                              "type": "string",
                              "format": "date"
                            }
                          },
                          "required": [
                            "remainingAmountDue",
                            "remainingAmountOverdue",
                            "initiatedRepayments",
                            "statementPeriodStart",
                            "statementPeriodEnd",
                            "nextRepaymentDueDate"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/deposit-products": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getDepositProductsList",
        "summary": "Get Deposit Products",
        "description": "Retrieve the list of available deposit products compatible to the account.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get deposit products for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Credit Account Repayment Information Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "accountDepositProduct"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/accounts/{accountId}/relationships/customers": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "addAccountOwners",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to add owners to"
          }
        ],
        "summary": "Add Owners to Account by Id",
        "description": "Add Owners to Account via API ",
        "requestBody": {
          "description": "Add Account Owners Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "default": "customer"
                        },
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Deposit Account Response",
                  "properties": {
                    "data": {
                      "title": "Deposit Account",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Account Document",
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "../types.json#/components/schemas/Identifier"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "depositAccount",
                                "creditAccount",
                                "walletAccount"
                              ]
                            }
                          },
                          "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                              "depositAccount": "#/components/schemas/DepositAccount",
                              "creditAccount": "#/components/schemas/CreditAccount",
                              "walletAccount": "#/components/schemas/WalletAccount"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "depositProduct": {
                                  "type": "string"
                                },
                                "routingNumber": {
                                  "type": "string",
                                  "pattern": "^\\d{9}$"
                                },
                                "accountNumber": {
                                  "type": "string",
                                  "pattern": "^\\d{10,12}$"
                                },
                                "secondaryAccountNumber": {
                                  "type": "object",
                                  "properties": {
                                    "routingNumber": {
                                      "type": "string",
                                      "pattern": "^\\d{9}$"
                                    },
                                    "accountNumber": {
                                      "type": "string",
                                      "pattern": "^\\d{10,12}$"
                                    }
                                  },
                                  "required": [
                                    "routingNumber",
                                    "accountNumber"
                                  ]
                                },
                                "currency": {
                                  "type": "string",
                                  "default": "USD"
                                },
                                "balance": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "overdraftLimit": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "format": "int64"
                                },
                                "hold": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "available": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "tags": {
                                  "type": "object",
                                  "maxProperties": 15,
                                  "additionalProperties": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  }
                                },
                                "status": {
                                  "enum": [
                                    "Open",
                                    "Closed",
                                    "Frozen"
                                  ]
                                },
                                "closeReason": {
                                  "type": "string",
                                  "enum": [
                                    "ByCustomer",
                                    "Fraud",
                                    "NegativeBalance",
                                    "ByBank",
                                    "BreachOfTermsAndConditions",
                                    "NoAccountActivity",
                                    "ProgramChange"
                                  ]
                                },
                                "fraudReason": {
                                  "type": "string",
                                  "enum": [
                                    "ACHActivity",
                                    "CardActivity",
                                    "CheckActivity",
                                    "ApplicationHistory",
                                    "AccountActivity",
                                    "ClientIdentified",
                                    "IdentityTheft",
                                    "LinkedToFraudulentCustomer"
                                  ]
                                },
                                "closeReasonText": {
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "freezeReason": {
                                  "type": "string"
                                },
                                "maskedAccountNumber": {
                                  "type": "string",
                                  "pattern": "^\\*{6,8}\\d{4}$"
                                },
                                "isOverdrawnWithinLimit": {
                                  "type": "boolean"
                                },
                                "dacaStatus": {
                                  "enum": [
                                    "Activated",
                                    "Entered"
                                  ]
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "createdAt",
                                "name",
                                "depositProduct",
                                "routingNumber",
                                "currency",
                                "balance",
                                "hold",
                                "available",
                                "tags",
                                "status"
                              ]
                            },
                            "relationships": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "title": "Deposit Account Relationships",
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "customer": {
                                      "type": "object",
                                      "title": "Customer Relationship",
                                      "properties": {
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "customer",
                                                "businessCustomer",
                                                "individualCustomer"
                                              ]
                                            },
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "id"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "data"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "attributes",
                            "relationships"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      },
      "delete": {
        "tags": [
          "unit"
        ],
        "operationId": "removeAccountOwners",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to add owners to"
          }
        ],
        "summary": "Remove Owners from Account by Id",
        "description": "Remove Owners from Account via API ",
        "requestBody": {
          "description": "Remove Account Owners Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DepositAccountOwners"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitDepositAccountResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCustomer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to get"
          }
        ],
        "summary": "Get Customer by Id",
        "description": "Get a Customer from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Customer Response",
                  "properties": {
                    "data": {
                      "title": "Customer",
                      "type": "object",
                      "properties": {
                        "id": {
                          "$ref": "../types.json#/components/schemas/Identifier"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "individualCustomer",
                            "businessCustomer"
                          ]
                        }
                      },
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "individualCustomer": "#/components/schemas/IndividualCustomer",
                          "businessCustomer": "#/components/schemas/BusinessCustomer",
                          "businessWalletCustomer": "#/components/schemas/BusinessWalletCustomer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateCustomer",
        "summary": "Update Customer",
        "description": "Update an Customer via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to update"
          }
        ],
        "requestBody": {
          "description": "Update Customer Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Customer",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Individual Customer",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualCustomer"
                            ],
                            "default": "individualCustomer"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "phone": {
                                "title": "Phone",
                                "type": "object",
                                "properties": {
                                  "countryCode": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "countryCode",
                                  "number"
                                ]
                              },
                              "address": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "dba": {
                                "type": "string",
                                "nullable": true
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "authorizedUsers": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                  "title": "Authorized User",
                                  "type": "object",
                                  "properties": {
                                    "fullName": {
                                      "$ref": "#/components/schemas/FullName"
                                    },
                                    "email": {
                                      "$ref": "#/components/schemas/Email"
                                    },
                                    "phone": {
                                      "$ref": "#/components/schemas/Phone"
                                    },
                                    "jwtSubject": {
                                      "$ref": "#/components/schemas/JwtSubject"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "fullName",
                                    "email",
                                    "phone"
                                  ]
                                }
                              },
                              "jwtSubject": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "title": "Update Business Customer",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessCustomer"
                            ],
                            "default": "businessCustomer"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "dba": {
                                "type": "string",
                                "nullable": true
                              },
                              "ein": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone",
                                "nullable": true
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address",
                                "nullable": true
                              },
                              "contact": {
                                "allOf": [
                                  {
                                    "title": "Contact",
                                    "type": "object",
                                    "properties": {
                                      "fullName": {
                                        "$ref": "#/components/schemas/FullName"
                                      },
                                      "email": {
                                        "$ref": "#/components/schemas/Email"
                                      },
                                      "phone": {
                                        "$ref": "#/components/schemas/Phone"
                                      },
                                      "jwtSubject": {
                                        "$ref": "#/components/schemas/JwtSubject"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "fullName",
                                      "email",
                                      "phone"
                                    ]
                                  }
                                ],
                                "required": [
                                  "fullName"
                                ]
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags",
                                "nullable": true
                              },
                              "authorizedUsers": {
                                "type": "array",
                                "nullable": true,
                                "items": {
                                  "$ref": "../types.json#/components/schemas/AuthorizedUser"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCustomerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCustomersList",
        "summary": "Get Customers List",
        "description": "Get Customers List from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Active",
                      "Archived"
                    ]
                  }
                },
                "email": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Customers List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./customer.json#/components/schemas/Customer"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/archive": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "archiveCustomer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to archive"
          }
        ],
        "requestBody": {
          "description": "Archive Customer Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Archive Customer Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "archiveCustomer"
                        ],
                        "default": "archiveCustomer"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "Inactive",
                              "FraudACHActivity",
                              "FraudCardActivity",
                              "FraudCheckActivity",
                              "FraudApplicationHistory",
                              "FraudAccountActivity",
                              "FraudClientIdentified",
                              "FraudLinkedToFraudulentCustomer"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "attributes"
                ]
              }
            }
          }
        },
        "summary": "Archive Customer by Id",
        "description": "Archive a Customer via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCustomerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/authorized-users": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "addAuthorizedUsers",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to add authorized users to"
          }
        ],
        "requestBody": {
          "description": "Add Authorized Users Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "addAuthorizedUsers"
                        ],
                        "default": "addAuthorizedUsers"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "authorizedUsers": {
                            "type": "array",
                            "items": {
                              "title": "Authorized User",
                              "type": "object",
                              "properties": {
                                "fullName": {
                                  "$ref": "#/components/schemas/FullName"
                                },
                                "email": {
                                  "$ref": "#/components/schemas/Email"
                                },
                                "phone": {
                                  "$ref": "#/components/schemas/Phone"
                                },
                                "jwtSubject": {
                                  "$ref": "#/components/schemas/JwtSubject"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "fullName",
                                "email",
                                "phone"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Add Authorized Users by Id",
        "description": "Add Authorized Users via API",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCustomerResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "unit"
        ],
        "operationId": "removeAuthorizedUsers",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to remove authorized users from"
          }
        ],
        "requestBody": {
          "description": "Add Authorized Users Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "removeAuthorizedUsers"
                        ],
                        "default": "removeAuthorizedUsers"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "authorizedUsersEmails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "email"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Remove Authorized Users by Id",
        "description": "Remove Authorized Users via API",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCustomerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getPaymentsList",
        "summary": "Get List Payments",
        "description": "Get List Payments from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "counterpartyAccountId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Rejected",
                      "Pending",
                      "Canceled",
                      "Pending Review",
                      "Clearing",
                      "Sent",
                      "Returned"
                    ]
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "AchPayment",
                      "BookPayment",
                      "WirePayment"
                    ]
                  }
                },
                "direction": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Debit",
                      "Credit"
                    ]
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "recurringPaymentId": {
                  "type": "integer"
                },
                "feature": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "SameDay",
                      "RecurringPayment"
                    ]
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Payments List Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Payment Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achPayment",
                              "bookPayment",
                              "wirePayment"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "achPayment": "#/components/schemas/AchPayment",
                            "bookPayment": "#/components/schemas/BookPayment",
                            "wirePayment": "#/components/schemas/WirePayment"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object"
                          },
                          "relationships": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createPayment",
        "summary": "Create a Payment",
        "description": "Create a Payment via API ",
        "requestBody": {
          "description": "Create Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create ACH Payment to inline Counterparty",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achPayment"
                            ],
                            "default": "achPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "description": {
                                "type": "string"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "Debit",
                                  "Credit"
                                ]
                              },
                              "counterparty": {
                                "title": "Payment Counterparty",
                                "type": "object",
                                "properties": {
                                  "routingNumber": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "pattern": "^\\d{1,17}$"
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "enum": [
                                      "Checking",
                                      "Savings",
                                      "Loan"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 50
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "routingNumber",
                                  "accountNumber",
                                  "accountType",
                                  "name"
                                ]
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "secCode": {
                                "type": "string",
                                "enum": [
                                  "WEB",
                                  "CCD",
                                  "PPD"
                                ]
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "direction",
                              "counterparty"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Ach Payment Relationships"
                              },
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "account"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "account": {
                                        "type": "object",
                                        "title": "Account Relationship",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "account",
                                                  "depositAccount",
                                                  "creditAccount",
                                                  "batchAccount"
                                                ]
                                              },
                                              "id": {
                                                "$ref": "./types.json#/components/schemas/Identifier"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "id"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "data"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create ACH Payment to linked Counterparty",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achPayment"
                            ],
                            "default": "achPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "description": {
                                "type": "string"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "Debit",
                                  "Credit"
                                ]
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "verifyCounterpartyBalance": {
                                "type": "boolean",
                                "default": false
                              },
                              "secCode": {
                                "type": "string",
                                "enum": [
                                  "WEB",
                                  "CCD",
                                  "PPD"
                                ]
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "direction"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Ach Payment Counterparty Relationships"
                              },
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "account",
                                      "counterparty"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "counterparty": {
                                        "type": "object",
                                        "title": "Counterparty Relationship",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "counterparty"
                                                ],
                                                "default": "counterparty"
                                              },
                                              "id": {
                                                "$ref": "./types.json#/components/schemas/Identifier"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "id"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "data"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create ACH Payment with Plaid token",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achPayment"
                            ],
                            "default": "achPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "description": {
                                "type": "string"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "Debit",
                                  "Credit"
                                ]
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "plaidProcessorToken": {
                                "type": "string",
                                "pattern": "^processor-.*$"
                              },
                              "counterpartyName": {
                                "type": "string"
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "verifyCounterpartyBalance": {
                                "type": "boolean",
                                "default": false
                              },
                              "secCode": {
                                "type": "string",
                                "enum": [
                                  "WEB",
                                  "CCD",
                                  "PPD"
                                ]
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "direction",
                              "plaidProcessorToken"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Ach Payment Plaid Relationships"
                              },
                              {
                                "$ref": "#/components/schemas/CreatePaymentRelationships"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Book Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bookPayment"
                            ],
                            "default": "bookPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "description": {
                                "type": "string"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "transactionSummaryOverride": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "amount",
                              "description"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Book Payment Relationships"
                              },
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "account",
                                      "counterpartyAccount"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "counterpartyAccount": {
                                        "type": "object",
                                        "title": "Counterparty Account Relationship",
                                        "properties": {
                                          "data": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "account",
                                                  "depositAccount"
                                                ]
                                              },
                                              "id": {
                                                "$ref": "./types.json#/components/schemas/Identifier"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "id"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": [
                                          "data"
                                        ],
                                        "additionalProperties": false
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Wire Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "wirePayment"
                            ],
                            "default": "wirePayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "Credit"
                                ]
                              },
                              "description": {
                                "type": "string"
                              },
                              "counterparty": {
                                "title": "WireCounterparty",
                                "type": "object",
                                "properties": {
                                  "routingNumber": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "maxLength": 17
                                  },
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 50
                                  },
                                  "address": {
                                    "title": "Address",
                                    "type": "object",
                                    "properties": {
                                      "street": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "street2": {
                                        "type": "string",
                                        "nullable": true,
                                        "pattern": "^.*$"
                                      },
                                      "city": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "type": "string",
                                        "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                      },
                                      "country": {
                                        "type": "string",
                                        "default": "US"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "street",
                                      "city",
                                      "postalCode",
                                      "country",
                                      "state"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "routingNumber",
                                  "accountNumber",
                                  "address",
                                  "name"
                                ]
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "counterparty"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Wire Payment Relationships"
                              },
                              {
                                "$ref": "#/components/schemas/CreatePaymentRelationships"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Push To Card Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pushToCardPayment"
                            ],
                            "default": "pushToCardPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "description": {
                                "type": "string"
                              },
                              "configuration": {
                                "type": "object",
                                "properties": {
                                  "astra": {
                                    "title": "AstraPushToCardConfiguration",
                                    "type": "object",
                                    "properties": {
                                      "authToken": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "debitFeePercent": {
                                        "type": "number"
                                      },
                                      "institutionId": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "destinationCardId": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "routingNumber": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "accountNumber": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "accountName": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "referenceId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "debitFeePercent",
                                      "institutionId",
                                      "destinationCardId",
                                      "routingNumber",
                                      "accountNumber",
                                      "referenceId"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "configuration"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "title": "Create Push To Card Payment Relationships"
                              },
                              {
                                "$ref": "#/components/schemas/CreatePaymentRelationships"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "attributes",
                          "relationships"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Payment Response",
                  "properties": {
                    "data": {
                      "$ref": "./payment.json#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to get"
          },
          {
            "name": "included",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Payment by Id",
        "description": "Get a Payment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Payment Response With Included",
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "./payment.json#/components/schemas/Payment"
                    },
                    "included": {
                      "$ref": "../types.json#/components/schemas/IncludedResource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updatePayment",
        "summary": "Update Payment",
        "description": "Update an Payment via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to update"
          }
        ],
        "requestBody": {
          "description": "Update Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Payment",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update ACH Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achPayment"
                            ],
                            "default": "achPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "title": "Update Ach Payment Attributes",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "clearingDaysOverride": {
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Book Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bookPayment"
                            ],
                            "default": "bookPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "title": "Update Book Payment Attributes",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update ACH Received Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achReceivedPayment"
                            ],
                            "default": "achReceivedPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "title": "Update Ach Received Payment Attributes",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{paymentId}/cancel": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "cancelPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to cancel"
          }
        ],
        "summary": "Cancel a Payment by Id",
        "description": "Cancel a Payment via API ",
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/store-locations": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCashDepositStoreLocationsList",
        "summary": "Get Cash Deposit Store Locations List By Coordinates",
        "description": "Get Cash Deposit Store Locations List By Coordinates from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "postalCode": {
                  "type": "string"
                },
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "longitude",
                    "latitude"
                  ]
                },
                "serviceType": {
                  "type": "string",
                  "enum": [
                    "Swipe",
                    "Barcode"
                  ]
                }
              },
              "required": [
                "serviceType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Store Location",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "storeLocation"
                            ],
                            "default": "storeLocation"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "storeId": {
                                "type": "string"
                              },
                              "retailerName": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              },
                              "address": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "coordinates": {
                                "type": "object",
                                "properties": {
                                  "longitude": {
                                    "type": "number"
                                  },
                                  "latitude": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "longitude",
                                  "latitude"
                                ]
                              },
                              "distance": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "storeId",
                              "retailerName",
                              "phone",
                              "address",
                              "coordinates",
                              "distance"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cash-deposits/barcodes": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "generateBarcode",
        "summary": "Generate Cash Deposit Barcode",
        "description": "Generate Cash Deposit Barcode via API ",
        "requestBody": {
          "description": "Generate Cash Deposit Barcode Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "cashDepositBarcode"
                        ],
                        "default": "cashDepositBarcode"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "storeId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "storeId"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Generate Barcode Relationships",
                            "required": [
                              "account",
                              "customer"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "customer": {
                                "type": "object",
                                "title": "Customer Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "customer",
                                          "businessCustomer",
                                          "individualCustomer"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "data"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Cash Deposit Barcode Response",
                  "properties": {
                    "data": {
                      "title": "Cash Deposit Barcode",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "cashDepositBarcode"
                          ],
                          "default": "cashDepositBarcode"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "barcodeNumber": {
                              "type": "string"
                            },
                            "expiration": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "tags": {
                              "type": "object",
                              "maxProperties": 15,
                              "additionalProperties": {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "amount",
                            "description"
                          ],
                          "additionalProperties": false
                        },
                        "relationships": {
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Cash Deposit Barcode",
                              "required": [
                                "account",
                                "customer"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "object",
                                  "title": "Account Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "account",
                                            "depositAccount",
                                            "creditAccount",
                                            "batchAccount"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "type": "object",
                                  "title": "Customer Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "customer",
                                            "businessCustomer",
                                            "individualCustomer"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "data"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "attributes",
                        "relationships"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cash-deposits/barcodes/{barcodeNumber}/image": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getBarcodeImage",
        "summary": "Get Barcode Image By Barcode Number",
        "description": "Get Barcode Image By Barcode Number from API ",
        "parameters": [
          {
            "name": "barcodeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/received-payments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getReceivedPaymentsList",
        "parameters": [
          {
            "$ref": "../types.json#/components/schemas/PageQuery"
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Advanced",
                      "PendingReview",
                      "MarkedForReturn",
                      "Returned",
                      "Completed"
                    ]
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "includeCompleted": {
                  "type": "boolean"
                },
                "canBeReprocessed": {
                  "type": "boolean"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Received Payments List",
        "description": "Get Received Payments from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Received Payment List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Received Payment Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achReceivedPayment"
                            ],
                            "default": "achReceivedPayment"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Advanced",
                                  "PendingReview",
                                  "MarkedForReturn",
                                  "Returned",
                                  "Completed"
                                ]
                              },
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "completionDate": {
                                "type": "string"
                              },
                              "direction": {
                                "type": "string",
                                "enum": [
                                  "Debit",
                                  "Credit"
                                ]
                              },
                              "wasAdvanced": {
                                "type": "boolean"
                              },
                              "isAdvanceable": {
                                "type": "boolean"
                              },
                              "isAdvaceable": {
                                "type": "boolean"
                              },
                              "companyName": {
                                "type": "string"
                              },
                              "counterpartyRoutingNumber": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "traceNumber": {
                                "type": "string"
                              },
                              "secCode": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 3
                              },
                              "returnReason": {
                                "type": "string"
                              },
                              "receivingEntityName": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "createdAt",
                              "amount",
                              "description",
                              "status",
                              "completionDate",
                              "companyName",
                              "counterpartyRoutingNumber",
                              "traceNumber",
                              "wasAdvanced",
                              "direction",
                              "secCode"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account",
                                  "customer"
                                ],
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "receivePaymentTransaction": {
                                    "type": "object",
                                    "title": "Receive Payment Transaction Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "default": "transaction"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "paymentAdvanceTransaction": {
                                    "type": "object",
                                    "title": "Payment Advance Transaction Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "default": "transaction"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "repayPaymentAdvanceTransaction": {
                                    "type": "object",
                                    "title": "Repay Payment Advance Transaction Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "default": "transaction"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "included": {
                      "$ref": "../types.json#/components/schemas/IncludedResource"
                    },
                    "meta": {
                      "$ref": "../types.json#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/returns/{transactionId}": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "returnReceivedACHTransaction",
        "summary": "Return Received ACH Transaction",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to return"
          }
        ],
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "atmTransaction"
                        ],
                        "default": "atmTransaction"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "InsufficientFunds",
                              "AccountClosed",
                              "NoAccount",
                              "InvalidAccountNumberStructure",
                              "UnauthorizedDebitToConsumer",
                              "ReturnedPerOdfiRequest",
                              "AuthorizationRevokedByCustomer",
                              "PaymentStopped",
                              "UncollectedFunds",
                              "CustomerAdvisesNotAuthorized",
                              "CheckTruncationEntryReturned",
                              "BranchSoldToAnotherDfi",
                              "RdfiNotQualifiedToParticipate",
                              "RepresentativePayeeDeceasedOrUnableToContinue",
                              "BeneficiaryOrBankAccountHolderDeceased",
                              "AccountFrozen",
                              "FileRecordEditCriteria",
                              "ImproperEffectiveEntryDate",
                              "AmountFieldError",
                              "NonTransactionAccount",
                              "InvalidCompanyIdentification",
                              "InvalidIndividualIdNumber",
                              "CreditEntryRefusedByReceiver",
                              "DuplicateEntry",
                              "AddendaError",
                              "MandatoryFieldError",
                              "TraceNumberError",
                              "RoutingNumberCheckDigitError",
                              "CorporateCustomerAdvisesNotAuthorized",
                              "RdfiNotParticipantInCheckTruncationProgram",
                              "PermissibleReturnEntry",
                              "RdfiNonSettlement",
                              "ReturnOfXckEntry",
                              "LimitedParticipationDfi",
                              "ReturnOfImproperDebitEntry",
                              "ReturnOfImproperCreditEntry",
                              "SourceDocumentPresentedForPayment",
                              "StopPaymentOnSourceDocument",
                              "ImproperSourceDocument",
                              "InvalidIndividualOrCompanyName",
                              "IncorrectlyCodedOutboundInternationalPayment"
                            ]
                          }
                        },
                        "required": [
                          "reason"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Create Atm Deposit Simulation Relationships",
                            "required": [
                              "account"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "description": "Return Received ACH Transaction via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Returned Received ACH Transaction Response",
                  "properties": {
                    "data": {
                      "title": "Returned Received ACH",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Transaction Resource",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "pattern": "^[1-9]\\d*$"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "originatedAchTransaction",
                                "receivedAchTransaction",
                                "returnedAchTransaction",
                                "returnedReceivedAchTransaction",
                                "dishonoredAchTransaction",
                                "purchaseTransaction",
                                "bookTransaction",
                                "atmTransaction",
                                "feeTransaction",
                                "cardTransaction",
                                "releaseTransaction",
                                "wireTransaction",
                                "interestShareTransaction",
                                "interestTransaction",
                                "adjustmentTransaction",
                                "disputeTransaction",
                                "checkDepositTransaction",
                                "returnedCheckDepositTransaction",
                                "sponsoredInterestTransaction",
                                "paymentAdvanceTransaction",
                                "repaidPaymentAdvanceTransaction",
                                "chargebackTransaction",
                                "rewardTransaction",
                                "negativeBalanceCoverageTransaction",
                                "accountLowBalanceClosureTransaction",
                                "bankRepaymentTransaction",
                                "cashDepositTransaction",
                                "customerRepaymentTransaction",
                                "customerRepaymentReturnedTransaction",
                                "checkPaymentTransaction",
                                "returnedCheckPaymentTransaction",
                                "cardReversalTransaction",
                                "feeReversalTransaction",
                                "pushToCardReversalTransaction",
                                "paymentCanceledTransaction"
                              ]
                            }
                          },
                          "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                              "originatedAchTransaction": "#/components/schemas/OriginatedAchTransaction",
                              "receivedAchTransaction": "#/components/schemas/ReceivedAchTransaction",
                              "returnedAchTransaction": "#/components/schemas/ReturnedAchTransaction",
                              "returnedReceivedAchTransaction": "#/components/schemas/ReturnedReceivedAchTransaction",
                              "dishonoredAchTransaction": "#/components/schemas/DishonoredAchTransaction",
                              "purchaseTransaction": "#/components/schemas/PurchaseTransaction",
                              "bookTransaction": "#/components/schemas/BookTransaction",
                              "atmTransaction": "#/components/schemas/AtmTransaction",
                              "feeTransaction": "#/components/schemas/FeeTransaction",
                              "cardTransaction": "#/components/schemas/CardTransaction",
                              "releaseTransaction": "#/components/schemas/ReleaseTransaction",
                              "wireTransaction": "#/components/schemas/WireTransaction",
                              "interestShareTransaction": "#/components/schemas/InterestShareTransaction",
                              "interestTransaction": "#/components/schemas/InterestTransaction",
                              "adjustmentTransaction": "#/components/schemas/AdjustmentTransaction",
                              "disputeTransaction": "#/components/schemas/DisputeTransaction",
                              "checkDepositTransaction": "#/components/schemas/CheckDepositTransaction",
                              "returnedCheckDepositTransaction": "#/components/schemas/ReturnedCheckDepositTransaction",
                              "sponsoredInterestTransaction": "#/components/schemas/SponsoredInterestTransaction",
                              "paymentAdvanceTransaction": "#/components/schemas/PaymentAdvanceTransaction",
                              "repaidPaymentAdvanceTransaction": "#/components/schemas/RepaidPaymentAdvanceTransaction",
                              "chargebackTransaction": "#/components/schemas/ChargebackTransaction",
                              "rewardTransaction": "#/components/schemas/RewardTransaction",
                              "negativeBalanceCoverageTransaction": "#/components/schemas/NegativeBalanceCoverageTransaction",
                              "accountLowBalanceClosureTransaction": "#/components/schemas/AccountLowBalanceClosureTransaction",
                              "bankRepaymentTransaction": "#/components/schemas/BankRepaymentTransaction",
                              "cashDepositTransaction": "#/components/schemas/CashDepositTransaction",
                              "customerRepaymentTransaction": "#/components/schemas/CustomerRepaymentTransaction",
                              "customerRepaymentReturnedTransaction": "#/components/schemas/CustomerRepaymentReturnedTransaction",
                              "checkPaymentTransaction": "#/components/schemas/CheckPaymentTransaction",
                              "returnedCheckPaymentTransaction": "#/components/schemas/ReturnedCheckPaymentTransaction",
                              "cardReversalTransaction": "#/components/schemas/CardReversalTransaction",
                              "feeReversalTransaction": "#/components/schemas/FeeReversalTransaction",
                              "pushToCardReversalTransaction": "#/components/schemas/PushToCardReversalTransaction",
                              "paymentCanceledTransaction": "#/components/schemas/PaymentCanceledTransaction"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "direction": {
                                  "type": "string",
                                  "enum": [
                                    "Credit",
                                    "Debit"
                                  ]
                                },
                                "amount": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "balance": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "companyName": {
                                  "type": "string"
                                },
                                "reason": {
                                  "type": "string"
                                },
                                "tags": {
                                  "type": "object",
                                  "maxProperties": 15,
                                  "additionalProperties": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  }
                                }
                              },
                              "required": [
                                "createdAt",
                                "amount",
                                "direction",
                                "balance",
                                "summary",
                                "companyName",
                                "reason"
                              ],
                              "additionalProperties": false
                            },
                            "relationships": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "account",
                                    "returned"
                                  ]
                                },
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "account"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "account": {
                                          "type": "object",
                                          "title": "Account Relationship",
                                          "properties": {
                                            "data": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "account",
                                                    "depositAccount",
                                                    "creditAccount",
                                                    "batchAccount"
                                                  ]
                                                },
                                                "id": {
                                                  "$ref": "./types.json#/components/schemas/Identifier"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "id"
                                              ],
                                              "additionalProperties": false
                                            }
                                          },
                                          "required": [
                                            "data"
                                          ],
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "customer": {
                                          "type": "object",
                                          "title": "Customer Relationship",
                                          "properties": {
                                            "data": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "customer",
                                                    "businessCustomer",
                                                    "individualCustomer"
                                                  ]
                                                },
                                                "id": {
                                                  "$ref": "./types.json#/components/schemas/Identifier"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "id"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "data"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "customers": {
                                          "type": "object",
                                          "title": "Customers Relationship",
                                          "properties": {
                                            "data": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "$ref": "./types.json#/components/schemas/Identifier"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "default": "customer"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "data"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "returned": {
                                      "type": "object",
                                      "title": "Returned Transaction Relationship",
                                      "properties": {
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "default": "transaction"
                                            },
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "id"
                                          ],
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": [
                                        "data"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "attributes",
                            "relationships"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/received-payments/{paymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getReceivedPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to get"
          },
          {
            "name": "included",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Received Payment by Id",
        "description": "Get a Received Payment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Received Payment Response With Included",
                  "properties": {
                    "data": {
                      "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                    },
                    "included": {
                      "$ref": "../types.json#/components/schemas/IncludedResource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "summary": "Update Received Payment",
        "description": "Update a Received Payment via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to update"
          }
        ],
        "requestBody": {
          "description": "Update Received Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Received Payment",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update ACH Received Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achReceivedPayment"
                            ],
                            "default": "achReceivedPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Received Payment Response",
                  "properties": {
                    "data": {
                      "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/received-payments/{paymentId}/advance": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "advanceReceivedPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to advance"
          }
        ],
        "summary": "Advance Received Payment by Id",
        "description": "Advance a Received Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/received-payments/{paymentId}/reprocess": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "reprocessReceivedPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to advance"
          }
        ],
        "summary": "Reprocess Received Payment by Id",
        "description": "Reprocess a Received Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/counterparties": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCounterpartiesList",
        "summary": "Get Counterparties List",
        "description": "Get Counterparties List from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "accountNumber": {
                  "type": "string"
                },
                "routingNumber": {
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "CreditOnly",
                      "DebitOnly",
                      "CreditAndDebit"
                    ]
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Counterparties List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Counterparty Document",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achCounterparty"
                            ],
                            "default": "achCounterparty"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "routingNumber": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "accountNumber": {
                                "type": "string",
                                "pattern": "^\\d{1,17}$"
                              },
                              "accountType": {
                                "type": "string",
                                "enum": [
                                  "Checking",
                                  "Savings",
                                  "Loan"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Business",
                                  "Person",
                                  "Unknown"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                              },
                              "bank": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "string",
                                "enum": [
                                  "CreditOnly",
                                  "DebitOnly",
                                  "CreditAndDebit"
                                ]
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "routingNumber",
                              "accountNumber",
                              "accountType",
                              "type",
                              "name",
                              "createdAt",
                              "permissions"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Counterparty Relationships",
                                "required": [
                                  "customer"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCounterparty",
        "summary": "Create Counterparty",
        "description": "Create a counterparty via API ",
        "requestBody": {
          "description": "Create Counterparty Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Ach Counterparty",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achCounterparty"
                            ],
                            "default": "achCounterparty"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "routingNumber": {
                                "type": "string"
                              },
                              "accountNumber": {
                                "type": "string"
                              },
                              "accountType": {
                                "type": "string",
                                "enum": [
                                  "Checking",
                                  "Savings",
                                  "Loan"
                                ]
                              },
                              "permissions": {
                                "type": "string",
                                "enum": [
                                  "CreditOnly",
                                  "DebitOnly",
                                  "CreditAndDebit"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Business",
                                  "Person",
                                  "Unknown"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              }
                            },
                            "required": [
                              "type",
                              "name",
                              "accountType",
                              "accountNumber",
                              "routingNumber"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "customer"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Plaid Counterparty",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achCounterparty"
                            ],
                            "default": "achCounterparty"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Business",
                                  "Person",
                                  "Unknown"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "verifyName": {
                                "type": "boolean",
                                "default": false
                              },
                              "plaidProcessorToken": {
                                "type": "string",
                                "pattern": "^processor-.*$",
                                "minLength": 40,
                                "maxLength": 60
                              },
                              "permissions": {
                                "type": "string",
                                "enum": [
                                  "CreditOnly",
                                  "DebitOnly",
                                  "CreditAndDebit"
                                ]
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              }
                            },
                            "required": [
                              "type",
                              "plaidProcessorToken"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCounterpartyRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Counterparty Response",
                  "properties": {
                    "data": {
                      "$ref": "./counterparty.json#/components/schemas/Counterparty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/counterparties/{counterpartyId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCounterparty",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "counterpartyId",
            "in": "path",
            "required": true,
            "description": "ID of the counterparty to get"
          }
        ],
        "summary": "Get Counterparty by Id",
        "description": "Get a Counterparty from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCounterpartyResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateCounterparty",
        "summary": "Update Counterparty",
        "description": "Update a Counterparty via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "counterpartyId",
            "in": "path",
            "required": true,
            "description": "ID of the counterparty to update"
          }
        ],
        "requestBody": {
          "description": "Update Counterparty Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Counterparty",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Counterparty",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "counterparty"
                            ],
                            "default": "counterparty"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "plaidProcessorToken": {
                                "type": "string",
                                "pattern": "^processor-.*$",
                                "minLength": 40,
                                "maxLength": 60
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                              },
                              "permissions": {
                                "type": "string",
                                "enum": [
                                  "CreditOnly",
                                  "DebitOnly",
                                  "CreditAndDebit"
                                ]
                              },
                              "verifyName": {
                                "type": "boolean",
                                "default": false
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCounterpartyResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "unit"
        ],
        "operationId": "deleteCounterparty",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "counterpartyId",
            "in": "path",
            "required": true,
            "description": "ID of the counterparty to delete"
          }
        ],
        "summary": "Delete Counterparty by Id",
        "description": "Delete Counterparty via API ",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/counterparties/{counterpartyId}/balance": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCounterpartyBalance",
        "summary": "Get Counterparty Balance",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "counterpartyId",
            "in": "path",
            "required": true,
            "description": "ID of the counterparty to get"
          }
        ],
        "description": "Get Recurring Payment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Counterparty Response",
                  "properties": {
                    "data": {
                      "title": "Counterparty Balance",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "counterpartyBalance"
                          ],
                          "default": "counterpartyBalance"
                        },
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "balance": {
                              "type": "number"
                            },
                            "available": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "balance"
                          ],
                          "additionalProperties": false
                        },
                        "relationships": {
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Counterparty Balance Relationships",
                              "required": [
                                "customer",
                                "counterparty"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "counterparty": {
                                  "type": "object",
                                  "title": "Counterparty Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "counterparty"
                                          ],
                                          "default": "counterparty"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "type": "object",
                                  "title": "Customer Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "customer",
                                            "businessCustomer",
                                            "individualCustomer"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "data"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "id",
                        "relationships"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recurring-payments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRecurringPaymentsList",
        "summary": "Get Recurring Payments List",
        "description": "Get Recurring Payments List from API ",
        "parameters": [
          {
            "$ref": "../types.json#/components/schemas/PageQuery"
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "recurringCreditAchPayment",
                      "recurringDebitAchPayment",
                      "recurringCreditBookPayment"
                    ]
                  }
                },
                "fromStartTime": {
                  "type": "string"
                },
                "toStartTime": {
                  "type": "string"
                },
                "fromEndTime": {
                  "type": "string"
                },
                "toEndTime": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Recurring Payment List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Recurring Payment Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringCreditAchPayment",
                              "recurringDebitAchPayment",
                              "recurringCreditBookPayment"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "recurringCreditAchPayment": "#/components/schemas/RecurringCreditAchPayment",
                            "recurringDebitAchPayment": "#/components/schemas/RecurringDebitAchPayment",
                            "recurringCreditBookPayment": "#/components/schemas/RecurringCreditBookPayment"
                          }
                        }
                      }
                    },
                    "meta": {
                      "$ref": "../types.json#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createRecurringPayment",
        "summary": "Create Recurring Payment",
        "description": "Create a Recurring Payment via API ",
        "requestBody": {
          "description": "Create Recurring Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Recurring Credit ACH Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringCreditAchPayment"
                            ],
                            "default": "recurringCreditAchPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 10
                              },
                              "addenda": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "schedule": {
                                "title": "Schedule",
                                "oneOf": [
                                  {
                                    "title": "Weekly Schedule",
                                    "allOf": [
                                      {
                                        "title": "Weekly Schedule",
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "format": "date"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "format": "date"
                                          },
                                          "dayOfMonth": {
                                            "type": "integer",
                                            "minimum": -5,
                                            "maximum": 28
                                          },
                                          "nextScheduledAction": {
                                            "type": "string",
                                            "format": "date"
                                          },
                                          "totalNumberOfPayments": {
                                            "type": "integer",
                                            "minimum": 1
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "nextScheduledAction"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "interval": {
                                            "type": "string",
                                            "enum": [
                                              "Weekly"
                                            ],
                                            "default": "Weekly"
                                          }
                                        },
                                        "required": [
                                          "interval"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "title": "Monthly Schedule",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "startTime": {
                                            "type": "string",
                                            "format": "date"
                                          },
                                          "endTime": {
                                            "type": "string",
                                            "format": "date"
                                          },
                                          "dayOfMonth": {
                                            "type": "integer",
                                            "minimum": -5,
                                            "maximum": 28
                                          },
                                          "dayOfWeek": {
                                            "type": "string",
                                            "enum": [
                                              "Sunday",
                                              "Monday",
                                              "Tuesday",
                                              "Wednesday",
                                              "Thursday",
                                              "Friday",
                                              "Saturday"
                                            ]
                                          },
                                          "totalNumberOfPayments": {
                                            "type": "integer",
                                            "minimum": 1
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "interval": {
                                            "type": "string",
                                            "enum": [
                                              "Monthly"
                                            ],
                                            "default": "Monthly"
                                          }
                                        },
                                        "required": [
                                          "interval"
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "discriminator": {
                                  "propertyName": "interval",
                                  "mapping": {
                                    "Weekly": "#/components/schemas/WeeklySchedule",
                                    "Monthly": "#/components/schemas/MonthlySchedule"
                                  }
                                }
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "schedule"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account",
                                  "counterparty"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CounterpartyRelationship"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Recurring Debit ACH Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringDebitAchPayment"
                            ],
                            "default": "recurringDebitAchPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 10
                              },
                              "addenda": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "sameDay": {
                                "type": "boolean",
                                "default": false
                              },
                              "verifyCounterpartyBalance": {
                                "type": "boolean",
                                "default": false
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "schedule": {
                                "$ref": "../types.json#/components/schemas/Schedule"
                              },
                              "clearingDaysOverride": {
                                "type": "integer",
                                "minimum": 0
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "schedule"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "$ref": "./createPayment.json#/components/schemas/CreatePaymentRelationshipsWithCounterparty"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Recurring Credit Book Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringCreditBookPayment"
                            ],
                            "default": "recurringCreditBookPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "transactionSummaryOverride": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 100
                              },
                              "schedule": {
                                "$ref": "../types.json#/components/schemas/Schedule"
                              }
                            },
                            "required": [
                              "amount",
                              "description",
                              "schedule"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account",
                                  "counterpartyAccount"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CounterpartyAccountRelationship"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "$recurringCreditAchPayment": "#/components/schemas/CreateRecurringCreditAchPayment",
                        "recurringDebitAchPayment": "#/components/schemas/CreateRecurringDebitAchPayment",
                        "recurringCreditBookPayment": "#/components/schemas/CreateRecurringCreditBookPayment"
                      }
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Recurring Payment Response",
                  "properties": {
                    "data": {
                      "$ref": "./recurringPayment.json#/components/schemas/RecurringPayment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recurring-payments/{paymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRecurringPayment",
        "summary": "Get Recurring Payment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to get"
          }
        ],
        "description": "Get Recurring Payment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recurring-payments/{paymentId}/disable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "disableRecurringPayment",
        "summary": "Disable Recurring Payment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to disable"
          }
        ],
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "nullable": true
              }
            }
          }
        },
        "description": "Disable Recurring Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recurring-payments/{paymentId}/enable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "enableRecurringPayment",
        "summary": "Enable Recurring Payment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID of the payment to enable"
          }
        ],
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "nullable": true
              }
            }
          }
        },
        "description": "Enable Recurring Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCardsList",
        "summary": "Get List of Cards",
        "description": "Get List of Cards from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "style": "deepObject",
            "allowReserved": true,
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Inactive",
                      "Active",
                      "Stolen",
                      "Lost",
                      "Frozen",
                      "ClosedByCustomer",
                      "SuspectedFraud"
                    ]
                  }
                },
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Cards List Reponse",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Card Document",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessDebitCard",
                              "individualDebitCard",
                              "businessVirtualDebitCard",
                              "individualVirtualDebitCard",
                              "businessCreditCard",
                              "businessVirtualCreditCard"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "businessDebitCard": "#/components/schemas/BusinessDebitCard",
                            "individualDebitCard": "#/components/schemas/IndividualDebitCard",
                            "businessVirtualDebitCard": "#/components/schemas/BusinessVirtualDebitCard",
                            "individualVirtualDebitCard": "#/components/schemas/IndividualVirtualDebitCard",
                            "businessCreditCard": "#/components/schemas/BusinessCreditCard",
                            "businessVirtualCreditCard": "#/components/schemas/BusinessVirtualCreditCard"
                          }
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object"
                            },
                            "relationships": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCard",
        "summary": "Create a Card",
        "description": "Create a Card via API ",
        "requestBody": {
          "description": "Create Card Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Individual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "individualDebitCard",
                            "enum": [
                              "individualDebitCard"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "shippingAddress": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "design": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "limits": {
                                "type": "object",
                                "properties": {
                                  "dailyWithdrawal": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "dailyPurchase": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "monthlyWithdrawal": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "monthlyPurchase": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "bin": {
                                "type": "object",
                                "properties": {
                                  "bin": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "institutionId": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "bin",
                                  "institutionId"
                                ]
                              },
                              "cardQualifier": {
                                "type": "string",
                                "pattern": "^(\\d{3})|([ ]{3})$"
                              },
                              "cardDesignId": {
                                "type": "string",
                                "maxLength": 16
                              },
                              "additionalEmbossedText": {
                                "type": "string",
                                "maxLength": 26
                              },
                              "activeForOnlineUse": {
                                "type": "boolean"
                              },
                              "printOnlyBusinessName": {
                                "type": "boolean"
                              },
                              "expiryDate": {
                                "type": "string",
                                "pattern": "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
                              }
                            },
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Create Card Relationships",
                                "required": [
                                  "account"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "defaultFundingAccount": {
                                    "type": "object",
                                    "title": "Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "type"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Business Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "businessDebitCard",
                            "enum": [
                              "businessDebitCard"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "shippingAddress": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "fullName": {
                                "title": "Full Name",
                                "type": "object",
                                "properties": {
                                  "first": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "last": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "first",
                                  "last"
                                ]
                              },
                              "phone": {
                                "title": "Phone",
                                "type": "object",
                                "properties": {
                                  "countryCode": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "countryCode",
                                  "number"
                                ]
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "nationality": {
                                "type": "string",
                                "pattern": "^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|Q|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|W|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|X|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|XK|Y(E|T)|Z(A|M|W))$"
                              },
                              "ssn": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "passport": {
                                "type": "string"
                              },
                              "design": {
                                "type": "string"
                              },
                              "additionalEmbossedText": {
                                "type": "string",
                                "maxLength": 26
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "activeForOnlineUse": {
                                "type": "boolean"
                              },
                              "printOnlyBusinessName": {
                                "type": "boolean"
                              },
                              "expiryDate": {
                                "type": "string",
                                "pattern": "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "address",
                              "fullName",
                              "phone",
                              "email",
                              "dateOfBirth"
                            ]
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCardRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Business Credit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "businessCreditCard",
                            "enum": [
                              "businessCreditCard"
                            ]
                          },
                          "attributes": {
                            "$ref": "#/components/schemas/CreateBusinessCardAttributes"
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCardRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Individual Virtual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "individualVirtualDebitCard",
                            "enum": [
                              "individualVirtualDebitCard"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "bin": {
                                "$ref": "#/components/schemas/Bin"
                              },
                              "cardQualifier": {
                                "type": "string",
                                "pattern": "^\\d{3}$"
                              },
                              "expiryDate": {
                                "type": "string",
                                "pattern": "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
                              }
                            },
                            "additionalProperties": false
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCardRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Business Virtual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "businessVirtualDebitCard",
                            "enum": [
                              "businessVirtualDebitCard"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "fullName": {
                                "$ref": "../types.json#/components/schemas/FullName"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "nationality": {
                                "$ref": "../types.json#/components/schemas/Country"
                              },
                              "ssn": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "passport": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "expiryDate": {
                                "type": "string",
                                "pattern": "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "address",
                              "fullName",
                              "phone",
                              "email",
                              "dateOfBirth"
                            ]
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCardRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Business Virtual Credit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "businessVirtualCreditCard",
                            "enum": [
                              "businessVirtualCreditCard"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "fullName": {
                                "$ref": "../types.json#/components/schemas/FullName"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "dateOfBirth": {
                                "type": "string",
                                "format": "date"
                              },
                              "nationality": {
                                "$ref": "../types.json#/components/schemas/Country"
                              },
                              "ssn": {
                                "type": "string",
                                "pattern": "^\\d{9}$"
                              },
                              "passport": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              },
                              "expiryDate": {
                                "type": "string",
                                "pattern": "^(1[0-2]|0[1-9])/(\\d{2})$|^(\\d{4})-(1[0-2]|0[1-9])$|^(\\d{2})-(1[0-2]|0[1-9])$"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "address",
                              "fullName",
                              "phone",
                              "email",
                              "dateOfBirth"
                            ]
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/CreateCardRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Card Response",
                  "properties": {
                    "data": {
                      "$ref": "./card.json#/components/schemas/Card"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCard",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to get"
          },
          {
            "name": "included",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Card by Id",
        "description": "Get a Card from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Card Response",
                  "properties": {
                    "data": {
                      "$ref": "./card.json#/components/schemas/Card"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "$ref": "../types.json#/components/schemas/IncludedResource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateCard",
        "summary": "Update Card",
        "description": "Update a Card via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to update"
          }
        ],
        "requestBody": {
          "description": "Update Card Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Card",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Individual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualDebitCard"
                            ],
                            "default": "individualDebitCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "shippingAddress": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "design": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "limits": {
                                "type": "object",
                                "properties": {
                                  "dailyWithdrawal": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "dailyPurchase": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "monthlyWithdrawal": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "monthlyPurchase": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "defaultFundingAccountId": {
                                "type": "string",
                                "pattern": "^[1-9]\\d*$"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Individual Virtual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "individualVirtualDebitCard"
                            ],
                            "default": "individualVirtualDebitCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "defaultFundingAccountId": {
                                "$ref": "../types.json#/components/schemas/Identifier",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Business Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessDebitCard"
                            ],
                            "default": "businessDebitCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "shippingAddress": {
                                "$ref": "../types.json#/components/schemas/Address",
                                "nullable": true
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "phone": {
                                "title": "Phone",
                                "type": "object",
                                "properties": {
                                  "countryCode": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "countryCode",
                                  "number"
                                ]
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "design": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "defaultFundingAccountId": {
                                "$ref": "../types.json#/components/schemas/Identifier",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Business Virtual Debit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessVirtualDebitCard"
                            ],
                            "default": "businessVirtualDebitCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "defaultFundingAccountId": {
                                "$ref": "../types.json#/components/schemas/Identifier",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Business Credit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessCreditCard"
                            ],
                            "default": "businessCreditCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "shippingAddress": {
                                "$ref": "../types.json#/components/schemas/Address",
                                "nullable": true
                              },
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "design": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "defaultFundingAccountId": {
                                "$ref": "../types.json#/components/schemas/Identifier",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Business Virtual Credit Card",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "businessVirtualCreditCard"
                            ],
                            "default": "businessVirtualCreditCard"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "$ref": "../types.json#/components/schemas/Address"
                              },
                              "phone": {
                                "$ref": "../types.json#/components/schemas/Phone"
                              },
                              "email": {
                                "$ref": "../types.json#/components/schemas/Email"
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "limits": {
                                "$ref": "../types.json#/components/schemas/CardLevelLimits"
                              },
                              "defaultFundingAccountId": {
                                "$ref": "../types.json#/components/schemas/Identifier",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/secure-data/pin/status": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCardPinStatus",
        "summary": "Get Card PIN Status",
        "description": "Get Card PIN Status via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to get PIN status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Pin Status Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "pinStatus"
                          ],
                          "default": "pinStatus"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "Set",
                                "NotSet"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/report-stolen": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "reportCardAsStolen",
        "summary": "Report card as stolen",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card"
          }
        ],
        "description": "Report card as stolen via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/report-lost": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "reportCardAsLost",
        "summary": "Report lost as stolen",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card"
          }
        ],
        "description": "Report lost as stolen via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/close": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "closeCard",
        "summary": "Close a Card",
        "description": "Close a Card via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to close"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/freeze": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "freezeCard",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to freeze"
          }
        ],
        "summary": "Freeze a Card",
        "description": "Freeze a Card via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/unfreeze": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "unfreezeCard",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to unfreeze"
          }
        ],
        "summary": "Unfreeze a Card",
        "description": "Unfreeze a Card via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/limits": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCardLimits",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to get"
          }
        ],
        "summary": "Get Card Limit by Id",
        "description": "Get a Card Limits from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Card Limits Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "limits"
                          ],
                          "default": "limits"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "properties": {
                                "dailyWithdrawal": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "dailyPurchase": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "monthlyWithdrawal": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "monthlyPurchase": {
                                  "type": "integer",
                                  "format": "int64"
                                }
                              },
                              "additionalProperties": false
                            },
                            "dailyTotals": {
                              "type": "object",
                              "properties": {
                                "withdrawals": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "deposits": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "purchases": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "cardTransactions": {
                                  "type": "integer",
                                  "format": "int64"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "withdrawals",
                                "deposits",
                                "purchases",
                                "cardTransactions"
                              ]
                            },
                            "monthlyTotals": {
                              "$ref": "../types.json#/components/schemas/CardTotals"
                            }
                          },
                          "required": [
                            "dailyTotals",
                            "monthlyTotals"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cards/{cardId}/replace": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "replaceCard",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to replace"
          }
        ],
        "summary": "Replace a Card",
        "description": "Replace a Card via API ",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Replace Card Request",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "replaceCard"
                        ],
                        "default": "replaceCard"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "shippingAddress": {
                            "title": "Address",
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^.*$"
                              },
                              "street2": {
                                "type": "string",
                                "nullable": true,
                                "pattern": "^.*$"
                              },
                              "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^.*$"
                              },
                              "state": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string",
                                "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                              },
                              "country": {
                                "type": "string",
                                "default": "US"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "street",
                              "city",
                              "postalCode",
                              "country",
                              "state"
                            ]
                          }
                        },
                        "required": [
                          "shippingAddress"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/authorizations": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAuthorizationsList",
        "summary": "Get List authorizations",
        "description": "Get List Authorizations from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "accountType": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "cardId": {
                  "type": "string"
                },
                "includeNonAuthorized": {
                  "type": "boolean"
                },
                "merchantCategoryCode": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Authorized",
                      "Completed",
                      "Canceled",
                      "Declined"
                    ]
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Authorizations Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Authorization Document",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "authorization"
                            ],
                            "default": "authorization"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "amount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "cardLast4Digits": {
                                "type": "string"
                              },
                              "merchant": {
                                "title": "Merchant",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "integer"
                                  },
                                  "category": {
                                    "type": "string"
                                  },
                                  "location": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type",
                                  "category"
                                ],
                                "additionalProperties": false
                              },
                              "recurring": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "declineReason": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "paymentMethod": {
                                "type": "string"
                              },
                              "digitalWallet": {
                                "type": "string"
                              },
                              "summary": {
                                "type": "string"
                              },
                              "cardVerificationData": {
                                "title": "Card Verification Data",
                                "type": "object",
                                "properties": {
                                  "verificationMethod": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "verificationMethod"
                                ]
                              },
                              "cardNetwork": {
                                "type": "string"
                              },
                              "cashWithdrawalAmount": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "required": [
                              "createdAt",
                              "amount",
                              "cardLast4Digits",
                              "merchant",
                              "recurring",
                              "status"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Authorization Relationships",
                                "required": [
                                  "account",
                                  "card"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "card": {
                                    "type": "object",
                                    "title": "Card Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "default": "card"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CustomerRelationship"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "authorizationRequest": {
                                    "type": "object",
                                    "title": "Authorization Request Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "default": "authorizationRequest"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id",
                          "relationships"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authorizations/{authorizationId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAuthorization",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "authorizationId",
            "in": "path",
            "required": true,
            "description": "ID of the authorization to get"
          },
          {
            "name": "includeNoneAuthorized",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Get Authorization by Id",
        "description": "Get a Authorization from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Authorization Response",
                  "properties": {
                    "data": {
                      "$ref": "./authorization.json#/components/schemas/Authorization"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authorization-requests": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAuthorizationRequestsList",
        "summary": "Get List Authorization Requests",
        "description": "Get List Authorization Requests from API ",
        "parameters": [
          {
            "$ref": "../types.json#/components/schemas/PageQuery"
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "merchantCategoryCode": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Authorization Requests Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Authorization Request Document",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "purchaseAuthorizationRequest",
                              "cardTransactionAuthorizationRequest",
                              "atmAuthorizationRequest"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "purchaseAuthorizationRequest": "#/components/schemas/PurchaseAuthorization",
                            "cardTransactionAuthorizationRequest": "#/components/schemas/CardTransactionAuthorization",
                            "atmAuthorizationRequest": "#/components/schemas/AtmAuthorization"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authorization-requests/{authorizationId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAuthorizationRequest",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "authorizationId",
            "in": "path",
            "required": true,
            "description": "ID of the authorization request to get"
          }
        ],
        "summary": "Get Authorization Request by Id",
        "description": "Get a Authorization Request from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Authorization Requests Response",
                  "properties": {
                    "data": {
                      "$ref": "./authorizationRequest.json#/components/schemas/AuthorizationRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authorization-requests/{authorizationId}/approve": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "approveAuthorizationRequest",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "authorizationId",
            "in": "path",
            "required": true,
            "description": "ID of the authorization request to approve"
          }
        ],
        "summary": "Approve Authorization Request by Id",
        "description": "Approve a Authorization Request via API ",
        "requestBody": {
          "description": "Approve Authorization Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Approve Authorization Request",
                "properties": {
                  "data": {
                    "title": "Approve Authorization Request",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "approveAuthorizationRequest"
                        ],
                        "default": "approveAuthorizationRequest"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "fundingAccount": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Authorization Request Response",
                  "properties": {
                    "data": {
                      "$ref": "./authorizationRequest.json#/components/schemas/AuthorizationRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authorization-requests/{authorizationId}/decline": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "declineAuthorizationRequest",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "authorizationId",
            "in": "path",
            "required": true,
            "description": "ID of the authorization request to decline"
          }
        ],
        "summary": "Decline Authorization Request",
        "description": "Decline Authorization Request via API ",
        "requestBody": {
          "description": "Decline Authorization Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Decline Authorization Request",
                "properties": {
                  "data": {
                    "title": "Decline Authorization Request",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "declineAuthorizationRequest"
                        ],
                        "default": "declineAuthorizationRequest"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "AccountClosed",
                              "CardExceedsAmountLimit",
                              "DoNotHonor",
                              "InsufficientFunds",
                              "InvalidMerchant",
                              "ReferToCardIssuer",
                              "RestrictedCard",
                              "TransactionNotPermittedToCardholder"
                            ]
                          }
                        }
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Authorization Request Response",
                  "properties": {
                    "data": {
                      "$ref": "./authorizationRequest.json#/components/schemas/AuthorizationRequest"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getStatementsList",
        "summary": "Get List Statements",
        "description": "Get List Statements from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Statements Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Statement",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "statement",
                              "accountStatementDTO"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "period": {
                                "type": "string"
                              }
                            }
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customers": {
                                    "type": "object",
                                    "title": "Customers Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            },
                                            "type": {
                                              "type": "string",
                                              "default": "customer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "relationships",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements/{statementId}/html": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getStatementHtml",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "statementId",
            "in": "path",
            "required": true,
            "description": "ID of the statement to get"
          }
        ],
        "summary": "Get HTML Statement by Id",
        "description": "Get a HTML Statement from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/statements/{statementId}/pdf": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getStatementPdf",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "statementId",
            "in": "path",
            "required": true,
            "description": "ID of the statement to get"
          }
        ],
        "summary": "Get PDF Statement by Id",
        "description": "Get a PDF Statement from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/statements/{accountId}/bank/pdf": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getStatementBankPdf",
        "summary": "Get Bank verification PDF",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get"
          }
        ],
        "description": "Get Get Bank verification PDF from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/rewards": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createReward",
        "summary": "Create Reward",
        "description": "Create a Reward via API ",
        "requestBody": {
          "description": "Create Reward Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "reward"
                        ],
                        "default": "reward"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "minimum": 1,
                            "format": "int64"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 50
                          },
                          "idempotencyKey": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        },
                        "required": [
                          "amount",
                          "description"
                        ],
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "receivingAccount"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "fundingAccount": {
                                "type": "object",
                                "title": "Funding Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "default": "account"
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "receivingAccount": {
                                "type": "object",
                                "title": "Receiving Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "rewardedTransaction": {
                                "type": "object",
                                "title": "Rewarded Transaction Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "default": "transaction"
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Reward Response",
                  "properties": {
                    "data": {
                      "title": "Reward",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "reward"
                          ],
                          "default": "reward"
                        },
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "amount": {
                              "type": "integer",
                              "minimum": 1,
                              "format": "int64"
                            },
                            "description": {
                              "type": "string",
                              "maxLength": 50
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "Rejected",
                                "Sent"
                              ]
                            },
                            "rejectReason": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "maxProperties": 15,
                              "additionalProperties": {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "description",
                            "createdAt",
                            "amount",
                            "tags",
                            "status"
                          ],
                          "additionalProperties": false
                        },
                        "relationships": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "receivingAccount",
                                "fundingAccount",
                                "customer"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "receivingAccount": {
                                  "type": "object",
                                  "title": "Receiving Account Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "account",
                                            "depositAccount",
                                            "creditAccount"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "fundingAccount": {
                                  "type": "object",
                                  "title": "Funding Account Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "account"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "$ref": "../relationships.json#/components/schemas/ReceivingAccountRelationship"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "type": "object",
                                  "title": "Customer Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "customer",
                                            "businessCustomer",
                                            "individualCustomer"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "data"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "rewardedTransaction": {
                                  "type": "object",
                                  "title": "Rewarded Transaction Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "transaction"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "transaction": {
                                  "type": "object",
                                  "title": "Transaction Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "transaction"
                                          ],
                                          "default": "transaction"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "card": {
                                  "type": "object",
                                  "title": "Card Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "default": "card"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "relationships",
                        "attributes"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRewardsList",
        "summary": "Get Rewards List",
        "description": "Get Rewards List from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "transactionId": {
                  "type": "string"
                },
                "rewardedTransactionId": {
                  "type": "string"
                },
                "receivingAccountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "cardId": {
                  "type": "string"
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Rewards List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./reward.json#/components/schemas/Reward"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rewards/{rewardId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getReward",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "rewardId",
            "in": "path",
            "required": true,
            "description": "ID of the reward to get"
          }
        ],
        "summary": "Get Reward by Id",
        "description": "Get a Reward from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Reward Response",
                  "properties": {
                    "data": {
                      "$ref": "./reward.json#/components/schemas/Reward"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getEventsList",
        "summary": "Get Events List",
        "description": "Get Events List from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Event List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Event Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {}
                          },
                          "relationships": {
                            "type": "object",
                            "title": "Event Relationships",
                            "properties": {}
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getEvent",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "ID of the event to get"
          }
        ],
        "summary": "Get Event by Id",
        "description": "Get an Event from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Event Response",
                  "properties": {
                    "data": {
                      "$ref": "./event.json#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "fireEvent",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "ID of the event to fire"
          }
        ],
        "summary": "Fire Event by Id",
        "description": "Fire an Event via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Event Response",
                  "properties": {
                    "data": {
                      "$ref": "./event.json#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/institutions/{routingNumber}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getInstitution",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "routingNumber",
            "in": "path",
            "required": true,
            "description": "routingNumber of the institution to get"
          }
        ],
        "summary": "Get Institution by Routing Number",
        "description": "Get an Institution from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Institution Response",
                  "properties": {
                    "data": {
                      "title": "Institution Resource",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "institution"
                          ],
                          "default": "institution"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "routingNumber": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "address": {
                              "type": "string"
                            },
                            "isWireSupported": {
                              "type": "boolean"
                            },
                            "isACHSupported": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "routingNumber",
                            "name",
                            "isWireSupported",
                            "isACHSupported"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fees": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createFee",
        "summary": "Create Fee",
        "description": "Create a Fee via API ",
        "requestBody": {
          "description": "Create Fee Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "fee"
                        ],
                        "default": "fee"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "minimum": 1,
                            "format": "int64"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 50
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          },
                          "idempotencyKey": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "amount",
                          "description"
                        ],
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "account"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Fee Response",
                  "properties": {
                    "data": {
                      "title": "Fee",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "fee"
                          ],
                          "default": "fee"
                        },
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "minimum": 1,
                              "format": "int64"
                            },
                            "description": {
                              "type": "string",
                              "maxLength": 50
                            },
                            "tags": {
                              "type": "object",
                              "maxProperties": 15,
                              "additionalProperties": {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "amount",
                            "description"
                          ],
                          "additionalProperties": false
                        },
                        "relationships": {
                          "allOf": [
                            {
                              "type": "object",
                              "title": "Fee Relationships",
                              "required": [
                                "account"
                              ],
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "object",
                                  "title": "Account Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "account",
                                            "depositAccount",
                                            "creditAccount",
                                            "batchAccount"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fees/reverse": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "reverseFee",
        "summary": "Reverse Fee",
        "description": "Reverse a Fee via API ",
        "requestBody": {
          "description": "Reverse Fee Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "feeReversal"
                        ],
                        "default": "feeReversal"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "maxLength": 50
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          },
                          "idempotencyKey": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "description"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Reverse Fee Request Relationships",
                            "required": [
                              "account",
                              "transaction"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "transaction": {
                                "type": "object",
                                "title": "Transaction Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "transaction"
                                        ],
                                        "default": "transaction"
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Fee Reversal Response",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "feeReversal"
                          ],
                          "default": "feeReversal"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "maxProperties": 15,
                              "additionalProperties": {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "description"
                          ]
                        },
                        "relationships": {
                          "allOf": [
                            {
                              "title": "Fee Reversal Relationships",
                              "required": [
                                "account",
                                "transaction"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "transaction": {
                                  "type": "object",
                                  "title": "Transaction Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "transaction"
                                          ],
                                          "default": "transaction"
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "object",
                                  "title": "Account Relationship",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "account",
                                            "depositAccount",
                                            "creditAccount",
                                            "batchAccount"
                                          ]
                                        },
                                        "id": {
                                          "$ref": "./types.json#/components/schemas/Identifier"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "id"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "required": [
                                    "data"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check-deposits": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckDepositsList",
        "summary": "Get List Check Deposits",
        "description": "Get List Check Deposits from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "AwaitingImages",
                      "AwaitingFrontImage",
                      "AwaitingBackImage",
                      "Pending",
                      "PendingReview",
                      "Rejected",
                      "Clearing",
                      "Sent",
                      "Canceled",
                      "Returned",
                      "AwaitingCustomerConfirmation"
                    ]
                  }
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Check Deposits Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Check Deposit",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "checkDeposit"
                            ],
                            "default": "checkDeposit"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "settlementDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 50
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "AwaitingImages",
                                  "AwaitingFrontImage",
                                  "AwaitingBackImage",
                                  "Pending",
                                  "PendingReview",
                                  "AwaitingCustomerConfirmation",
                                  "Rejected",
                                  "Clearing",
                                  "Sent",
                                  "Canceled",
                                  "Returned"
                                ]
                              },
                              "reason": {
                                "type": "string",
                                "nullable": true
                              },
                              "statusCreatedAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "statusSetBy": {
                                "type": "string"
                              },
                              "statusHistory": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "updatedAt": {
                                      "type": "string"
                                    },
                                    "updatedBy": {
                                      "$ref": "../types.json#/components/schemas/Identifier"
                                    },
                                    "status": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "AwaitingImages",
                                            "AwaitingFrontImage",
                                            "AwaitingBackImage",
                                            "AwaitingCustomerConfirmation",
                                            "Pending",
                                            "PendingReview",
                                            "Rejected",
                                            "Clearing",
                                            "Sent",
                                            "Canceled",
                                            "Returned"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "status"
                                  ]
                                }
                              },
                              "reasonText": {
                                "type": "string"
                              },
                              "checkNumber": {
                                "type": "string"
                              },
                              "vendor": {
                                "type": "string"
                              },
                              "counterparty": {
                                "title": "Check Deposit Counterparty",
                                "type": "object",
                                "properties": {
                                  "routingNumber": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "maxLength": 17
                                  },
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 250
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "routingNumber",
                                  "accountNumber",
                                  "name"
                                ]
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "createdAt",
                              "amount",
                              "description",
                              "status"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "title": "Check Deposit Relationships",
                                "required": [
                                  "account"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "org": {
                                    "type": "object",
                                    "title": "Org Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          },
                                          "type": {
                                            "type": "string",
                                            "default": "org"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "type"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "transaction": {
                                    "type": "object",
                                    "title": "Transaction Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "transaction"
                                            ],
                                            "default": "transaction"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCheckDeposit",
        "summary": "Create Check Deposit",
        "description": "Create a Check Deposit via API ",
        "requestBody": {
          "description": "Create Check Deposit Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "checkDeposit"
                        ],
                        "default": "checkDeposit"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "minimum": 1,
                            "format": "int64"
                          },
                          "clearingDaysOverride": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "idempotencyKey": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        },
                        "required": [
                          "amount",
                          "description"
                        ],
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "account"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Check Deposit Response",
                  "properties": {
                    "data": {
                      "$ref": "./checkDeposit.json#/components/schemas/CheckDeposit"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check-deposits/{checkDepositId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckDeposit",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkDepositId",
            "in": "path",
            "required": true,
            "description": "ID of the check deposit to get"
          }
        ],
        "summary": "Get Check Deposit by Id",
        "description": "Get a Check Deposit from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/componenets/schemas/UnitCheckDepositResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateCheckDeposit",
        "summary": "Update Check Deposit",
        "description": "Update a Check Deposit via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkDepositId",
            "in": "path",
            "required": true,
            "description": "ID of the check deposit to update"
          }
        ],
        "requestBody": {
          "description": "Update Check Deposit Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Check Deposit",
                "type": "object",
                "properties": {
                  "data": {
                    "title": "Update Check Deposit",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "checkDeposit"
                        ],
                        "default": "checkDeposit"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "clearingDaysOverride": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/componenets/schemas/UnitCheckDepositResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-deposits/{checkDepositId}/confirm": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "confirmCheckDeposit",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkDepositId",
            "in": "path",
            "required": true,
            "description": "ID of the check deposit to confirm"
          }
        ],
        "summary": "Confirm by Id",
        "description": "Confirm a Check Deposit from API ",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Confirm Check Deposit Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/componenets/schemas/UnitCheckDepositResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-deposits/{checkDepositId}/front": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getFrontCheckDeposit",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkDepositId",
            "in": "path",
            "required": true,
            "description": "ID of the check deposit to get"
          }
        ],
        "summary": "Get Front Check Deposit Image by Id",
        "description": "Get Front Check Deposit Image from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Front Check Deposit Response",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check-deposits/{checkDepositId}/back": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getBackCheckDeposit",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkDepositId",
            "in": "path",
            "required": true,
            "description": "ID of the check deposit to get"
          }
        ],
        "summary": "Get Back Check Deposit Image by Id",
        "description": "Get Back Check Deposit Image from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Back Check Deposit Response",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/api-tokens": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getApiTokensList",
        "summary": "Get List Org API Tokens",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to revoke token"
          }
        ],
        "description": "Get List Org API Tokens from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Org Api Tokens List Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Api Token",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apiToken"
                            ],
                            "default": "apiToken"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "description": {
                                "type": "string"
                              },
                              "expiration": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "token": {
                                "type": "string"
                              },
                              "sourceIp": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "createdAt"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createApiToken",
        "summary": "Create Org API Token",
        "description": "Create an Org API Token via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to create token for"
          }
        ],
        "requestBody": {
          "description": "Create Org API Token Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Create API Token",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apiToken"
                        ],
                        "default": "apiToken"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "expiration": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "sourceIp": {
                            "type": "string"
                          },
                          "resources": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "card",
                                    "account"
                                  ]
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "pattern": "^[1-9]\\d*$"
                                  }
                                }
                              }
                            },
                            "nullable": true
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "expiration"
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Api Token Response",
                  "properties": {
                    "data": {
                      "$ref": "./apiToken.json#/components/schemas/ApiToken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/api-tokens/{tokenId}": {
      "delete": {
        "tags": [
          "unit"
        ],
        "operationId": "deleteToken",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to revoke token"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "tokenId",
            "in": "path",
            "required": true,
            "description": "ID of the token to revoke"
          }
        ],
        "summary": "Get Reward by Id",
        "description": "Get a Reward from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Api Token Response",
                  "properties": {
                    "data": {
                      "$ref": "./apiToken.json#/components/schemas/ApiToken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/token": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCustomerToken",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create token for"
          }
        ],
        "summary": "Create Customer Token",
        "description": "Create a Customer Token via API ",
        "requestBody": {
          "description": "Create Customer Token Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "customerToken"
                        ],
                        "default": "customerToken"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "verificationToken": {
                            "type": "string"
                          },
                          "jwtToken": {
                            "type": "string"
                          },
                          "expiresIn": {
                            "type": "integer"
                          },
                          "verificationCode": {
                            "type": "string"
                          },
                          "resources": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "card",
                                    "account"
                                  ]
                                },
                                "ids": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "pattern": "^[1-9]\\d*$"
                                  }
                                }
                              }
                            }
                          },
                          "upgradableScope": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Customer Token Response",
                  "properties": {
                    "data": {
                      "title": "Customer Token Resource",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customerBearerToken"
                          ],
                          "default": "customerBearerToken"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "expiresIn": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/token/verification": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCustomerTokenVerification",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "ID of the customer to create token for"
          }
        ],
        "summary": "Create Customer Token Verification",
        "description": "Create a Customer Token Verification via API ",
        "requestBody": {
          "description": "Create Customer Token Verification Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "customerTokenVerification"
                        ],
                        "default": "customerTokenVerification"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "channel": {
                            "type": "string",
                            "enum": [
                              "sms",
                              "call"
                            ]
                          },
                          "phone": {
                            "title": "Phone",
                            "type": "object",
                            "properties": {
                              "countryCode": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "countryCode",
                              "number"
                            ]
                          },
                          "appHash": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 11
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "en",
                              "af",
                              "ar",
                              "ca",
                              "zh",
                              "zh-CN",
                              "zh-HK",
                              "hr",
                              "cs",
                              "da",
                              "nl",
                              "en-GB",
                              "et",
                              "fi",
                              "fr",
                              "de",
                              "el",
                              "he",
                              "hi",
                              "hu",
                              "id",
                              "it",
                              "ja",
                              "kn",
                              "ko",
                              "ms",
                              "mr",
                              "nb",
                              "pl",
                              "pt-BR",
                              "pt",
                              "ro",
                              "ru",
                              "sk",
                              "es",
                              "sv",
                              "tl",
                              "te",
                              "th",
                              "tr",
                              "vi"
                            ]
                          }
                        },
                        "required": [
                          "channel"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "attributes"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Customer Token Verification Response",
                  "properties": {
                    "data": {
                      "title": "Customer Token Verification",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customerTokenVerification"
                          ],
                          "default": "customerTokenVerification"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "verificationToken": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "attributes"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getWebhooksList",
        "summary": "Get List Webhooks",
        "description": "Get List Webhooks from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromId": {
                  "type": "integer"
                },
                "toId": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Webhooks List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Webhook",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "webhook"
                            ],
                            "default": "webhook"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "label": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "contentType": {
                                "type": "string",
                                "enum": [
                                  "Json",
                                  "JsonAPI"
                                ]
                              },
                              "deliveryMode": {
                                "type": "string",
                                "enum": [
                                  "AtMostOnce",
                                  "AtLeastOnce"
                                ]
                              },
                              "token": {
                                "type": "string"
                              },
                              "subscriptionType": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "attributes"
                        ],
                        "additionalProperties": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createWebhook",
        "summary": "Create Webhook",
        "description": "Create a Webhook via API ",
        "requestBody": {
          "description": "Create Webhook Request Body",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Create Webhook Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "default": "webhook"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "contentType": {
                            "type": "string",
                            "enum": [
                              "Json",
                              "JsonAPI"
                            ]
                          },
                          "deliveryMode": {
                            "type": "string"
                          },
                          "includeResources": {
                            "type": "boolean"
                          },
                          "subscriptionType": {
                            "type": "string",
                            "enum": [
                              "All",
                              "OnlyAuthorizationRequest"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "label",
                          "url",
                          "token",
                          "contentType",
                          "deliveryMode"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Webhook Response",
                  "properties": {
                    "data": {
                      "$ref": "./webhook.json#/components/schemas/Webhook"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getWebhook",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "webhookId",
            "in": "path",
            "required": true,
            "description": "ID of the webhook to get"
          }
        ],
        "summary": "Get Webhook Id",
        "description": "Get a Webhook from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitWebhookResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateWebhook",
        "summary": "Update Webhook",
        "description": "Update a Webhook via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "webhookId",
            "in": "path",
            "required": true,
            "description": "ID of the Webhook to update"
          }
        ],
        "requestBody": {
          "description": "Update Webhook Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitWebhookResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}/enable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "enableWebhook",
        "summary": "Enable Webhook",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "webhookId",
            "in": "path",
            "required": true,
            "description": "ID of the webhook to enable"
          }
        ],
        "description": "Enable a Webhook via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitWebhookResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}/disable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "disableWebhook",
        "summary": "Disable a Webhook",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "webhookId",
            "in": "path",
            "required": true,
            "description": "ID of the webhook to disable"
          }
        ],
        "description": "Disable a Webhook via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitWebhookResponse"
                }
              }
            }
          }
        }
      }
    },
    "/atm-locations": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getAtmLocationsList",
        "summary": "Get List of ATM Locations",
        "description": "Get List ATM Locations from API ",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "coordinates": {
                  "type": "object"
                },
                "searchRadius": {
                  "type": "integer"
                },
                "postalCode": {
                  "type": "string"
                },
                "address": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "title": "Unit Atm Locations List Response",
                  "items": {
                    "title": "Atm Location",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "atmLocation"
                        ],
                        "default": "atmLocation"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "network": {
                            "type": "string"
                          },
                          "locationName": {
                            "type": "string"
                          },
                          "coordinates": {
                            "type": "object",
                            "properties": {
                              "longitude": {
                                "type": "number"
                              },
                              "latitude": {
                                "type": "number"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "longitude",
                              "latitude"
                            ]
                          },
                          "address": {
                            "title": "Address",
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^.*$"
                              },
                              "street2": {
                                "type": "string",
                                "nullable": true,
                                "pattern": "^.*$"
                              },
                              "city": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^.*$"
                              },
                              "state": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string",
                                "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                              },
                              "country": {
                                "type": "string",
                                "default": "US"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "street",
                              "city",
                              "postalCode",
                              "country",
                              "state"
                            ]
                          },
                          "distance": {
                            "type": "integer"
                          },
                          "surchargeFree": {
                            "type": "boolean"
                          },
                          "acceptDeposits": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getTransaction",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to get transaction from"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "ID of the transaction"
          }
        ],
        "summary": "Get Transaction by Id",
        "description": "Get a Transaction from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Transaction Response With Included Resource",
                  "properties": {
                    "data": {
                      "title": "Transaction Resource",
                      "type": "object",
                      "properties": {
                        "id": {
                          "$ref": "../types.json#/components/schemas/Identifier"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "originatedAchTransaction",
                            "receivedAchTransaction",
                            "returnedAchTransaction",
                            "returnedReceivedAchTransaction",
                            "dishonoredAchTransaction",
                            "purchaseTransaction",
                            "bookTransaction",
                            "atmTransaction",
                            "feeTransaction",
                            "cardTransaction",
                            "releaseTransaction",
                            "wireTransaction",
                            "interestShareTransaction",
                            "interestTransaction",
                            "adjustmentTransaction",
                            "disputeTransaction",
                            "checkDepositTransaction",
                            "returnedCheckDepositTransaction",
                            "sponsoredInterestTransaction",
                            "paymentAdvanceTransaction",
                            "repaidPaymentAdvanceTransaction",
                            "chargebackTransaction",
                            "rewardTransaction",
                            "negativeBalanceCoverageTransaction",
                            "accountLowBalanceClosureTransaction",
                            "bankRepaymentTransaction",
                            "cashDepositTransaction",
                            "customerRepaymentTransaction",
                            "customerRepaymentReturnedTransaction",
                            "checkPaymentTransaction",
                            "returnedCheckPaymentTransaction",
                            "cardReversalTransaction",
                            "feeReversalTransaction",
                            "pushToCardReversalTransaction",
                            "paymentCanceledTransaction"
                          ]
                        }
                      },
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "originatedAchTransaction": "#/components/schemas/OriginatedAchTransaction",
                          "receivedAchTransaction": "#/components/schemas/ReceivedAchTransaction",
                          "returnedAchTransaction": "#/components/schemas/ReturnedAchTransaction",
                          "returnedReceivedAchTransaction": "#/components/schemas/ReturnedReceivedAchTransaction",
                          "dishonoredAchTransaction": "#/components/schemas/DishonoredAchTransaction",
                          "purchaseTransaction": "#/components/schemas/PurchaseTransaction",
                          "bookTransaction": "#/components/schemas/BookTransaction",
                          "atmTransaction": "#/components/schemas/AtmTransaction",
                          "feeTransaction": "#/components/schemas/FeeTransaction",
                          "cardTransaction": "#/components/schemas/CardTransaction",
                          "releaseTransaction": "#/components/schemas/ReleaseTransaction",
                          "wireTransaction": "#/components/schemas/WireTransaction",
                          "interestShareTransaction": "#/components/schemas/InterestShareTransaction",
                          "interestTransaction": "#/components/schemas/InterestTransaction",
                          "adjustmentTransaction": "#/components/schemas/AdjustmentTransaction",
                          "disputeTransaction": "#/components/schemas/DisputeTransaction",
                          "checkDepositTransaction": "#/components/schemas/CheckDepositTransaction",
                          "returnedCheckDepositTransaction": "#/components/schemas/ReturnedCheckDepositTransaction",
                          "sponsoredInterestTransaction": "#/components/schemas/SponsoredInterestTransaction",
                          "paymentAdvanceTransaction": "#/components/schemas/PaymentAdvanceTransaction",
                          "repaidPaymentAdvanceTransaction": "#/components/schemas/RepaidPaymentAdvanceTransaction",
                          "chargebackTransaction": "#/components/schemas/ChargebackTransaction",
                          "rewardTransaction": "#/components/schemas/RewardTransaction",
                          "negativeBalanceCoverageTransaction": "#/components/schemas/NegativeBalanceCoverageTransaction",
                          "accountLowBalanceClosureTransaction": "#/components/schemas/AccountLowBalanceClosureTransaction",
                          "bankRepaymentTransaction": "#/components/schemas/BankRepaymentTransaction",
                          "cashDepositTransaction": "#/components/schemas/CashDepositTransaction",
                          "customerRepaymentTransaction": "#/components/schemas/CustomerRepaymentTransaction",
                          "customerRepaymentReturnedTransaction": "#/components/schemas/CustomerRepaymentReturnedTransaction",
                          "checkPaymentTransaction": "#/components/schemas/CheckPaymentTransaction",
                          "returnedCheckPaymentTransaction": "#/components/schemas/ReturnedCheckPaymentTransaction",
                          "cardReversalTransaction": "#/components/schemas/CardReversalTransaction",
                          "feeReversalTransaction": "#/components/schemas/FeeReversalTransaction",
                          "pushToCardReversalTransaction": "#/components/schemas/PushToCardReversalTransaction",
                          "paymentCanceledTransaction": "#/components/schemas/PaymentCanceledTransaction"
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object"
                          },
                          "relationships": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "unit"
        ],
        "operationId": "updateTransaction",
        "summary": "Update Transaction",
        "description": "Update a Transaction via API ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "ID of the account to update transaction from"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "ID of the transaction to update"
          }
        ],
        "requestBody": {
          "description": "Update Transaction Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "title": "Update Transaction",
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Update Transaction",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "transaction"
                            ],
                            "default": "transaction"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "tags"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Book Transaction",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bookTransaction"
                            ],
                            "default": "bookTransaction"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "summary": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      },
                      {
                        "title": "Update Chargeback Transaction",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "chargebackTransaction"
                            ],
                            "default": "chargebackTransaction"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "summary": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "relationships": {
                            "$ref": "#/components/schemas/UpdateTransactionRelationships"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Transaction Response",
                  "properties": {
                    "data": {
                      "$ref": "./transaction.json#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getTransactionsList",
        "summary": "Get List Transactions",
        "description": "Get List Transactions from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "accountIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "customerId": {
                  "type": "string"
                },
                "query": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "cardId": {
                  "type": "string"
                },
                "excludeFees": {
                  "type": "boolean"
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "direction": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Debit",
                      "Credit"
                    ]
                  }
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "accountType": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Transactions List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./transaction.json#/components/schemas/Transaction"
                      }
                    },
                    "included": {
                      "$ref": "../types.json#/components/schemas/IncludedResource"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/disputes": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getDisputesList",
        "summary": "Get List Disputes",
        "description": "Get List Disputes from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "title": "Unit Disputes List Response",
                  "items": {
                    "title": "Dispute Document",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "dispute"
                        ],
                        "default": "dispute"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[1-9]\\d*$"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "string",
                            "enum": [
                              "DebitCard",
                              "ACH"
                            ]
                          },
                          "externalId": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "link": {
                            "type": "string",
                            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 1024
                          },
                          "amount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "status": {
                            "type": "string"
                          },
                          "statusHistory": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "decisionReason": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "externalId",
                          "source",
                          "description",
                          "status",
                          "createdAt",
                          "amount"
                        ],
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "title": "Dispute Relationships",
                            "required": [
                              "customer",
                              "account",
                              "transaction"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "customer": {
                                "type": "object",
                                "title": "Customer Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "customer",
                                          "businessCustomer",
                                          "individualCustomer"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "data"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "transaction": {
                                "type": "object",
                                "title": "Transaction Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "transaction"
                                        ],
                                        "default": "transaction"
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "id",
                      "relationships"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/disputes/{disputeId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getDispute",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "disputeId",
            "in": "path",
            "required": true,
            "description": "ID of the dispute to get"
          }
        ],
        "summary": "Get Dispute by Id",
        "description": "Get a Dispute from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Dispute Response",
                  "properties": {
                    "data": {
                      "$ref": "./dispute.json#/components/schemas/Dispute"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/repayments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRepaymentsList",
        "summary": "Get List Repayments",
        "description": "Get List Repayments from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "creditAccountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Pending",
                      "PendingReview",
                      "Returned",
                      "Sent",
                      "Rejected"
                    ]
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "AchRepayment",
                      "BookRepayment"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Repayments List Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Repayment Resource",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "achRepayment",
                              "bookRepayment",
                              "capitalPartnerAchRepayment",
                              "capitalPartnerBookRepayment"
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "achRepayment": "#/components/schemas/AchRepayment",
                            "bookRepayment": "#/components/schemas/BookRepayment",
                            "capitalPartnerAchRepayment": "#/components/schemas/CapitalPartnerAchRepayment",
                            "capitalPartnerBookRepayment": "#/components/schemas/CapitalPartnerBookRepayment"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unexpected error",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createRepayment",
        "summary": "Create a Repayment",
        "description": "Create a Repayment via API ",
        "requestBody": {
          "description": "Create a Repayment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bookRepayment"
                            ],
                            "default": "bookRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "transactionSummaryOverride": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "amount"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "account",
                                  "counterpartyAccount"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "creditAccount": {
                                    "type": "object",
                                    "title": "Credit Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "creditAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "counterpartyAccount": {
                                    "type": "object",
                                    "title": "Counterparty Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "capitalPartnerBookRepayment"
                            ],
                            "default": "capitalPartnerBookRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "transactionSummaryOverride": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "amount"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "counterpartyAccount"
                                ]
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CounterpartyAccountRelationship"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achRepayment"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "secCode": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "amount"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "account",
                                  "counterparty"
                                ]
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "counterparty": {
                                    "type": "object",
                                    "title": "Counterparty Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "counterparty"
                                            ],
                                            "default": "counterparty"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "capitalPartnerAchRepayment"
                            ],
                            "default": "capitalPartnerAchRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "addenda": {
                                "type": "string"
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "secCode": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "amount"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "counterparty"
                                ]
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/CounterpartyRelationship"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Repayment Response",
                  "properties": {
                    "data": {
                      "$ref": "./repayment.json#/components/schemas/Repayment"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/repayments/{repaymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRepayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "repaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the repayment to get"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Repayment by Id",
        "description": "Get an Repayment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "repaymentPaths.json#/components/schemas/UnitRepaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recurring-repayments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRecurringRepaymentsList",
        "summary": "Get List Recurring Repayments",
        "description": "Get List Recurring Repayments from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "creditAccountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Active",
                      "Disabled"
                    ]
                  }
                },
                "fromStartTime": {
                  "type": "string",
                  "format": "date"
                },
                "toStartTime": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "createdAt",
                "-createdAt"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "title": "Unit Recurring Repayments List Response",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Recurring Repayment",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringAchRepayment",
                              "recurringBookRepayment",
                              "recurringCapitalPartnerAchRepayment",
                              "recurrinCapitalPartnerBookRepayment"
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "RecurringAchRepayment": "#/components/schemas/RecurringAchRepayment",
                            "RecurringBookRepayment": "#/components/schemas/RecurringBookRepayment",
                            "RecurringCapitalPartnerAchRepayment": "#/components/schemas/RecurringCapitalPartnerAchRepayment",
                            "RecurringCapitalPartnerBookRepayment": "#/components/schemas/RecurringCapitalPartnerBookRepayment"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "limit": {
                              "type": "integer"
                            },
                            "offset": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unexpected error",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createRecurringRepayment",
        "summary": "Create a Recurring Repayment",
        "description": "Create a Recurring Repayment via API",
        "requestBody": {
          "description": "Create a Recurring Repayment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Recurring ACH Repayment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringAchRepayment"
                            ],
                            "default": "recurringAchRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 10
                              },
                              "addenda": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "secCode": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "description"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account",
                                  "creditAccount",
                                  "counterparty"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "creditAccount": {
                                    "type": "object",
                                    "title": "Credit Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "creditAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "counterparty": {
                                    "type": "object",
                                    "title": "Counterparty Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "counterparty"
                                            ],
                                            "default": "counterparty"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "title": "Create Recurring Book Repayment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringBookRepayment"
                            ],
                            "default": "recurringBookRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "transactionSummaryOverride": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 100
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "tags": {
                                "$ref": "../../types.json#/components/schemas/Tags"
                              }
                            },
                            "required": [
                              "description"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account",
                                  "creditAccount",
                                  "counterpartyAccount"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/AccountRelationship"
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "counterpartyAccount": {
                                    "type": "object",
                                    "title": "Counterparty Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringCapitalPartnerAchRepayment"
                            ],
                            "default": "recurringCapitalPartnerAchRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 10
                              },
                              "addenda": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "sameDay": {
                                "type": "boolean"
                              },
                              "secCode": {
                                "type": "string"
                              },
                              "tags": {
                                "$ref": "../../types.json#/components/schemas/Tags"
                              }
                            },
                            "required": [
                              "description"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "counterparty"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/AccountRelationship"
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/CounterpartyRelationship"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "recurringCapitalPartnerBookRepayment"
                            ],
                            "default": "recurringCapitalPartnerBookRepayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 80
                              },
                              "transactionSummaryOverride": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 100
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              },
                              "tags": {
                                "$ref": "../../types.json#/components/schemas/Tags"
                              }
                            },
                            "required": [
                              "description"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "creditAccount",
                                  "counterpartyAccount"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/CreditAccountRelationship"
                              },
                              {
                                "$ref": "../../relationships.json#/components/schemas/CounterpartyAccountRelationship"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ]
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "CreateRecurringAchRepayment": "#/components/schemas/CreateRecurringAchRepayment",
                        "CreateRecurringBookRepayment": "#/components/schemas/CreateRecurringBookRepayment",
                        "CreateRecurringCapitalPartnerAchRepayment": "#/components/schemas/CreateRecurringCapitalPartnerAchRepayment",
                        "CreateRecurringCapitalPartnerBookRepayment": "#/components/schemas/CreateRecurringCapitalPartnerBookRepayment"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "UnitRepaymentResponse",
                  "properties": {
                    "data": {
                      "$ref": "./recurringRepayment.json#/components/schemas/RecurringRepayment"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "../../types.json#/components/schemas/DefaultError"
          }
        }
      }
    },
    "/recurring-repayments/{recurringRepaymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getRecurringRepayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recurringRepaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the recurring repayment to get"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Recurring Repayment by Id",
        "description": "Get a Recurring Repayment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringRepaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recurring-repayments/{recurringRepaymentId}/disable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "disableRecurringRepayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recurringRepaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the recurring repayment to disable"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "nullable": true
              }
            }
          }
        },
        "summary": "Disable Recurring Repayment by Id",
        "description": "Disable a Recurring Repayment",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringRepaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recurring-repayments/{recurringRepaymentId}/enable": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "enableRecurringRepayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "recurringRepaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the recurring repayment to enable"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pass empty object in order for content-type to be aquired correctly",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "nullable": true
              }
            }
          }
        },
        "summary": "Enable Recurring Repayment by Id",
        "description": "Enable a Recurring Repayment",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRecurringRepaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckPaymentsList",
        "summary": "Get List Check Payments",
        "description": "Get List Check Payments from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "New",
                      "Pending",
                      "Canceled",
                      "Rejected",
                      "InDelivery",
                      "InProduction",
                      "Delivered",
                      "ReturnedToSender",
                      "Pending",
                      "Processed",
                      "PendingReview",
                      "MarkedForReturn",
                      "Returned"
                    ]
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "checkNumber": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit List Check Payments Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Check Payment Resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "checkPayment"
                            ],
                            "default": "checkPayment"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "returnCutoffTime": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "MarkedForReturn",
                                  "Returned",
                                  "Processed",
                                  "PendingReview"
                                ]
                              },
                              "memo": {
                                "type": "string"
                              },
                              "deliveryStatus": {
                                "type": "string",
                                "enum": [
                                  "Mailed",
                                  "InLocalArea",
                                  "Delivered",
                                  "Rerouted",
                                  "ReturnedToSender"
                                ]
                              },
                              "sendAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "counterparty": {
                                "type": "object",
                                "title": "Check Payment Counterparty",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "address": {
                                    "title": "Address",
                                    "type": "object",
                                    "properties": {
                                      "street": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "street2": {
                                        "type": "string",
                                        "nullable": true,
                                        "pattern": "^.*$"
                                      },
                                      "city": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "pattern": "^.*$"
                                      },
                                      "state": {
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "type": "string",
                                        "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                      },
                                      "country": {
                                        "type": "string",
                                        "default": "US"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "street",
                                      "city",
                                      "postalCode",
                                      "country",
                                      "state"
                                    ]
                                  },
                                  "counterpartyMoved": {
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "trackedAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "expectedDelivery": {
                                "type": "string",
                                "format": "date"
                              },
                              "originated": {
                                "type": "boolean"
                              },
                              "expirationDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "rejectReason": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "description": {
                                "type": "string"
                              },
                              "returnReason": {
                                "type": "string",
                                "enum": [
                                  "InsufficientFunds",
                                  "AccountClosed",
                                  "AlteredCheck",
                                  "ForgedSignature",
                                  "PostdatedCheck",
                                  "StopPaymentOrder",
                                  "UnauthorizedDebit",
                                  "WrongAmount",
                                  "DuplicatePayment",
                                  "MissingSignature",
                                  "IrregularEndorsement",
                                  "Other"
                                ]
                              },
                              "pendingReviewReasons": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "NameMissMatch",
                                    "SoftLimit"
                                  ]
                                }
                              },
                              "checkNumber": {
                                "type": "string"
                              },
                              "onUsAuxiliary": {
                                "type": "string"
                              },
                              "onUs": {
                                "type": "string"
                              },
                              "counterpartyRoutingNumber": {
                                "type": "string"
                              },
                              "additionalVerificationStatus": {
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "NotRequired",
                                  "Approved"
                                ]
                              }
                            },
                            "required": [
                              "createdAt",
                              "updatedAt",
                              "amount",
                              "status",
                              "originated"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customers": {
                                    "type": "object",
                                    "title": "Customers Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            },
                                            "type": {
                                              "type": "string",
                                              "default": "customer"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "transaction": {
                                    "type": "object",
                                    "title": "Transaction Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "transaction"
                                            ],
                                            "default": "transaction"
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "id",
                          "attributes",
                          "relationships"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createCheckPayment",
        "summary": "Create Check Payment",
        "description": "Create Check Payment via API ",
        "requestBody": {
          "description": "Create Check Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "checkPayment"
                        ],
                        "default": "checkPayment"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "counterparty": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 40
                              },
                              "address": {
                                "title": "Address",
                                "type": "object",
                                "properties": {
                                  "street": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "street2": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^.*$"
                                  },
                                  "city": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^.*$"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5}(?:-[0-9]{4})?$"
                                  },
                                  "country": {
                                    "type": "string",
                                    "default": "US"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "street",
                                  "city",
                                  "postalCode",
                                  "country",
                                  "state"
                                ]
                              },
                              "counterpartyMoved": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "address"
                            ],
                            "additionalProperties": false
                          },
                          "amount": {
                            "type": "integer",
                            "minimum": 1,
                            "format": "int64"
                          },
                          "idempotencyKey": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          "sendDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "memo": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "tags": {
                            "type": "object",
                            "maxProperties": 15,
                            "additionalProperties": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          }
                        },
                        "required": [
                          "counterparty",
                          "amount",
                          "idempotencyKey",
                          "description"
                        ],
                        "additionalProperties": false
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "account",
                              "customer"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "customer": {
                                "type": "object",
                                "title": "Customer Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "customer",
                                          "businessCustomer",
                                          "individualCustomer"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "data"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Check Payment Response",
                  "properties": {
                    "data": {
                      "$ref": "./checkPayment.json#/components/schemas/CheckPayment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment to get"
          }
        ],
        "summary": "Get Check Payment by Id",
        "description": "Get a Check Payment from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCheckPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}/approve": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "approveCheckPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment to approve"
          }
        ],
        "requestBody": {
          "description": "Approve Check Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Approve Check Payment Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "additionalVerification"
                        ],
                        "default": "additionalVerification"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Approve Check Payment by Id",
        "description": "Approve a Check Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCheckPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}/cancel": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "cancelCheckPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment to cancel"
          }
        ],
        "summary": "Cancel Check Payment by Id",
        "description": "Cancel a Check Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCheckPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}/return": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "returnCheckPayment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment to return"
          }
        ],
        "requestBody": {
          "description": "Return Check Payment Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "title": "Return Check Payment Request",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "checkPaymentReturn"
                        ],
                        "default": "checkPaymentReturn"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "enum": [
                              "InsufficientFunds",
                              "AccountClosed",
                              "AlteredCheck",
                              "ForgedSignature",
                              "PostdatedCheck",
                              "StopPaymentOrder",
                              "UnauthorizedDebit",
                              "WrongAmount",
                              "DuplicatePayment",
                              "MissingSignature",
                              "IrregularEndorsement",
                              "Other"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return Check Payment by Id",
        "description": "Return a Check Payment via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCheckPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}/front": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckPaymentFront",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment"
          }
        ],
        "summary": "Get front image",
        "description": "Get front image via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/check-payments/{checkPaymentId}/back": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getCheckPaymentBack",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "checkPaymentId",
            "in": "path",
            "required": true,
            "description": "ID of the check payment"
          }
        ],
        "summary": "Get back image",
        "description": "Get back image via API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/stop-payments": {
      "post": {
        "summary": "Create Stop Payment",
        "tags": [
          "unit"
        ],
        "operationId": "createStopPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "oneOf": [
                      {
                        "title": "Create Check Stop Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "checkStopPayment"
                            ],
                            "default": "checkStopPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "minimum": 1,
                                "format": "int64"
                              },
                              "checkNumber": {
                                "type": "string",
                                "maxLength": 12
                              },
                              "tags": {
                                "type": "object",
                                "maxProperties": 15,
                                "additionalProperties": {
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "idempotencyKey": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              }
                            },
                            "required": [
                              "checkNumber"
                            ],
                            "additionalProperties": false
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "title": "Create ACH Stop Payment",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "achStopPayment"
                            ],
                            "default": "achStopPayment"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "minAmount": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "originatorName": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "type": "string",
                                "default": "debit"
                              },
                              "expiration": {
                                "type": "string",
                                "format": "date"
                              },
                              "isMultiUse": {
                                "type": "boolean"
                              },
                              "description": {
                                "type": "string",
                                "maxLength": 255
                              },
                              "tags": {
                                "$ref": "../types.json#/components/schemas/Tags"
                              },
                              "idempotencyKey": {
                                "$ref": "../types.json#/components/schemas/IdempotencyKey"
                              }
                            },
                            "required": [
                              "direction",
                              "description"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "account"
                                ]
                              },
                              {
                                "$ref": "../relationships.json#/components/schemas/AccountRelationship"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "attributes",
                          "relationships"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Stop Payment Resource",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "checkStopPayment",
                            "achStopPayment"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "pattern": "^[1-9]\\d*$"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                          "checkStopPayment": "#/components/schemas/CheckStopPayment",
                          "achStopPayment": "#/components/schemas/AchStopPayment"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a list of stop payments",
        "tags": [
          "unit"
        ],
        "operationId": "getStopPaymentsList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Active",
                      "Disabled"
                    ]
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "since": {
                  "type": "string"
                },
                "until": {
                  "type": "string"
                },
                "fromAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "toAmount": {
                  "type": "integer",
                  "format": "int64"
                },
                "checkNumber": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./stopPayment.json#/components/schemas/StopPayment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stop-payments/{stopPaymentId}": {
      "get": {
        "summary": "Get details of a specific stop payment",
        "tags": [
          "unit"
        ],
        "operationId": "getStopPayment",
        "parameters": [
          {
            "name": "stopPaymentId",
            "in": "path",
            "description": "ID of the stop payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Stop payment not found"
          }
        }
      },
      "post": {
        "summary": "Update a stop payment",
        "tags": [
          "unit"
        ],
        "operationId": "updateStopPayment",
        "parameters": [
          {
            "name": "stopPaymentId",
            "in": "path",
            "description": "ID of the stop payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Update Stop Payment",
                "type": "object",
                "properties": {
                  "data": {
                    "title": "Update Ach Stop Payment",
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "maxProperties": 15,
                        "additionalProperties": {
                          "type": "string",
                          "maxLength": 255,
                          "minLength": 1
                        }
                      },
                      "expiration": {
                        "type": "string",
                        "format": "date"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Stop payment not found"
          }
        }
      }
    },
    "/stop-payments/{stopPaymentId}/disable": {
      "post": {
        "summary": "Disable a stop payment",
        "tags": [
          "unit"
        ],
        "operationId": "disableStopPayment",
        "parameters": [
          {
            "name": "stopPaymentId",
            "in": "path",
            "description": "ID of the stop payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Stop payment not found"
          }
        }
      }
    },
    "/tax-forms": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getTaxFormsList",
        "summary": "Get Tax Forms List ",
        "description": "Get Tax Forms List from API ",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/ListPageParameters"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "allowReserved": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "accountId": {
                  "type": "string"
                },
                "taxYear": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^\\d{4}$"
                  }
                },
                "taxFormTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Tax Forms List Response",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "taxForm"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[1-9]\\d*$"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "formType": {
                                "type": "string"
                              },
                              "taxYear": {
                                "type": "string",
                                "pattern": "^\\d{4}$"
                              }
                            },
                            "required": [
                              "formType",
                              "taxYear"
                            ]
                          },
                          "relationships": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "account": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "account",
                                              "depositAccount",
                                              "creditAccount",
                                              "batchAccount"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "accounts": {
                                    "type": "object",
                                    "title": "Account Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "account",
                                                "depositAccount",
                                                "creditAccount",
                                                "batchAccount"
                                              ]
                                            },
                                            "id": {
                                              "$ref": "./types.json#/components/schemas/Identifier"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "id"
                                          ],
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "required": [
                                      "data"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "type": "object",
                                    "title": "Customer Relationship",
                                    "properties": {
                                      "data": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "customer",
                                              "businessCustomer",
                                              "individualCustomer"
                                            ]
                                          },
                                          "id": {
                                            "$ref": "./types.json#/components/schemas/Identifier"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "id"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ]
                                  }
                                }
                              }
                            ],
                            "required": [
                              "customer"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "attributes"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tax-forms/{taxFormId}": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getTaxForm",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "taxFormId",
            "in": "path",
            "required": true,
            "description": "ID of the reward to get"
          }
        ],
        "summary": "Get Tax Form by Id",
        "description": "Get a Tax Form from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "title": "Unit Tax Form Response",
                  "properties": {
                    "data": {
                      "$ref": "./taxForm.json#/components/schemas/TaxForm"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tax-forms/{taxFormId}/pdf": {
      "get": {
        "tags": [
          "unit"
        ],
        "operationId": "getTaxFormPdf",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "taxFormId",
            "in": "path",
            "required": true,
            "description": "ID of the reward to get"
          }
        ],
        "summary": "Get Tax Form pdf by Id",
        "description": "Get a Tax Form pdf from API ",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/sandbox/atm-deposits": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createAtmDepositSimulation",
        "summary": "Create Atm Deposit Simulation",
        "description": "Create Atm Deposit Simulation via API ",
        "requestBody": {
          "description": "Create Atm Deposit Simulation Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "atmTransaction"
                        ],
                        "default": "atmTransaction"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "atmName": {
                            "type": "string"
                          },
                          "atmLocation": {
                            "type": "string"
                          },
                          "last4Digits": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 4
                          },
                          "cardNetwork": {
                            "type": "string",
                            "enum": [
                              "Visa",
                              "Interlink",
                              "Accel",
                              "Allpoint",
                              "Other"
                            ]
                          },
                          "surcharge": {
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "required": [
                          "amount",
                          "atmName",
                          "last4Digits"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Create Atm Deposit Simulation Relationships",
                            "required": [
                              "account"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Deposit Account Response",
                  "properties": {
                    "data": {
                      "$ref": "./account.json#/components/schemas/DepositAccount"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sandbox/cards/{cardId}/activate": {
      "post": {
        "tags": [
          "unit"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "cardId",
            "in": "path",
            "required": true,
            "description": "ID of the card to activate"
          }
        ],
        "operationId": "activateCardSimulation",
        "summary": "Create Atm Deposit Simulation",
        "description": "Activate Card Simulation via API",
        "responses": {
          "201": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/sandbox/received-payments": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createACHReceivedPaymentTransactionSimulation",
        "summary": "Create ACH Received Payment Transaction Simulation",
        "description": "Create ACH Received Payment Transaction Simulation via API ",
        "requestBody": {
          "description": "Create ACH Received Payment Transaction Simulation Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "achReceivedPayment"
                        ],
                        "default": "achReceivedPayment"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "completionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 10
                          },
                          "companyName": {
                            "type": "string",
                            "maxLength": 16
                          },
                          "secCode": {
                            "type": "string",
                            "maxLength": 3
                          }
                        },
                        "required": [
                          "amount",
                          "completionDate",
                          "description",
                          "companyName"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Create ACH Received Payment Transaction Relationships",
                            "required": [
                              "account"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "title": "Unit Received Payment Response",
                  "properties": {
                    "data": {
                      "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sandbox/received-ach-payment": {
      "post": {
        "tags": [
          "unit"
        ],
        "operationId": "createIncomingAchPaymentSimulation",
        "summary": "Create Incoming ACH Payment Simulation",
        "description": "Create Incoming ACH Payment Simulation via API ",
        "requestBody": {
          "description": "Create Incoming ACH Payment Simulation Request",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "achReceivedPayment"
                        ],
                        "default": "achReceivedPayment"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "settlementDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "companyName": {
                            "type": "string",
                            "maxLength": 16
                          },
                          "receivingEntityName": {
                            "type": "string",
                            "maxLength": 16
                          },
                          "secCode": {
                            "type": "string",
                            "maxLength": 3
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "Debit",
                              "Credit"
                            ]
                          }
                        },
                        "required": [
                          "amount",
                          "settlementDate",
                          "companyName"
                        ]
                      },
                      "relationships": {
                        "allOf": [
                          {
                            "title": "Create ACH Received Payment Transaction Relationships",
                            "required": [
                              "account"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "title": "Account Relationship",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "account",
                                          "depositAccount",
                                          "creditAccount",
                                          "batchAccount"
                                        ]
                                      },
                                      "id": {
                                        "$ref": "./types.json#/components/schemas/Identifier"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "../payment/paymentsPaths.json#/components/schemas/UnitReceivedPaymentResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}