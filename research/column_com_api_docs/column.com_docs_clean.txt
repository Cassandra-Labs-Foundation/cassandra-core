Person Entity object

An entity represents a person or organization possessing separate and distinct legal rights. You will create entities for each of your customers or users. An entity is required to create a bank account or a loan object. Read about entities in our data model section for more information.

Object Parameters
person_details

object

Contains all person details of the legal person entity. Only returned when entity type is PERSON.

first_name

string

First name of the legal person. Must adhere to Fedwire character validation.

last_name

string

Last name of the legal person. Must adhere to Fedwire character validation.

middle_name

string

Middle name of the legal person. Must adhere to Fedwire character validation.

ssn

string

Social Security Number. SSN is required for U.S. citizens. ITIN may be shared in place of SSN. When left blank (i.e., for non-U.S. citizens) the SSN field returns an empty string ("").

passport

object

Passport Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Passport number

country_code

string

Country code where the passport was issued. US Passports will be rejected as we require US citizens to submit SSN.

drivers_license

object

Driver's License Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Driver's license number

country_code

string

Country code where the driver's license was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...). US Drivers License will be rejected as we require US citizens to submit SSN.

national_id

object

National ID Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

National ID number

country_code

string

Country code where the national ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

date_of_birth

string

Date of birth (YYYY-MM-DD)

email

string

Email of the individual. Optional, but highly encouraged as it will increase likelihood of an automated verification. When left blank, the Email field returns an empty string ("").

pep_status

string

Politically Exposed Person screening status. Allowed values: not_checked, no, yes, potential.

address

object

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

documents

array of objects

List of documents which are uploaded with the Submit Document API

id

string

Unique identifier for the object

is_root

boolean

Indicates if the entity is the root entity of the platform.

is_high_risk

boolean

Indicates whether the entity has been identified as high risk based on compliance screening

review_reasons

array

List of reasons the entity is in Manual_Review

type

string

Type of entity. PERSON for a person entity.

verification_status

string

Current status of the entity verification. Can be UNVERIFIED, PENDING,MANUAL_REVIEW, VERIFIED, or DENIED

verification_tags

string

A list of verification tags with more details about its identity verification process.

Person Entity object
{
  "documents": [],
  "id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
  "is_root": false,
  "is_high_risk": false,
  "person_details": {
    "address": {
      "city": "San Francisco",
      "country_code": "US",
      "line_1": "101 Market St",
      "line_2": "Suite 1913",
      "postal_code": "94105",
      "state": "CA"
    },
    "date_of_birth": "1985-08-04",
    "email": "oliver@column.com",
    "first_name": "Oliver",
    "last_name": "Hockey",
    "middle_name": "Smith",
    "passport": {},
    "ssn": "565438976", 
    "drivers_license":null,
    "national_id": null
  },
  "review_reasons": [],
  "type": "PERSON",
  "verification_status": "VERIFIED"
}
Business Entity object

A business entity represents a legal business in the Column data model.

Object Parameters
business_details

object

Contains all business details of the legal business entity. Only returned when entity type is BUSINESS.

address

object

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

business_name

string

Legal Business Name

ein

string

Employer Identification Number (Tax ID). This may be SSN for a sole proprietorship.

registration_id

object

Registration ID. EIN or Registration ID is required.

number

string

Business registration ID

country_code

string

Country code where the business registration ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

industry

string

Industry in which the business entity operates.

website

string

Website of the business. Optional, but highly encouraged as it will increase likelihood of an automated verification.

legal_type

string

Type of business. Permitted values are limited-partnership, trust, sole-proprietorship, corporation,llc, general-partnership, professional-association,government,non-profit, other.

state_of_incorporation

string

State in which the business is incorporated. Only postal abbreviations (e.g. AL, CA, DE, ...) are allowed. Only required for a root entity.

year_of_incorporation

string

Year in which the business entity was incorporated. Only required for a root entity.

account_usage

array of strings

Indicates possible uses of the accounts an entity may use at Column. Only required for a root entity.

description

string

Description of the business entity. Only required for a root entity.

payment_volumes

string

Expected payment volumes. Only required for a root entity.

countries_of_operation

array of strings

Countries in which the business currently operates or expects to operate. Only ISO 3166-1 Alpha-2 Country Codes (e.g., US, FR, UK, DE, ...) are allowed. Only required for a root entity.

is_root

boolean

Indicates if the entity is the root entity of the platform.

is_high_risk

boolean

Indicates whether the entity has been identified as high risk based on compliance screening

documents

array of objects

List of documents which are uploaded with the Submit Document API

id

string

Unique identifier for the object

review_reasons

array

List of reasons the entity is in Manual_Review

type

string

Type of entity. BUSINESS for a business entity.

verification_status

string

Current status of the entity verification. Can be UNVERIFIED, PENDING,MANUAL_REVIEW, VERIFIED, or DENIED

verification_tags

string

A list of verification tags with more details about its identity verification process.

Entity object
{
  "business_details": {
    "account_usage": "",
    "address": {
      "city": "San Francisco",
      "country_code": "US",
      "line_1": "1110 Gorgas Avenue",
      "line_2": "Suite 1000",
      "postal_code": "94109",
      "state": "CA"
    },
    "business_name": "Maries Bakery",
    "countries_of_operation": null,
    "description": "Bakery",
    "ein": "111111111",
    "industry": "",
    "legal_type": "",
    "payment_volumes": null,
    "registration_id": {
      "country_code": "US",
      "number": "111111111"
    },
    "state_of_incorporation": "CA",
    "website": "acme.com",
    "year_of_incorporation": "2022"
  },
  "documents": [],
  "id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "is_root": false,
  "is_high_risk": false,
  "review_reasons": [],
  "type": "BUSINESS",
  "verification_status": "VERIFIED"
}
Create a person entity
POST

/entities/person

Create a new person entity for individual customers.

Body Parameters
first_name

string

Required

First name of the legal person. Must adhere to Fedwire character validation.

last_name

string

Required

Last name of the legal person. Must adhere to Fedwire character validation.

middle_name

string

Optional

Middle name of the legal person. Must adhere to Fedwire character validation.

ssn

string

Required

Social Security Number. SSN is required for U.S. citizens. ITIN may be shared in place of SSN. When left blank (i.e., for non-U.S. citizens) the SSN field returns an empty string ("").

passport

object

Optional

Passport Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

Passport number

country_code

string

Required

Country code where the passport was issued. US Passports will be rejected as we require US citizens to submit SSN.

drivers_license

object

Optional

Driver's License Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

Driver's license number

country_code

string

Required

Country code where the driver's license was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...). US Drivers License will be rejected as we require US citizens to submit SSN.

national_id

object

Optional

National ID Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

National ID number

country_code

string

Required

Country code where the national ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

date_of_birth

string

Required

Date of birth (YYYY-MM-DD)

email

string

Optional

Email of the individual. Optional, but highly encouraged as it will increase likelihood of an automated verification. When left blank, the Email field returns an empty string ("").

pep_status

string

Optional

Politically Exposed Person screening status. Allowed values: not_checked, no, yes, potential.

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/entities/person' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "first_name": "Oliver",
    "last_name": "Hockey",
    "middle_name": "Smith",
    "ssn": "565438976",
    "date_of_birth": "1985-08-04",
    "email": "oliver@column.com",
    "pep_status": "not_checked",
    "address": {
      "line_1": "101 Market St",
      "line_2": "Suite 1913",
      "city": "San Francisco",
      "state": "CA",
      "postal_code": "94105",
      "country_code": "USA"
    }
  }'
Response

200

400

{
  "documents": [],
  "id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
  "is_root": false,
  "person_details": {
    "address": {
      "city": "San Francisco",
      "country_code": "US",
      "line_1": "101 Market St",
      "line_2": "Suite 1913",
      "postal_code": "94105",
      "state": "CA"
    },
    "date_of_birth": "1985-08-04",
    "email": "oliver@column.com",
    "first_name": "Oliver",
    "last_name": "Hockey",
    "middle_name": "Smith",
    "passport": {},
    "ssn": "565438976", 
    "drivers_license": null,
    "national_id": null,
  },
  "review_reasons": [],
  "type": "PERSON",
  "verification_status": "VERIFIED"
}
Update a person entity
PATCH

/entities/person/<entity_id>

Update an existing person entity.

Path Parameters
entity_id

string

Required

ID of the person entity you're updating

Body Parameters
first_name

string

Required

First name of the legal person. Must adhere to Fedwire character validation.

last_name

string

Required

Last name of the legal person. Must adhere to Fedwire character validation.

middle_name

string

Optional

Middle name of the legal person. Must adhere to Fedwire character validation.

ssn

string

Required

Social Security Number. SSN is required for U.S. citizens. ITIN may be shared in place of SSN. When left blank (i.e., for non-U.S. citizens) the SSN field returns an empty string ("").

passport

object

Optional

Passport Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

Passport number

country_code

string

Required

Country code where the passport was issued. US Passports will be rejected as we require US citizens to submit SSN.

drivers_license

object

Optional

Driver's License Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

Driver's license number

country_code

string

Required

Country code where the driver's license was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...). US Drivers License will be rejected as we require US citizens to submit SSN.

national_id

object

Optional

National ID Details. Passport, Driver's License or National ID is required for non U.S. citizens. When left blank, the Passport field returns an empty object () and the Driver's License and National ID fields return null.

number

string

Required

National ID number

country_code

string

Required

Country code where the national ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

date_of_birth

string

Required

Date of birth (YYYY-MM-DD)

email

string

Optional

Email of the individual. Optional, but highly encouraged as it will increase likelihood of an automated verification. When left blank, the Email field returns an empty string ("").

pep_status

string

Optional

Politically Exposed Person screening status. Allowed values: not_checked, no, yes, potential.

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/entities/person/<entity_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "first_name": "Bruce",
    "last_name": "Hockey",
    "middle_name": "Smith",
    "ssn": "565438976",
    "date_of_birth": "1985-08-04",
    "email": "apis@column.com",
    "address": {
      "line_1": "101 Market St",
      "line_2": "Suite 1913",
      "city": "San Francisco",
      "state": "CA",
      "postal_code": "94105",
      "country_code": "USA"
    }
  }'
Response

200

400

{
  "documents": [],
  "id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
  "is_root": false,
  "person_details": {
    "address": {
      "city": "San Francisco",
      "country_code": "US",
      "line_1": "101 Market St",
      "line_2": "Suite 1913",
      "postal_code": "94105",
      "state": "CA"
    },
    "date_of_birth": "1985-08-04",
    "email": "apis@column.com",
    "first_name": "Bruce",
    "last_name": "Hockey",
    "middle_name": "Smith",
    "passport": {},
    "ssn": "565438976",
    "drivers_license": null,
    "national_id": null
  },
  "review_reasons": [],
  "type": "PERSON",
  "verification_status": "VERIFIED"
}
Create a business entity
POST

/entities/business

Create a new business entity.

Managing Associated Persons

After creating a business entity, use the Associated Persons endpoints to add beneficial owners and control persons. This endpoint creates only the core business entity.

Body Parameters
business_name

string

Required

Legal Business Name. Must adhere to Fedwire character validation.

ein

string

Required

Employer Identification Number (Tax ID)

ein_pending

boolean

Optional

Set to true if the EIN application is pending and an EIN is not yet available.

registration_id

object

Optional

Registration ID, typically for a non US incorporated company. EIN or Registration ID is required.

number

string

Required

Business registration ID

country_code

string

Required

Country code where the business registration ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

website

string

Optional

Website of the business. Optional, but highly encouraged as it will increase likelihood of an automated verification.

dba_name

string

Optional

Doing Business As (DBA) name.

legal_type

string

Optional

Type of business. Permitted values are limited-partnership, trust, sole-proprietorship, corporation,llc, general-partnership, professional-association,government,non-profit, other.

state_of_incorporation

string

Optional

State in which the business is incorporated. Only postal abbreviations (e.g. AL, CA, DE, ...) are allowed. Only required for a root entity.

year_of_incorporation

string

Optional

Year in which the business entity was incorporated. Only required for a root entity.

country_of_incorporation

string

Optional

ISO 3166-1 Alpha-2 country code where the business is incorporated (e.g., US).

date_of_incorporation

string

Optional

Date the business was incorporated (YYYY-MM-DD).

has_virtual_address

boolean

Optional

Whether the business uses a virtual address service.

account_usage

array of strings

Optional

Indicates possible uses of the accounts an entity may use at Column. Only required for a root entity.

description

string

Optional

Description of the business entity. Only required for a root entity.

payment_volumes

string

Optional

Expected payment volumes. Only required for a root entity.

countries_of_operation

array of strings

Optional

Countries in which the business currently operates or expects to operate. Only ISO 3166-1 Alpha-2 Country Codes (e.g., US, FR, UK, DE, ...) are allowed. Only required for a root entity.

end_customer_type

string

Optional

Primary type of end customers the business serves.

expected_payment_rails

string

Optional

Comma-separated list of expected payment rails the business will use. Permitted values: ach, wire, swift, check, rtp.

makes_international_payments

boolean

Optional

Whether the business expects to send or receive international payments.

source_of_funds

string

Optional

Primary source of funds flowing into the account(s).

expected_use_of_funds

string

Optional

Primary expected use of funds flowing out of the account(s).

beneficial_owners

array of objects

Optional

Optional list of associated persons (beneficial owners and/or control persons) to include at creation time. You can also manage associated persons later via the Associated Persons endpoints.

first_name

string

Required

First name of the legal person

last_name

string

Required

Last name of the legal person

middle_name

string

Optional

Middle name of the legal person

ssn

string

Optional

Social Security Number is required for US beneficial owners. Passport, driver's license, or national ID is required for foreign beneficial owners.

passport

object

Optional

Passport Number. SSN, passport, driver's license, or national ID is required.

number

string

Required

Passport number

country_code

string

Required

Country code where the passport was issued. US Passports will be rejected as we require US citizens to submit SSN.

drivers_license

object

Optional

Driver's license. SSN, passport, driver's license, or national ID is required.

number

string

Required

Driver's license number

country_code

string

Required

Country code where the driver's license was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...). US Drivers License will be rejected as we require US citizens to submit SSN.

national_id

object

Optional

National ID. SSN, passport, driver's license, or national ID is required.

number

string

Required

National ID number

country_code

string

Required

Country code where the national ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

date_of_birth

string

Required

Date of birth (YYYY-MM-DD)

email

string

Optional

Email of the individual. Optional, but highly encouraged as it will increase likelihood of an automated verification.

is_control_person

boolean

Required

Boolean value which specifies if this person is a designated control person.

is_beneficial_owner

boolean

Required

Boolean value which specifies if this person is a designated beneficial owner.

ownership_percentage

integer

Optional

Percentage ownership, specified as a integer, of the beneficial owner

job_title

string

Optional

Job title of the beneficial owner or control person.

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/entities/business' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "business_name": "Yellen Cocktails LLC",
    "ein": "123456789",
    "legal_type": "llc",
    "website": "https://yellencocktails.com",
    "description": "Premium craft cocktail lounge and distillery",
    "industry": "Food & Beverage",
    "state_of_incorporation": "CA",
    "year_of_incorporation": "2019",
    "countries_of_operation": ["US"],
    "registration_id": {
        "number": "123456789",
        "country_code": "US"
    },
    "address": {
        "line_1": "555 California Street",
        "line_2": "Suite 200",
        "city": "San Francisco",
        "state": "CA",
        "postal_code": "94104",
        "country_code": "US"
    },
    "is_root": false
}'
Response

200

400

{
  "id": "enti_2Q1fIwKjnf7TmZP37mAuKjWXB2o",
  "name": "Yellen Cocktails LLC",
  "type": "BUSINESS",
  "verification_status": "VERIFIED",
  "is_root": false,
  "review_reasons": [],
  "documents": [],
  "business_details": {
    "business_name": "Yellen Cocktails LLC",
    "ein": "123456789",
    "website": "https://yellencocktails.com",
    "address": {
      "line_1": "555 California Street",
      "line_2": "Suite 200",
      "city": "San Francisco",
      "state": "CA",
      "postal_code": "94104",
      "country_code": "US"
    },
    "industry": "Food & Beverage",
    "legal_type": "llc",
    "registration_id": {
      "number": "123456789",
      "country_code": "US"
    },
    "state_of_incorporation": "CA",
    "year_of_incorporation": "2019",
    "description": "Premium craft cocktail lounge and distillery",
    "countries_of_operation": ["US"]
  }
}
Update a business entity
PATCH

/entities/business/<entity_id>

Update an existing business entity.

Managing Associated Persons

Beneficial owners and control persons are now managed through the Associated Persons endpoints. This endpoint updates only the core business details.

Path Parameters
entity_id

string

Required

ID of the business entity you're updating

Body Parameters
business_name

string

Optional

Legal Business Name. Must adhere to Fedwire character validation.

ein

string

Optional

Employer Identification Number (Tax ID)

industry

string

Optional

Industry in which the business entity operates.

website

string

Optional

Website of the business. Optional, but highly encouraged as it will increase likelihood of an automated verification.

dba_name

string

Optional

Doing Business As (DBA) name.

legal_type

string

Optional

Type of business. Permitted values are limited-partnership, trust, sole-proprietorship, corporation,llc, general-partnership, professional-association,government,non-profit, other.

state_of_incorporation

string

Optional

State in which the business is incorporated. Only postal abbreviations (e.g. AL, CA, DE, ...) are allowed. Only required for a root entity.

year_of_incorporation

string

Optional

Year in which the business entity was incorporated. Only required for a root entity.

country_of_incorporation

string

Optional

ISO 3166-1 Alpha-2 country code where the business is incorporated (e.g., US).

date_of_incorporation

string

Optional

Date the business was incorporated (YYYY-MM-DD).

has_virtual_address

boolean

Optional

Whether the business uses a virtual address service.

account_usage

array of strings

Optional

Indicates possible uses of the accounts an entity may use at Column. Only required for a root entity.

description

string

Optional

Description of the business entity. Only required for a root entity.

payment_volumes

string

Optional

Expected payment volumes. Only required for a root entity.

countries_of_operation

array of strings

Optional

Countries in which the business currently operates or expects to operate. Only ISO 3166-1 Alpha-2 Country Codes (e.g., US, FR, UK, DE, ...) are allowed. Only required for a root entity.

end_customer_type

string

Optional

Primary type of end customers the business serves.

expected_payment_rails

string

Optional

Comma-separated list of expected payment rails the business will use. Permitted values: ach, wire, swift, check, rtp.

makes_international_payments

boolean

Optional

Whether the business expects to send or receive international payments.

source_of_funds

string

Optional

Primary source of funds flowing into the account(s).

expected_use_of_funds

string

Optional

Primary expected use of funds flowing out of the account(s).

registration_id

object

Optional

Registration ID, typically for a non US incorporated company.

number

string

Required

Business registration ID

country_code

string

Required

Country code where the business registration ID was issued. ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

address

object

Optional

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/entities/business/<entity_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "website": "https://yellencocktails-updated.com",
    "makes_international_payments": true,
    "description": "Premium craft cocktail lounge with international cocktail imports"
  }'
Response

200

400

{
  "id": "enti_2Q1fIwKjnf7TmZP37mAuKjWXB2o",
  "name": "Yellen Cocktails LLC",
  "type": "BUSINESS",
  "verification_status": "VERIFIED",
  "is_root": false,
  "review_reasons": [],
  "documents": [],
  "business_details": {
    "business_name": "Yellen Cocktails LLC",
    "ein": "123456789",
    "website": "https://yellencocktails-updated.com",
    "address": {
      "line_1": "555 California Street",
      "line_2": "Suite 200",
      "city": "San Francisco",
      "state": "CA",
      "postal_code": "94104",
      "country_code": "US"
    },
    "industry": "Food & Beverage",
    "legal_type": "llc",
    "registration_id": {
      "number": "123456789",
      "country_code": "US"
    },
    "state_of_incorporation": "CA",
    "year_of_incorporation": "2019",
    "description": "Premium craft cocktail lounge with international cocktail imports",
    "countries_of_operation": ["US"]
  }
}
Get an entity by ID
GET

/entities/<entity_id>

Retrieve a single legal entity by its ID.

Path Parameters
entity_id

string

Required

ID of the entity you're requesting. Depending on the entity type, either the business or person object will be returned.

Request
curl 'https://api.column.com/entities/<entity_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "enti_2Q1fIwKjnf7TmZP37mAuKjWXB2o",
  "name": "Yellen Cocktails LLC",
  "type": "BUSINESS",
  "verification_status": "VERIFIED",
  "is_root": false,
  "review_reasons": [],
  "documents": [],
  "business_details": {
    "ein": "123456789",
    "business_name": "Yellen Cocktails LLC",
    "website": "https://yellencocktails.com",
    "address": {
      "line_1": "555 California Street",
      "line_2": "Suite 200",
      "city": "San Francisco",
      "state": "CA",
      "postal_code": "94104",
      "country_code": "US"
    },
    "industry": "Food & Beverage",
    "legal_type": "llc",
    "registration_id": {
      "number": "123456789",
      "country_code": "US"
    },
    "state_of_incorporation": "CA",
    "year_of_incorporation": "2019",
    "description": "Premium craft cocktail lounge and distillery",
    "countries_of_operation": ["US"]
  }
}
Delete an entity
DELETE

/entities/<entity_id>

Delete the underlying entity.

Removing entities

Entities can only be deleted if all their underlying accounts are deleted. Accounts can only be deleted when they have a $0 balance.

Path Parameters
entity_id

string

Required

ID of the entity you're deleting.

Request
curl 'https://api.column.com/entities/<entity_id>' \
  -XDELETE \
  -u :<YOUR API KEY>
Response

200

400

{}
List all entities
GET

/entities

Retrieve all entities on your platform. Filtered results can be retrieved with extra parameters in the query (`type`, `name`, etc.).

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

type

string

Optional

Return results with this entity type, either PERSON or BUSINESS.

verification_status

string

Optional

Return results with this verification status.

is_root

boolean

Optional

Indicates if the entity is the root entity of the platform.

name

string

Optional

Return entities with this name.

Request
curl 'https://api.column.com/entities' \
  -u :<YOUR API KEY>
Response

200

400

{
  "entities": [
    {
      "documents": [],
      "id": "enti_2NkTtT5NI3Lh0LpjpvxO4M2AZHd",
      "is_root": false,
      "name": "Oliver Smith Hockey",
      "review_reasons": [],
      "type": "PERSON",
      "verification_status": "VERIFIED"
    },
    {
      "documents": [],
      "id": "enti_2MCE4Cgh2Sl5ttZfnXYwzmfik0c",
      "is_root": false,
      "name": "Jim's Bakery",
      "review_reasons": [],
      "type": "BUSINESS",
      "verification_status": "VERIFIED"
    },
    {
      "documents": [],
      "id": "enti_25n5phSY8StZxU4C2Y7gAREGUdB",
      "is_root": false,
      "name": "Bruce Smith Hockey",
      "review_reasons": [],
      "type": "PERSON",
      "verification_status": "VERIFIED"
    },
    {
      "documents": [],
      "id": "enti_25FtFWv8n9rHaOoL3ZYttfEAr9k",
      "is_root": false,
      "name": "Yellen Cocktails LLC",
      "review_reasons": [],
      "type": "BUSINESS",
      "verification_status": "VERIFIED"
    },
    {
      "documents": [],
      "id": "enti_23ZaVYnHLsOdd1MIQJ0uQfp9cgO",
      "is_root": true,
      "name": "Sam Smith",
      "review_reasons": [],
      "type": "PERSON",
      "verification_status": "VERIFIED"
    },
    {
      "documents": [],
      "id": "enti_23ZT8vsfjNkjTFEN6c3OBrX9BUt",
      "is_root": false,
      "name": "Andrew Jackson",
      "review_reasons": [],
      "type": "PERSON",
      "verification_status": "VERIFIED"
    }
  ],
  "has_more": false
}
Link Associated Person
POST

/entities/{business_id}/associated-persons

Associate a person entity with a business entity. The person entity must already exist and be in VERIFIED status. Business entities can have multiple associated persons with different roles.

Important

Ownership percentages across all beneficial owners should not exceed 100%. Control persons are required for business verification.

Path Parameters
business_id

string

Required

ID of the business entity

Body Parameters
person_entity_id

string

Required

ID of the person entity to associate with the business

roles

array of strings

Required

Roles of the person in the business. control_person indicates decision-making authority, beneficial_owner indicates ownership stake of 25% or more, account_opener indicates the person who opened the account (requires at minimum a name and OFAC screening evidence). Can include multiple roles.

ownership_percentage

integer

Optional

Percentage ownership of the person in the business (0-100). Required when roles include beneficial_owner

title_in_business

string

Optional

Job title or role of the person in the business

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/associated-persons' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "person_entity_id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
    "roles": ["control_person", "beneficial_owner"],
    "ownership_percentage": 75,
    "title_in_business": "CEO and Founder"
  }'
Response

200

400

{
  "person_entity_id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
  "roles": ["control_person", "beneficial_owner"],
  "ownership_percentage": 75,
  "title_in_business": "CEO and Founder"
}
Get Associated Persons
GET

/entities/{business_id}/associated-persons

Retrieve all persons associated with a business entity.

Path Parameters
business_id

string

Required

ID of the business entity

Query Parameters
limit

integer

Optional

Maximum number of associated persons to return (default: 100, max: 1000)

offset

integer

Optional

Number of associated persons to skip for pagination (default: 0)

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/associated-persons' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "associated_persons": [
    {
      "person_entity_id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
      "roles": ["control_person", "beneficial_owner"],
      "ownership_percentage": 75,
      "title_in_business": "CEO and Founder",
      "person_details": {
        "first_name": "Oliver",
        "last_name": "Hockey",
        "email": "oliver@column.com"
      }
    }
  ],
  "has_more": false,
  "total_count": 1
}
Update Associated Persons
PUT

/entities/{business_id}/associated-persons

Replace the complete list of associated persons for a business.

Destructive Operation

This operation will remove any associated persons not included in the request. To add a single person without affecting others, use the Link Associated Person endpoint instead.

Path Parameters
business_id

string

Required

ID of the business entity

Body Parameters
associated_persons

array of objects

Required

Complete list of associated persons for the business

person_entity_id

string

Required

ID of the person entity to associate with the business

roles

array of strings

Required

Roles of the person in the business. Can include control_person, beneficial_owner

ownership_percentage

integer

Optional

Percentage ownership of the person in the business

title_in_business

string

Optional

Job title or role of the person in the business

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/associated-persons' \
  -XPUT \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "associated_persons": [
      {
        "person_entity_id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
        "roles": ["control_person", "beneficial_owner"],
        "ownership_percentage": 85,
        "title_in_business": "CEO, Founder, and President"
      }
    ]
  }'
Response

200

400

{
  "id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "associated_persons": [
    {
      "person_entity_id": "enti_2Q1ctiJm1NypVqCt8UBC8e4xTfH",
      "roles": ["control_person", "beneficial_owner"],
      "ownership_percentage": 85,
      "title_in_business": "CEO, Founder, and President",
      "person_details": {
        "first_name": "Oliver",
        "last_name": "Hockey",
        "email": "oliver@column.com"
      }
    }
  ]
}
Create File Evidence
POST

/entities/{entity_id}/evidence

Create evidence by linking an existing document.

Document Requirements

Documents must be uploaded via the Documents API first. Accepted file types include PDF, JPG, PNG, TIFF. Maximum file size is 5GB. You may also directly upload a document using the Create Evidence with Upload API documented below.

Path Parameters
entity_id

string

Required

ID of the entity

Body Parameters
evidence_type

string

Required

Type of evidence. Must be file for document evidence. Available types: file, third_party_json, signature

purpose

string

Required

Purpose of the evidence. Available purposes: proof_of_address, business_formation, identity_verification, tax_id_confirmation, active_status_certificate, signed_account_agreement, attestation_control_person, attestation_beneficial_ownership, attestation_account_info_truth, attestation_terms_of_service, ofac_screening, adverse_media_screening, pep_screening

data

object

Required

Evidence data containing document reference

document_id

string

Required

ID of the existing document uploaded via the Documents API. Document must be in 'uploaded' status and not already used for evidence of the same purpose

description

string

Optional

Description of the evidence

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "evidence_type": "file",
    "purpose": "business_formation",
    "data": {
      "document_id": "docu_2zEuexQ1tYgBO92ZHLZa7YV3F0i"
    },
    "description": "Articles of incorporation for business formation verification"
  }'
Response

200

400

{
  "id": "evid_2zEueyHBVWyPjzAm8h1Hn3pV4et",
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "evidence_type": "file",
  "purpose": "business_formation",
  "data": {
    "document_id": "docu_2zEuexQ1tYgBO92ZHLZa7YV3F0i"
  },
  "description": "Articles of incorporation for business formation verification",
  "created_at": "2024-01-15T10:30:00Z"
}
Create Evidence with File Upload
POST

/entities/{entity_id}/evidence

Create evidence with direct file upload in a single request.

Path Parameters
entity_id

string

Required

ID of the entity

Content-Type: multipart/form-data

Body Parameters
file

file

Required

The document file to upload. Maximum size: 5GB. Supported formats: PDF, JPG, PNG, TIFF

evidence_type

string

Required

Type of evidence. Must be file for file uploads. Available types: file, third_party_json, signature

purpose

string

Required

Purpose of the evidence. Available purposes: proof_of_address, business_formation, identity_verification, tax_id_confirmation, active_status_certificate, signed_account_agreement, attestation_control_person, attestation_beneficial_ownership, attestation_account_info_truth, attestation_terms_of_service, ofac_screening, adverse_media_screening, pep_screening

document_type

string

Required

Type of document being uploaded

description

string

Optional

Description of the evidence

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence' \
  -XPOST \
  -u :<YOUR API KEY> \
  -F "file=@utility_bill.txt" \
  -F "evidence_type=file" \
  -F "purpose=identity_verification" \
  -F "document_type=other" \
  -F "description=Utility bill for address verification"
Response

200

400

{
  "id": "evid_2zEuf3oP0xR9sYdZ5oLT6SvVzMr",
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "evidence_type": "file",
  "purpose": "identity_verification",
  "data": {
    "document_id": "docu_2zEuf4qR1yS0tZeA6pMU7TvWzNs"
  },
  "description": "Utility bill for address verification",
  "created_at": "2024-01-15T10:30:00Z"
}
Create Signature Evidence
POST

/entities/{entity_id}/evidence

Create signature-based evidence for attestations.

Path Parameters
entity_id

string

Required

ID of the entity

Body Parameters
evidence_type

string

Required

Type of evidence. Must be signature for signature evidence. Available types: file, third_party_json, signature

purpose

string

Required

Purpose of the evidence. Available purposes: proof_of_address, business_formation, identity_verification, tax_id_confirmation, active_status_certificate, signed_account_agreement, attestation_control_person, attestation_beneficial_ownership, attestation_account_info_truth, attestation_terms_of_service, ofac_screening, adverse_media_screening, pep_screening

data

object

Required

Signature data

signer_name

string

Required

Name of the person who signed

signer_title

string

Optional

Title of the signer

signed_at

string

Required

ISO 8601 timestamp when the signature was created

description

string

Optional

Description of the evidence

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "evidence_type": "signature",
    "purpose": "attestation_beneficial_ownership",
    "data": {
      "signer_name": "Alice Johnson",
      "signer_title": "CEO and Founder",
      "signed_at": "2024-01-15T10:30:00Z"
    },
    "description": "Beneficial ownership attestation signature"
  }'
Response

200

400

{
  "id": "evid_2zEuf1kL8vN9pWbX3mJR4QvTzKp",
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "evidence_type": "signature",
  "purpose": "attestation_beneficial_ownership",
  "data": {
    "signer_name": "Alice Johnson",
    "signer_title": "CEO and Founder",
    "signed_at": "2024-01-15T10:30:00Z"
  },
  "description": "Beneficial ownership attestation signature",
  "created_at": "2024-01-15T10:30:00Z"
}
Create Third Party Evidence
POST

/entities/{entity_id}/evidence

Create evidence from third-party verification services. If your KYC provider sends you a JSON blob, you can pass that in directly into data if the third_party_json is passed in as evidence_type.

Path Parameters
entity_id

string

Required

ID of the entity

Body Parameters
evidence_type

string

Required

Type of evidence. Must be third_party_json for third-party verification data. Available types: file, third_party_json, signature

purpose

string

Required

Purpose of the evidence. Available purposes: proof_of_address, business_formation, identity_verification, tax_id_confirmation, active_status_certificate, signed_account_agreement, attestation_control_person, attestation_beneficial_ownership, attestation_account_info_truth, attestation_terms_of_service, ofac_screening, adverse_media_screening, pep_screening

data

object

Required

Third-party verification data. This can be any JSON blob up to 1MB in size that verifies the evidence.

description

string

Optional

Description of the evidence

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "evidence_type": "third_party_json",
    "purpose": "identity_verification",
    "data": {
      "source": "TestKYCProvider",
      "verification_id": "test_1642248600",
      "verified": true,
      "match_score": 0.95,
      "verification_date": "2024-01-15T10:30:00Z",
      "details": {
        "name_match": true,
        "address_match": true,
        "business_registry_match": true
      }
    },
    "description": "KYC verification from test provider"
  }'
Response

200

400

{
  "id": "evid_2zEuf2mN9wQ8rXcY4nKS5RvUzLq",
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "evidence_type": "third_party_json",
  "purpose": "identity_verification",
  "data": {
    "source": "TestKYCProvider",
    "verification_id": "test_1642248600",
    "verified": true,
    "match_score": 0.95,
    "verification_date": "2024-01-15T10:30:00Z",
    "details": {
      "name_match": true,
      "address_match": true,
      "business_registry_match": true
    }
  },
  "description": "KYC verification from test provider",
  "created_at": "2024-01-15T10:30:00Z"
}
Get Entity Evidence
GET

/entities/{entity_id}/evidence

Retrieve evidence for an entity with optional filtering.

Path Parameters
entity_id

string

Required

ID of the entity

Query Parameters
evidence_type

string

Optional

Filter by evidence type (e.g., file, signature, third_party_json)

purpose

string

Optional

Filter by purpose (e.g., business_formation, identity_verification)

Request
# Get all evidence
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence' \
  -u :<YOUR API KEY>

# Filter by evidence type  
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence?evidence_type=file' \
  -u :<YOUR API KEY>

# Filter by purpose
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/evidence?purpose=business_formation' \
  -u :<YOUR API KEY>
Response

200

400

{
  "evidence": [
    {
      "id": "evid_2zEueyHBVWyPjzAm8h1Hn3pV4et",
      "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
      "evidence_type": "file",
      "purpose": "business_formation",
      "data": {
        "document_id": "docu_2zEuexQ1tYgBO92ZHLZa7YV3F0i"
      },
      "description": "Articles of incorporation",
      "created_at": "2024-01-15T10:30:00Z"
    }
  ],
  "has_more": false
}
Get Entity Compliance
GET

/entities/{entity_id}/compliance

Retrieve which fields are not yet populated on an entity based on the compliance requirements for your program. Column will work with you to define required fields given your specific use case.

Field Status Values
complete: Field has been provided and validated
missing: Field is required but not provided
invalid: Field provided but failed validation
pending: Field is being verified
Path Parameters
entity_id

string

Required

ID of the entity

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/compliance' \
  -u :<YOUR API KEY>
Response

200

400

{
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "updated_at": "2024-01-15T10:30:00Z",
  "fields": {
    "first_name": "complete",
    "last_name": "complete",
    "ssn": "missing",
    "address.line_1": "complete",
    "address.city": "complete",
    "evidence.proof_of_address": "missing",
  }
}
Submit Additional Requirements
POST

/entities/{entity_id}/additional-requirements

Submit additional requirements that may be configured as part of your compliance program at Column.

Custom Schema

The schema for additional requirements is configured per platform. The fields shown below are examples only and will vary based on your specific compliance program. Contact your Column solutions engineer to understand which fields are required for your platform.

Validation

All custom fields are validated according to your platform's compliance configuration. Invalid data will result in a 400 error with field-specific error messages.

Path Parameters
entity_id

string

Required

ID of the entity

Body Parameters
sample_field_1

varies

Optional

Example custom field - actual fields will vary based on your platform configuration

sample_field_2

varies

Optional

Example custom field - actual fields will vary based on your platform configuration

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/additional-requirements' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "sample_field_1": "sample_value_1",
    "sample_field_2": "sample_value_2"
  }'
Response

200

400

{
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "updated_at": "2024-01-15T10:30:00Z",
  "additional_requirements": {
    "sample_field_1": "sample_value_1",
    "sample_field_2": "sample_value_2"
  }
}
Get Additional Requirements
GET

/entities/{entity_id}/additional-requirements

Retrieve submitted additional requirements for an entity.

Path Parameters
entity_id

string

Required

ID of the entity

Request
curl 'https://api.column.com/entities/enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD/additional-requirements' \
  -u :<YOUR API KEY>
Response

200

400

{
  "entity_id": "enti_2dk2oXqPcB5Xb5wFpnrg50F7BeD",
  "updated_at": "2024-01-15T10:30:00Z",
  "additional_requirements": {
    "employee_count": 225,
    "stock_ticker": "ABCD"
  }
}
Bank Account object

A bank account is the object in the Column data model that has the ability to hold, send, and receive funds. Bank accounts are children of entities. An entity can have multiple bank accounts. Bank accounts can have one or multiple account numbers. Read about bank accounts in our data model section for more information.

Object Parameters
balances

object

Lists all possible balance amounts for an account represented in the smallest unit of the currency.

available_amount

int64

This balance is the amount of money that is available to spend. If the account is not enabled for overdrafts, any requests to move money above this number will fail.

holding_amount

int64

The balance of money which is currently in a HOLD state specified in the Create Book Transfer API.

locked_amount

int64

Only applicable for root accounts. The locked balance is posted on the account but cannot be withdrawn.

pending_amount

int64

The total amount of transfers that are in a pending state. These transfers will affect the available_balance unless they are canceled prior to completion.

bic

string

The Swift BIC code for this bank account for international wire payments.

created_at

string

The timestamp at which the bank account was created.

currency_code

string

Currency of the balances in the account. For all amounts this will be USD.

default_account_number

string

The externally facing default account number tied to this bank account.

default_account_number_id

string

The default account number ID tied to this account.

description

string

A name for the bank account (mininum: 3 characters)

id

string

Unique ID for this account.

interest_config_id

string

The ID of interest config for this account. If it is not set, the default interest config of your platform will be used for this account (read more).

is_interest_bearing

boolean

Whether your platform needs to accrue and pay interest to this account (read more).

is_overdraftable

boolean

Whether the account can be overdrafted, must include a overdraft_reserve_account_id

overdraft_reserve_account_id

string

The overdraft reserve account that this account linked to. If is_overdraftable: true then this field is required.

owners

array

List of entity_id's which are tied to this bank account

routing_number

string

The 9-digit ABA routing number for this bank account.

type

string

Bank Account type. Can be CHECKING, OVERDRAFT_RESERVE, or PROGRAM_RESERVE

display_name

string

The display name for the bank account. Display name is an account nickname used on Column's Dashboard.

fdic_insurance

string

The type of FDIC insurance offered on this account. The default value is "standard".

status

string

The status of the bank account. Values can either be open or frozen.

Bank Account object
{
  "balances": {
    "available_amount": 5100,
    "holding_amount": 0,
    "locked_amount": 0,
    "pending_amount": 0
  },
  "bic": "CLNOUS66",
  "created_at": "2021-10-14T17:50:21Z",
  "currency_code": "USD",
  "default_account_number": "123456789012345",
  "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
  "description": "John Doe",
  "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
  "is_overdraftable": false,
  "overdraft_reserve_account_id": "",
  "owners": [
    "enti_2YHAYW65t2fEna7uxll10OHzoty"
  ],
  "routing_number": "121145307",
  "type": "CHECKING",
  "status": "open"
}
Create a new bank account
POST

/bank-accounts

Creates a new bank account under an entity.

Body Parameters
description

string

Required

A name for the bank account (minimum of three characters)

entity_id

string

Required

The entity to create the account under

interest_config_id

string

Optional

The ID of interest config for this account. If it is not set, the default interest config of your platform will be used for this account (read more).

is_interest_bearing

boolean

Optional

Whether your platform needs to accrue and pay interests to this account (read more).

is_overdraftable

boolean

Optional

Whether the account can be overdrafted, must include a overdraft_reserve_account_id

overdraft_reserve_account_id

string

Optional

The overdraft reserve account that this account linked to. If is_overdraftable: true then this field is required

display_name

string

Optional

The display name for the bank account. Display name is an account nickname used on Column's Dashboard.

fdic_insurance

string

Optional

The type of FDIC insurance offered on this account. The default value is "standard".

Request
curl 'https://api.column.com/bank-accounts' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Travel Checking" \
  -d entity_id="<entity_id>"
Response

200

400

{
  "balances": {
    "available_amount": 0,
    "holding_amount": 0,
    "locked_amount": 0,
    "pending_amount": 0
  },
  "bic": "CLNOUS66",
  "created_at": "2021-10-14T17:50:21Z",
  "currency_code": "USD",
  "default_account_number": "123456789012345",
  "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
  "description": "Travel Checking",
  "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
  "is_overdraftable": false,
  "overdraft_reserve_account_id": "",
  "owners": [
    "enti_2YHAYW65t2fEna7uxll10OHzoty"
  ],
  "routing_number": "121145307",
  "type": "CHECKING",
  "status": "open"
}
List all bank accounts
GET

/bank-accounts

List all bank accounts under the platform. Filtered results can be retrieved with extra parameters in the query.

Query Parameters
entity_id

string

Optional

List all accounts that belong to the entity with the entity_id.

is_overdraftable

boolean

Optional

List all accounts that are overdraftable.

type

string

Optional

Bank Account type. Can be CHECKING, OVERDRAFT_RESERVE, or PROGRAM_RESERVE.

overdraft_reserve_account_id

string

Optional

List all bank accounts with the given overdraft_reserve_account_id.

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/bank-accounts?entity_id=<entity_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "bank_accounts": [
    {
      "balances": {
        "available_amount": 0,
        "holding_amount": 0,
        "locked_amount": 0,
        "pending_amount": 0
      },
      "bic": "CLNOUS66",
      "created_at": "2021-10-14T17:50:21Z",
      "currency_code": "USD",
      "default_account_number": "123456789012345",
      "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
      "description": "Travel Checking",
      "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
      "is_overdraftable": false,
      "overdraft_reserve_account_id": "",
      "owners": [
        "enti_2YHAYW65t2fEna7uxll10OHzoty"
      ],
      "routing_number": "121145307",
      "type": "CHECKING",
      "status": "open"
    }
  ],
  "has_more": false
}
Get a bank account by ID
GET

/bank-accounts/<bank_account_id>

Get a bank account by its id

Path Parameters
bank_account_id

string

Required

The ID of the bank account you are looking up

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "balances": {
    "available_amount": 0,
    "holding_amount": 0,
    "locked_amount": 0,
    "pending_amount": 0
  },
  "bic": "CLNOUS66",
  "created_at": "2021-10-14T17:50:21Z",
  "currency_code": "USD",
  "default_account_number": "123456789012345",
  "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
  "description": "Travel Checking",
  "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
  "is_overdraftable": false,
  "overdraft_reserve_account_id": "",
  "owners": [
    "enti_2YHAYW65t2fEna7uxll10OHzoty"
  ],
  "routing_number": "121145307",
  "type": "CHECKING",
  "status": "open"
}
Update a bank account
PATCH

/bank-accounts/<bank_account_id>

Updates a bank account by its id

Path Parameters
bank_account_id

string

Required

Body Parameters
description

string

Optional

interest_config_id

string

Optional

The ID of interest config for this account. Set "" (empty string) to remove account level interest config so that the default interest config of your platform will be used for this account (read more).

is_interest_bearing

boolean

Optional

Whether your platform needs to accrue and pay interests to this account (read more).

is_overdraftable

boolean

Optional

Whether the account can be overdrafted, must include a overdraft_reserve_account_id

overdraft_reserve_account_id

string

Optional

The overdraft reserve account that this account linked to if is_overdraftable is true

display_name

string

Optional

The display name for the bank account. Display name is an account nickname used on Column's Dashboard.

is_ach_debitable

boolean

Optional

A boolean value which specifies if the account can be debited by an external RDFI. If set to false, Column will automatically return any debits to this account.

Request
url 'https://api.column.com/bank-accounts/<bank_account_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -d description="Travel Checking UPDATE"
Response

200

400

{
  "balances": {
    "available_amount": 0,
    "holding_amount": 0,
    "locked_amount": 0,
    "pending_amount": 0
  },
  "bic": "CLNOUS66",
  "created_at": "2021-10-14T17:50:21Z",
  "currency_code": "USD",
  "default_account_number": "123456789012345",
  "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
  "description": "Travel Checking",
  "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
  "is_overdraftable": false,
  "overdraft_reserve_account_id": "",
  "owners": ["enti_2YHAYW65t2fEna7uxll10OHzoty"],
  "routing_number": "121145307",
  "type": "CHECKING"
}
Delete a bank account
DELETE

/bank-accounts/<bank_account_id>

This deletes a bank account

Removing accounts

Bank Accounts can only be deleted when they have a $0 balance.

Path Parameters
bank_account_id

string

Required

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>' \
  -XDELETE \
  -u :<YOUR API KEY>
Response

200

400

{}
Bank Account Summary object
Object Parameters
available_balance_credit

string

Total credit amount in cents applied to available_balance. Zero or positive.

available_balance_debit

string

Total debit amount in cents applied to available_balance. Zero or negative.

available_balance_close

string

Close available_balance in cents at the end of effective_on in time_zone.

currency

string

The currency of the balances.

effective_on

string

Effective date of the summary.

holding_balance_credit

string

Total credit amount in cents applied to holding_balance. Zero or positive.

holding_balance_debit

string

Total debit amount in cents applied to holding_balance. Zero or negative.

holding_balance_close

string

Close holding_balance in cents at the end of effective_on in time_zone.

locked_balance_credit

string

Total credit amount in cents applied to locked_balance. Zero or positive.

locked_balance_debit

string

Total debit amount in cents applied to locked_balance. Zero or negative.

locked_balance_close

string

Close locked_balance in cents at the end of effective_on in time_zone.

pending_balance_credit

string

Total credit amount in cents applied to pending_balance. Zero or positive.

pending_balance_debit

string

Total debit amount in cents applied to pending_balance. Zero or negative.

pending_balance_close

string

Close pending_balance in cents at the end of effective_on in time_zone.

time_zone

string

Time zone of effective_on to decide day boundaries. You can set your platform reporting time zone in Platform Settings on Dashboard.

transaction_count

int32

Total number of transactions on the day of effective_on.

Bank Account Summary object
{
  "effective_on": "2022-03-01",
  "time_zone": "America/Los_Angeles",
  "currency": "USD",
  "transaction_count": 1,
  "available_balance_credit": "100",
  "available_balance_debit": "-200",
  "available_balance_close": "300",
  "pending_balance_credit": "400",
  "pending_balance_debit": "-500",
  "pending_balance_close": "600",
  "locked_balance_credit": "700",
  "locked_balance_debit": "-800",
  "locked_balance_close": "900",
  "holding_balance_credit": "1000",
  "holding_balance_debit": "-1100",
  "holding_balance_close": "1200"
}
Get bank account summary history
GET

/bank-accounts/<bank_account_id>/history

Get the summary history of a bank account. This endpoint returns a list of summaries, one summary per day, for a single bank account. You must set your platform reporting time zone in Platform Settings on Dashboard to use this endpoint (read more).

Path Parameters
bank_account_id

string

Required

The ID of the bank account you are looking up

Query Parameters
from_date

string

Required

Starting date of the history. Format: YYYY-MM-DD.

to_date

string

Required

Ending date of the history. Format: YYYY-MM-DD. Maximum date range: 31 days.

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>/history?from_date=2022-03-01&to_date=2022-03-02' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "bacc_27kpr2m6CsHkFYBocMa7l484DSd",
  "history": [
    {
      "effective_on": "2022-03-01",
      "time_zone": "America/Los_Angeles",
      "currency": "USD",
      "transaction_count": 1,
      "available_balance_credit": "100",
      "available_balance_debit": "-200",
      "available_balance_close": "300",
      "pending_balance_credit": "400",
      "pending_balance_debit": "-500",
      "pending_balance_close": "600",
      "locked_balance_credit": "700",
      "locked_balance_debit": "-800",
      "locked_balance_close": "900",
      "holding_balance_credit": "1000",
      "holding_balance_debit": "-1100",
      "holding_balance_close": "1200"
    },
    {
      "effective_on": "2022-03-02",
      "time_zone": "America/Los_Angeles",
      "currency": "USD",
      "transaction_count": 2,
      "available_balance_credit": "200",
      "available_balance_debit": "-300",
      "available_balance_close": "400",
      "pending_balance_credit": "500",
      "pending_balance_debit": "-600",
      "pending_balance_close": "700",
      "locked_balance_credit": "800",
      "locked_balance_debit": "-900",
      "locked_balance_close": "1000",
      "holding_balance_credit": "1100",
      "holding_balance_debit": "-1200",
      "holding_balance_close": "1300"
    }
  ]
}
Bank Account Overdraft Alert

A bank account overdraft alert is a notification when an account in your platform has been overdrawn and funds have been locked in your reserve accounts, or has been credited and locked funds in your reserve accounts have been released. Read more.

Object Parameters
available_balance

object

The current available balance of the bank account after this alert.

cents

int64

Amount in cents

currency_code

string

Amount currency. The three-letter currency code defined in ISO 4217 (e.g. USD)

bank_account_id

string

ID of the bank account that is overdrawn or credited.

overdraft_amount

object

The amount that has been locked or released in the reserve account.

cents

int64

Amount in cents

currency_code

string

Amount currency. The three-letter currency code defined in ISO 4217 (e.g. USD)

reserve_account_id

string

ID of the reserve account in which funds are locked or released.

transfer_id

string

ID of transfer that triggered this alert.

Bank Account object
{
  "available_balance": {
    "cents": -240000,
    "currency_code": "USD"
  },
  "bank_account_id": "bacc_2XJUlsjtGxHwFSyIxpWPmJ6a53q",
  "overdraft_amount": {
    "cents": 30000,
    "currency_code": "USD"
  },
  "reserve_account_id": "bacc_2XJUltwuf4e3L5g8D6cljBP79os",
  "transfer_id": "wire_2XJUlyL4xJ0BDynRsS0A2MHEtll"
}
Add a bank account owner
POST

/bank-accounts/<bank_account_id>/owner

Adds an additional owner to an existing bank account. This enables joint ownership where multiple entities can have ownership rights. The entity must be verified before being added as an owner and must belong to the same platform as the bank account.

Path Parameters
bank_account_id

string

Required

The unique identifier of the bank account (starts with bacc_)

Body Parameters
entity_id

string

Required

The unique identifier of the entity to add as an owner (starts with enti_)

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>/owner' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d entity_id="enti_31cPh49RYD3XISywY7yBUuvO79F"
Response

200

400

{
  "balances": {
    "available_amount": 0,
    "holding_amount": 0,
    "locked_amount": 0,
    "pending_amount": 0
  },
  "bic": "CLNOUS66",
  "created_at": "2021-10-14T17:50:21Z",
  "currency_code": "USD",
  "default_account_number": "123456789012345",
  "default_account_number_id": "acno_2YHAWG9FTCxtL5emK1oVKCOx7fk",
  "description": "Travel Checking",
  "id": "bacc_2YHAXVyuS2xcJW12Buh9zsxV7vC",
  "is_overdraftable": false,
  "overdraft_reserve_account_id": "",
  "owners": [
    "enti_2YHAYW65t2fEna7uxll10OHzoty",
    "enti_31cPh49RYD3XISywY7yBUuvO79F"
  ],
  "routing_number": "121145307",
  "type": "CHECKING",
  "status": "open"
}
Account number object

An account number is the child of a bank account. A bank account can have one or more account numbers. Think of account numbers as a pointer to a bank account. Account numbers will be used by external banks to transact with Column bank accounts. Read about account numbers in our data model section for more information.

Object Parameters
account_number

string

The externally facing account number tied to this bank account.

bank_account_id

string

The Column bacc_id tied to this bank account.

bic

string

The Swift BIC code for this bank account for international wire payments.

created_at

string

The timestamp the account number was created.

description

string

A name for the account number (minimum of three characters)

id

string

The unique id of the object

routing_number

string

The 9-digit ABA routing number for this bank account.

Account Number object
{
  "account_number": "256783259046169",
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "bic": "CLNOUS66",
  "created_at": "2022-03-01T20:09:42.949787176Z",
  "description": "Travel Checking Account Number",
  "id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "routing_number": "121145307"
}
Create a new account number
POST

/bank-accounts/<bank_account_id>/account-numbers

Creates a new account number that points to the associated bank account

Path Parameters
bank_account_id

string

Required

The bank account that you want the new account number to point to

Body Parameters
description

string

Optional

A description for this account number

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>/account-numbers' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Travel Checking Account Number"
Response

200

400

{
  "account_number": "256783259046169",
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "bic": "CLNOUS66",
  "created_at": "2022-03-01T20:09:42.949787176Z",
  "description": "Travel Checking Account Number",
  "id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "routing_number": "121145307"
}
List all account numbers from a bank account
GET

/bank-accounts/<bank_account_id>/account-numbers

Lists all the account numbers that point to a specific bank account

Path Parameters
bank_account_id

string

Required

The bank account that you want the new account number to point to

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>/account-numbers' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_numbers": [
    {
      "account_number": "256783259046169",
      "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
      "bic": "CLNOUS66",
      "created_at": "2022-03-01T20:09:42.949787176Z",
      "description": "Travel Checking Account Number",
      "id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
      "routing_number": "121145307"
    }
  ],
  "has_more": true
}
Get an account number
GET

/account-numbers/<account_number_id>

Lists all the account numbers that point to a specific bank account

Path Parameters
account_number_id

string

Required

The id for the account number

Request
curl 'https://api.column.com/account-numbers/<account_number_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number": "256783259046169",
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "bic": "CLNOUS66",
  "created_at": "2022-03-01T20:09:42.949787176Z",
  "description": "Travel Checking Account Number",
  "id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "routing_number": "121145307"
}
Loan object

A loan is an object that lives under an entity, at the same level as a bank account. Just like entities can have multiple bank accounts, entities can have multiple loans. Loans are the foundation for many lending-oriented use cases such as charge cards and term loans. Read more.

Object Parameters
allow_overpayment

boolean

Determines if the borrower is allowed to pay more than the required amount on their loan.

auto_sell

boolean

Indicates if seasoned principals/interests should be automatically sold to your platform.

balances

object

interest_paid

string

Total paid interest in cents belonging to Column and your platform.

interest_receivable

string

Total outstanding interest receivable in cents for principal belonging to Column and your platform.

principal_charged_off

string

The charged-off principal receivable.

principal_holding

string

The principal receivable of the loan which is in a holding state.

principal_outstanding

string

The outstanding principal receivable of the loan belonging to Column and your platform.

principal_paid

string

The principal receivable of the loan which has been paid belonging to Column and your platform.

retained_interest_paid

string

Total paid interest in cents belonging to Column.

retained_interest_receivable

string

Total outstanding interest receivable in cents for principal belonging to Column.

retained_principal_outstanding

string

Total outstanding principal receivable in cents belonging to Column.

retained_principal_paid

string

Total paid principal receivable in cents belonging to Column.

servicing_fee_payable

string

Total outstanding servicing fee payable in cents to your platform.

canceled_at

string

The timestamp the loan was canceled at. Returns null when not applicable.

charged_off_at

string

The timestamp the loan was charged off. Returns null when not applicable.

created_at

string

The timestamp the loan was created.

currency

string

The currency of the loan. Currently only USD is supported.

delinquent_at

string

The timestamp the loan was marked as delinquent. Returns null when not applicable.

description

string

The description of the loan in the Column dashboard.

disputed_at

string

The timestamp the loan was marked as disputed. Returns null when not applicable.

id

string

The ID of the loan object.

interest_config_id

string

ID of the interest configuration to accrue interest receivable daily.

is_business_seasoning_days

boolean

Indicates if seasoning_days are business days or calendar days.

allow_overpayment

boolean

Indicates if a loan is able to be overpaid and have a `principal_outstanding` of less than $0. If false, payments that would result in a loan having a negative balance will be blocked.

is_revolving

boolean

Indicates whether or not the loan is revolving. If true the loan can have multiple disbursements.

loan_program_id

string

ID of the loan program for this loan.

maturity_date

string

The maturity date of the loan.

max_principal_balance

string

The max principal balance of the loan. This is akin to a credit limit. Disbursements will fail if the resulting principal will be above the max principal.

paid_off_at

string

The timestamp the loan is marked as paid off. Returns null when not applicable.

primary_signer_entity_id

string

The Column entity_id which the loan is related to.

retained_by_column

boolean

Indicates if this loan should be retained by Column. Loans retained by Column are not eligible for your platform to purchase.

seasoning_days

int

Number of days principal receivables will be seasoned.

status

string

The current status of the loan. A loan can have a status of current, delinquent, charged_off, in_dispute, canceled or paid_off.

Loan object
{
  "id": "loan_2zEi4Q067eiQqyQkGXPqEzWXn5Q",
  "created_at": "2025-06-06T08:00:00Z",
  "primary_signer_entity_id": "enti_2zEi4U3gAGjdRAVHOJl9UkyG27K",
  "status": "current",
  "maturity_date": "2025-07-30",
  "delinquent_at": null,
  "charged_off_at": null,
  "disputed_at": null,
  "paid_off_at": null,
  "canceled_at": null,
  "description": "",
  "allow_overpayment": false,
  "is_revolving": true,
  "currency": "USD",
  "max_principal_balance": "100000000000",
  "balances": {
    "principal_outstanding": "6666600",
    "principal_holding": "0",
    "principal_paid": "33300",
    "principal_charged_off": "0",
    "retained_principal_outstanding": "1111100",
    "retained_principal_paid": "5500",
    "interest_receivable": "54400",
    "retained_interest_receivable": "9800",
    "interest_paid": "300",
    "retained_interest_paid": "100",
    "servicing_fee_payable": "560"
  },
  "retained_by_column": false,
  "auto_sell": false,
  "interest_config_id": "icfg_2zEi4VfLQfR06mm1fnAGcwcNT1D",
  "loan_program_id": "lpgm_2zEi4QiopsBnyfuHQweFXc7Csi8",
  "seasoning_days": 2,
  "is_business_seasoning_days": false
}
Create a new loan
POST

/loans

Creates a new loan under an entity.

Body Parameters
currency

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

description

string

Optional

The description of the loan in the Column dashboard.

entity_id

boolean

Required

The entity to create the loan under.

is_revolving

boolean

Optional

Indicates whether or not the loan is revolving. If true the loan can have multiple disbursements. Default: the value in the loan program.

allow_overpayment

boolean

Optional

Indicates if a loan is able to be overpaid and have a `principal_outstanding` of less than $0. If false, payments that would result in a loan having a negative balance will be blocked.

interest_config

object

Optional

Payload to create a new interest config at loan creation (rather than before). Either interest_config_id or interest_config may be specified, but not both.

accrual_method

string

Required

The accrual method by which a loan will accrue interest. Possible values: actual_360, actual_365, and actual_actual.

description

string

Required

Description of the new interest config, up to 255 characters.

history

list

Required

Set interest rates for different days. Refer to our Interest Config API for more details.

effective_date

string

Optional

The effective date for this interest rate configuration. Either effective_date or effective_after_days must be provided, but not both.

effective_after_days

number

Optional

The number of days after which this interest rate configuration becomes effective. Either effective_date or effective_after_days must be provided, but not both.

fixed_rate

number

Optional

This tier uses a fixed interest rate (e.g., "0.045" means 4.50%, only zero or positive rates are allowed).

pivot_percentage

number

Optional

This tier uses a percentage of the pivot rate (e.g., "0.85" means 85% of the pivot rate, only zero or positive percentages are allowed).

pivot_relative

number

Optional

This tier uses a premium or discount to the pivot rate (e.g., "-0.015" means pivot rate minus 1.50%).

retained_by_column

boolean

Optional

Indicates if this loan should be retained by Column. Loans retained by Column are not eligible for your platform to purchase. Default: the value in the loan program.

auto_sell

boolean

Optional

Indicates if seasoned principals/interests should be automatically sold to your platform. Default: the value in the loan program.

loan_program_id

string

Optional

ID of the loan program for this loan. If this field is not set, your platform's default loan program will be used.

seasoning_days

integer

Optional

Number of days principal receivables will be seasoned. Default: the value in the loan program.

is_business_seasoning_days

boolean

Optional

Indicates if seasoning_days are business days or calendar days. Default: the value in the loan program.

interest_config_id

string

Optional

ID of the interest configuration used to accrue interest receivable daily. If this field is not set, the default interest configuration of the loan program will be used. The same interest configuration can be shared across multiple loans. Either interest_config_id or interest_config may be specified, but not both.

maturity_date

string

Optional

The maturity date of the loan. It is required if the loan is not revolving.

max_principal_balance

string

Required

The max principal balance of the loan in cents. This is akin to a credit limit. Disbursements will fail if the resulting principal will be above the max principal.

e.g. $1.75 would be represented by 175.

Request
curl 'https://api.column.com/loans' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="sample loan" \
  -d currency="USD" \
  -d entity_id="enti_2zI19bAiyHSmD5iGBZwMx7jwICd" \
  -d is_revolving="true" \
  -d maturity_date="2028-10-10" \
  -d max_principal_balance="100000"
Response

200

400

{
  "allow_overpayment": false,
  "auto_sell": false,
  "balances": {
    "interest_paid": "0",
    "interest_receivable": "0",
    "principal_charged_off": "0",
    "principal_holding": "0",
    "principal_outstanding": "0",
    "principal_paid": "0",
    "retained_interest_paid": "0",
    "retained_interest_receivable": "0",
    "retained_principal_charged_off": "0",
    "retained_principal_outstanding": "0",
    "retained_principal_paid": "0",
    "servicing_fee_payable": "0"
  },
  "canceled_at": null,
  "charged_off_at": null,
  "created_at": "2025-08-03T15:53:27Z",
  "currency": "USD",
  "delinquent_at": null,
  "description": "sample loan",
  "disputed_at": null,
  "id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "interest_config_id": "",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "loan_program_id": "",
  "maturity_date": "2028-10-10",
  "max_principal_balance": "100000",
  "paid_off_at": null,
  "primary_signer_entity_id": "enti_2zI19bAiyHSmD5iGBZwMx7jwICd",
  "retained_by_column": false,
  "seasoning_days": 0,
  "status": "current"
}
Update a loan
PATCH

/loans/<loan_id>

Updates a loan by its ID.

Path Parameters
loan_id

string

Required

The ID of the loan you are looking up

Body Parameters
description

string

Optional

The description of the loan in the Column dashboard.

is_revolving

boolean

Optional

Indicates whether or not the loan is revolving. If true the loan can have multiple disbursements.

allow_overpayment

boolean

Optional

Indicates if a loan is able to be overpaid and have a principal_outstanding of less than $0. If false, payments that would result in a loan having a negative balance will be blocked.

maturity_date

string

Optional

The maturity date of the loan.

max_principal_balance

string

Optional

The max principal balance of the loan in cents. This is akin to a credit limit. Disbursements will fail if the resulting principal will be above the max principal.

e.g. $1.75 would be represented by 175.

status

string

Optional

The current status of the loan. A loan can have a status of current, delinquent, charged_off, in_dispute, canceled or paid_off.

retained_by_column

boolean

Optional

Indicates if this loan should be retained by Column. Loans retained by Column are not eligible for your platform to purchase.

auto_sell

boolean

Optional

Indicates if seasoned principals/interests should be automatically sold to your platform.

interest_config_id

string

Optional

ID of the interest configuration to accrue interest receivable daily.

loan_program_id

string

Optional

ID of the loan program for this loan.

seasoning_days

integer

Optional

Number of days receivables will be seasoned.

is_business_seasoning_days

boolean

Optional

Indicates if seasoning_days are business days or calendar days.

Request
curl 'https://api.column.com/loans/<loan_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -d max_principal_balance="50000000"
Response

200

400

{
  "allow_overpayment": false,
  "auto_sell": false,
  "balances": {
    "interest_paid": "0",
    "interest_receivable": "0",
    "principal_charged_off": "0",
    "principal_holding": "0",
    "principal_outstanding": "0",
    "principal_paid": "0",
    "retained_interest_paid": "0",
    "retained_interest_receivable": "0",
    "retained_principal_charged_off": "0",
    "retained_principal_outstanding": "0",
    "retained_principal_paid": "0",
    "servicing_fee_payable": "0"
  },
  "canceled_at": null,
  "charged_off_at": null,
  "created_at": "2025-08-03T15:53:27Z",
  "currency": "USD",
  "delinquent_at": null,
  "description": "sample loan",
  "disputed_at": null,
  "id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "interest_config_id": "",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "loan_program_id": "",
  "maturity_date": "2028-10-10",
  "max_principal_balance": "50000000",
  "paid_off_at": null,
  "primary_signer_entity_id": "enti_2zI19bAiyHSmD5iGBZwMx7jwICd",
  "retained_by_column": false,
  "seasoning_days": 0,
  "status": "current"
}
Get a loan by ID
GET

/loans/<loan_id>

Retrieve a single loan by its ID.

Path Parameters
loan_id

string

Required

The ID of the loan you are looking up

Request
curl 'https://api.column.com/loans/<loan_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "allow_overpayment": false,
  "auto_sell": false,
  "balances": {
    "interest_paid": "0",
    "interest_receivable": "0",
    "principal_charged_off": "0",
    "principal_holding": "0",
    "principal_outstanding": "0",
    "principal_paid": "0",
    "retained_interest_paid": "0",
    "retained_interest_receivable": "0",
    "retained_principal_charged_off": "0",
    "retained_principal_outstanding": "0",
    "retained_principal_paid": "0",
    "servicing_fee_payable": "0"
  },
  "canceled_at": null,
  "charged_off_at": null,
  "created_at": "2025-08-03T15:53:27Z",
  "currency": "USD",
  "delinquent_at": null,
  "description": "sample loan",
  "disputed_at": null,
  "id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "interest_config_id": "",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "loan_program_id": "",
  "maturity_date": "2028-10-10",
  "max_principal_balance": "50000000",
  "paid_off_at": null,
  "primary_signer_entity_id": "enti_2zI19bAiyHSmD5iGBZwMx7jwICd",
  "retained_by_column": false,
  "seasoning_days": 0,
  "status": "current"
}
List all loans
GET

/loans

List all loans under the platform. Filtered results can be retrieved with extra parameters in the query

Query Parameters
entity_id

string

Optional

status

string

Optional

loan_program_id

string

Optional

Filter loans by loan program

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/loans?entity_id=enti_2zI19bAiyHSmD5iGBZwMx7jwICd' \
  -u :<YOUR API KEY>
Response

200

400

{
  "has_more": false,
  "loans": [
    {
      "allow_overpayment": false,
      "auto_sell": false,
      "balances": {
        "interest_paid": "0",
        "interest_receivable": "0",
        "principal_charged_off": "0",
        "principal_holding": "0",
        "principal_outstanding": "0",
        "principal_paid": "0",
        "retained_interest_paid": "0",
        "retained_interest_receivable": "0",
        "retained_principal_charged_off": "0",
        "retained_principal_outstanding": "0",
        "retained_principal_paid": "0",
        "servicing_fee_payable": "0"
      },
      "canceled_at": null,
      "charged_off_at": null,
      "created_at": "2025-08-03T15:53:27Z",
      "currency": "USD",
      "delinquent_at": null,
      "description": "sample loan",
      "disputed_at": null,
      "id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
      "interest_config_id": "",
      "is_business_seasoning_days": false,
      "is_revolving": true,
      "loan_program_id": "",
      "maturity_date": "2028-10-10",
      "max_principal_balance": "50000000",
      "paid_off_at": null,
      "primary_signer_entity_id": "enti_2zI19bAiyHSmD5iGBZwMx7jwICd",
      "retained_by_column": false,
      "seasoning_days": 0,
      "status": "current"
    }
  ]
}
Loan Program object

Loan Program objects represent the configuration for loan programs in your platform. They define settings for loan purchases, auto-selling, and account configurations. You cannot create new loan programs on your own. Please work with your Column team / Solution Engineer to create loan programs for your platform based on your Column use cases. Read more.

Object Parameters
auto_sell

boolean

Indicates if seasoned principals/interests should be automatically sold to your platform.

close_after_sale

boolean

Indicates if loans that are not involving should be closed after automatic sale. Read more.

collection_account_number_id

string

Default account number ID of your platform to deposit loan payments belonging to your platform in this loan program.

created_at

string

The timestamp when the loan program was created.

default_interest_config_id

string

ID of the default interest configuration for this loan program.

description

string

The description of the loan program.

id

string

The ID of the loan program.

is_business_seasoning_days

boolean

Indicates if the default seasoning_days are business days or calendar days.

is_revolving

boolean

Indicates if loans in this loan program are revolving.

max_days_to_purchase

integer

Maximum number of calendar days for seasoned principals/interests to be purchased by your platform.

purchase_funding_account_number_id

string

Default account number ID for your platform to fund loan purchases in this loan program.

retained_by_column

boolean

Indicates if loans in this loan program are retained by Column.

seasoning_days

integer

Defaulf number of seasoning days for loans in this loan program.

updated_at

string

The timestamp when the loan program was last updated.

Loan Program object
{
  "auto_sell": false,
  "close_after_sale": false,
  "collection_account_number_id": "acno_32G4weCol8zF0yZLICh4sNCWgOO",
  "created_at": "2025-09-05T00:56:55Z",
  "default_interest_config_id": "icfg_32G4wg5lI9ktMi1eim1GstUacfV",
  "description": "TestService_LoanProgram",
  "id": "lpgm_32G4wZuA9oCw78988u0jHAMd3D6",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "max_days_to_purchase": 3,
  "purchase_funding_account_number_id": "acno_32G4weCol8zF0yZLICh4sNCWgOO",
  "retained_by_column": true,
  "seasoning_days": 10,
  "updated_at": "2025-09-04T17:56:55.005-07:00"
}
Update loan program
PATCH

/loans/programs/<loan_program_id>

It's unlikely that you will need to update a loan program. Please work with your Column team / Solution Engineer to update a loan program.

Path Parameters
loan_program_id

string

Required

ID of the loan program you're updating.

Body Parameters
auto_sell

boolean

Optional

Indicates if seasoned principals/interests should be automatically sold to your platform.

default_interest_config_id

string

Optional

ID of the default interest configuration for this loan program.

purchase_funding_account_number_id

string

Optional

Default account number ID for your platform to fund loan purchases.

collection_account_number_id

string

Optional

Default account number ID of your platform to deposit loan payments belonging to your platform.

Request
curl 'https://api.column.com/loans/programs/lpgm_2zElEkmKNaKXjDDCwo9LASIyRzt' \
  -u :<YOUR API KEY> \
  -H 'Content-Type: application/json' \
  -d '{
    "auto_sell": true,
    "default_interest_config_id": "icfg_2zElEouBhi6bHB5IdAjq1Ot8SeP"
  }'
Response

200

400

{
  "auto_sell": true,
  "close_after_sale": false,
  "collection_account_number_id": "acno_2zElEoGcUSU6fhF2qx5KUgMj7Yv",
  "created_at": "2025-06-30T17:20:04Z",
  "default_interest_config_id": "icfg_2zElEouBhi6bHB5IdAjq1Ot8SeP",
  "description": "charge card program",
  "id": "lpgm_2zElEkmKNaKXjDDCwo9LASIyRzt",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "max_days_to_purchase": 3,
  "purchase_funding_account_number_id": "acno_2zElEoGcUSU6fhF2qx5KUgMj7Yv",
  "retained_by_column": true,
  "seasoning_days": 10,
  "updated_at": "2025-06-30T10:20:03.75-07:00"
}
Get loan program
GET

/loans/programs/:loan_program_id

Retrieve a single loan program by its ID.

Path Parameters
loan_program_id

string

Required

ID of the loan program you're looking up.

Request
curl 'https://api.column.com/loans/programs/lpgm_2zElEkmKNaKXjDDCwo9LASIyRzt' \
  -u :<YOUR API KEY>
Response

200

400

{
  "auto_sell": false,
  "close_after_sale": false,
  "collection_account_number_id": "acno_2zElEoGcUSU6fhF2qx5KUgMj7Yv",
  "created_at": "2025-06-30T17:20:04Z",
  "default_interest_config_id": "icfg_2zElEouBhi6bHB5IdAjq1Ot8SeP",
  "description": "charge card program",
  "id": "lpgm_2zElEkmKNaKXjDDCwo9LASIyRzt",
  "is_business_seasoning_days": false,
  "is_revolving": true,
  "max_days_to_purchase": 3,
  "purchase_funding_account_number_id": "acno_2zElEoGcUSU6fhF2qx5KUgMj7Yv",
  "retained_by_column": true,
  "seasoning_days": 10,
  "updated_at": "2025-06-30T10:20:03.75-07:00"
}
List loan programs
GET

/loans/programs

List all loan programs for your platform. No query parameters are available - all loan programs for your platform will be returned.

Request
curl 'https://api.column.com/loans/programs' \
  -u :<YOUR API KEY>
Response

200

400

{
  "loan_programs": [
    {
      "auto_sell": true,
      "close_after_sale": false,
      "collection_account_number_id": "acno_2zEqVFR5h3FucPpTsvMF79gNXJm",
      "created_at": "2025-06-30T18:03:22Z",
      "default_interest_config_id": "icfg_2zEqVCHyPRk1b6Mk4V1ouGA7N9y",
      "description": "charge card program",
      "id": "lpgm_2zEqVGRMopC6tVjVroHWJGb7JvZ",
      "is_business_seasoning_days": false,
      "is_revolving": true,
      "max_days_to_purchase": 3,
      "purchase_funding_account_number_id": "acno_2zEqVCtjgf909oKZ6hFyHIC6y2u",
      "retained_by_column": true,
      "seasoning_days": 10,
      "updated_at": "2025-06-30T18:03:22Z"
    },
    {
      "auto_sell": false,
      "close_after_sale": true,
      "collection_account_number_id": "acno_2zEqVCtjgf909oKZ6hFyHIC6y2u",
      "created_at": "2025-06-30T18:03:22Z",
      "default_interest_config_id": "icfg_2zEqVCHyPRk1b6Mk4V1ouGA7N9y",
      "description": "credit card program",
      "id": "lpgm_2zEqVElJJWVliGOYL6uyddAb65X",
      "is_business_seasoning_days": true,
      "is_revolving": false,
      "max_days_to_purchase": 3,
      "purchase_funding_account_number_id": "acno_2zEqVCtjgf909oKZ6hFyHIC6y2u",
      "retained_by_column": false,
      "seasoning_days": 5,
      "updated_at": "2025-06-30T18:03:22Z"
    }
  ],
  "has_more": false
}
Loan Summary object

Loan Summary objects represent daily snapshots of loan performance and financial data. Read more.

Object Parameters
currency_code

string

The currency code of the loan..

daily_accrued_fee

string

The servicing fee amount accrued on this date, in cents.

daily_accrued_interest

string

The interest amount accrued on this date, in cents.

daily_disbursed_principal

string

The principal amount disbursed on this date, in cents.

daily_fee_rate

string

The daily servicing fee rate applied on this date.

daily_interest_rate

string

The daily interest rate applied on this date.

daily_paid_fee

string

The servicing fee amount paid on this date in loan sales, in cents.

daily_paid_interest

string

The interest amount paid on this date, in cents.

daily_paid_principal

string

The principal amount paid on this date, in cents.

daily_retained_accrued_interest

string

The retained interest amount accrued on this date, in cents.

daily_retained_paid_interest

string

The retained interest amount paid on this date, in cents.

daily_sold_interest

string

The interest amount sold on this date, in cents.

daily_sold_principal

string

The principal amount sold on this date, in cents.

effective_date

string

The date for which this summary data is effective. Format: YYYY-MM-DD.

retained_by_column

boolean

Indicates whether the loan is retained by Column.

sale_price

string

The sale price of the loan, in cents.

status

string

The current status of the loan.

total_fee

string

The total servicing fee amount of the loan, in cents.

total_interest

string

The total interest amount of the loan, in cents.

total_principal

string

The total principal amount of the loan, in cents.

total_retained_interest

string

The total interest amount retained by Column, in cents.

total_retained_principal

string

The total principal amount retained by Column, in cents.

total_seasoned_fee

string

The total servicing fee amount that has met seasoning requirements, in cents.

total_seasoned_interest

string

The total interest amount that has met seasoning requirements, in cents.

total_seasoned_principal

string

The total principal amount that has met seasoning requirements, in cents.

Loan Summary object
{
  "currency_code": "USD",
  "daily_accrued_fee": "0",
  "daily_accrued_interest": "0",
  "daily_disbursed_principal": "0",
  "daily_fee_rate": "0",
  "daily_interest_rate": "0",
  "daily_paid_fee": "0",
  "daily_paid_interest": "0",
  "daily_paid_principal": "0",
  "daily_retained_accrued_interest": "0",
  "daily_retained_paid_interest": "0",
  "daily_sold_interest": "0",
  "daily_sold_principal": "0",
  "effective_date": "2025-06-29",
  "retained_by_column": false,
  "sale_price": "100900",
  "status": "current",
  "total_fee": "0",
  "total_interest": "0",
  "total_principal": "0",
  "total_retained_interest": "0",
  "total_retained_principal": "0",
  "total_seasoned_fee": "100",
  "total_seasoned_interest": "1000",
  "total_seasoned_principal": "100000"
}
Get loan summary history
GET

/loans/<loan_id>/history

Retrieve daily summary history for a specific loan. Read more.

Path Parameters
loan_id

string

Required

ID of the loan you're requesting history for.

Query Parameters
from_date

string

Required

Starting date for loan histories. Format: YYYY-MM-DD.

to_date

string

Required

Ending date for loan histories. Format: YYYY-MM-DD. Maximum date range: 31 days.

Request
curl 'https://api.column.com/loans/loan_2zEfe9qDuYoX0F1nlLlTyPW9edU/history?from_date=2025-06-29&to_date=2025-06-30' \
  -u :<YOUR API KEY>
Response

200

400

{
  "loan_id": "loan_2zEfe9qDuYoX0F1nlLlTyPW9edU",
  "history": [
    {
      "currency_code": "USD",
      "daily_accrued_fee": "0",
      "daily_accrued_interest": "0",
      "daily_disbursed_principal": "0",
      "daily_fee_rate": "0",
      "daily_interest_rate": "0",
      "daily_paid_fee": "0",
      "daily_paid_interest": "0",
      "daily_paid_principal": "0",
      "daily_retained_accrued_interest": "0",
      "daily_retained_paid_interest": "0",
      "daily_sold_interest": "0",
      "daily_sold_principal": "0",
      "effective_date": "2025-06-29",
      "retained_by_column": false,
      "sale_price": "100900",
      "status": "current",
      "total_fee": "0",
      "total_interest": "0",
      "total_principal": "0",
      "total_retained_interest": "0",
      "total_retained_principal": "0",
      "total_seasoned_fee": "100",
      "total_seasoned_interest": "1000",
      "total_seasoned_principal": "100000"
    }
  ]
}
Loan disbursement object

A loan disbursement object represents the moment when loan funds are released. It is associated to one loan object and occurs after the loan has been approved. The funds can be sent directly to the borrower or to a third-party loan servicer. Each loan can have one or multiple loan disbursements.

Object Parameters
account_number_id

string

The unique ID of the account to which the funds are disbursed to.

amount

string

Amount (in cents) of funds disbursed to the borrower.

bank_account_id

string

The bank account to which funds are disbursed to.

created_at

string

The timestamp the loan disbursement was created.

currency

string

The currency of the loan. Currently only USD is supported.

description

string

The description of the loan disbursement in the Column dashboard.

effective_at

string

The timestamp the loan disbursement was marked effective.

id

string

The unique ID of the loan disbursement object.

idempotency_key

string

The idempotency key specified in the loan disbursement. Returns an empty string "" when not set.

loan_id

string

The unique ID of the loan object the loan disbursement is associated to.

status

string

The current status of the loan disbursement. A loan disbursement can have a status of completed, canceled, orhold.

Loan disbursement object
{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:04:09.247205826Z",
  "currency": "USD",
  "description": "first disbursement",
  "effective_at": "2025-08-03T16:04:09.247205826Z",
  "id": "ldsb_30meChPQuHfd7jqNuUWlkqS6B9o",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "completed"
}
Create a disbursement
POST

/loans/disbursements

Creates a disbursement for a loan.

Body Parameters
amount

string

Required

Amount (in cents) of the funds that will be disbursed.

e.g. $1.75 would be represented by 175.

bank_account_id

string

Required

The bank account to which funds will be disbursed.

currency

string

Required

The currency of the loan. Currently only USD is supported.

description

string

Required

The description of the loan disbursement.

hold

boolean

Optional

If true, creates a disbursement in a hold state. The disbursement will not be completed until the clear API is called. Disbursements in a hold state may be updated or canceled.

loan_id

string

Required

The ID of the loan to from which the disbursement is being made.

details

object

Optional

Transfer monitoring details

sender_name

string

Optional

Name of the sender

merchant_name

string

Optional

Name of the merchant for this transaction

merchant_category_code

string

Optional

Category code for the merchant for this transaction

authorization_method

string

Optional

Authorization method for this transaction

website

string

Optional

Website for this transaction

internal_transfer_type

string

Optional

Transfer type in non-column systems

statement_description

string

Optional

Line item on the customer statement for the transfer

fx_amount

integer

Optional

Foreign exchange amount for card transaction (in the smallest unit of the currency)

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

fx_currency

string

Optional

Foreign exchange currency for card transaction

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/loans/disbursements' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d amount="1000" \
  -d currency="USD" \
  -d description="first disbursement" \
  -d loan_id=loan_30mcttnSZBlSahXy6LUFzbeemlk \
  -d bank_account_id=bacc_2zI1DavEbJQbbOIJeExDVJczhqM
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:04:09.247205826Z",
  "currency": "USD",
  "description": "first disbursement",
  "effective_at": "2025-08-03T16:04:09.247205826Z",
  "id": "ldsb_30meChPQuHfd7jqNuUWlkqS6B9o",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "completed"
}
Update a disbursement
PATCH

/loans/disbursements/<disbursement_id>

Update a disbursement by its ID. Disbursement must be in a "hold" state. Only the amount can be updated.

Path Parameters
disbursement_id

string

Required

The ID of the disbursement you want to update.

Body Parameters
amount

string

Required

Amount (in cents) of the funds that will be disbursed.

e.g. $1.75 would be represented by 175.

currency

string

Required

The currency of the loan. Currently only USD is supported.

Request
curl 'https://api.column.com/loans/disbursements/<ldsb_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -d amount="1500" \
  -d currency="USD"
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1500",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:04:09.247205826Z",
  "currency": "USD",
  "description": "first disbursement",
  "effective_at": "2025-08-03T16:04:09.247205826Z",
  "id": "ldsb_30meChPQuHfd7jqNuUWlkqS6B9o",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "hold"
}
Clear a disbursement
POST

/loans/disbursements/<disbursement_id>/clear

Clears a disbursement by its ID. Disbursements can only be cleared if they are in a "hold" state.

Path Parameters
disbursement_id

string

Required

The ID of the disbursement to clear.

Body Parameters
amount

string

Optional

Updated amount (in cents) of the funds that will be disbursed.

e.g. $1.75 would be represented by 175.

currency

string

Optional

The currency of the loan. Currently only USD is supported.

Request
curl 'https://api.column.com/loans/disbursements/<ldsb_id>/clear' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d amount="1500" \
  -d currency="USD"
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1500",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:04:09.247205826Z",
  "currency": "USD",
  "description": "first disbursement",
  "effective_at": "2025-08-03T16:04:09.247205826Z",
  "id": "ldsb_30meChPQuHfd7jqNuUWlkqS6B9o",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "completed"
}
Get a disbursement
GET

/loans/disbursements/<disbursement_id>

Get a disbursement by its ID.

Path Parameters
disbursement_id

string

Required

The ID of the disbursement you are looking up.

Request
curl 'https://api.column.com/loans/disbursements/<ldsb_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "5000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:11:23Z",
  "currency": "USD",
  "description": "test cancel disbursement",
  "effective_at": null,
  "id": "ldsb_30mf5GUhjkwxwvNBYGZX51cE7Gu",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "canceled"
}
Cancel a disbursement
POST

/loans/disbursements/<disbursement_id>/cancel

Cancels a disbursement by its ID. Only a disbursement in a "hold" state can be cancelled.

Path Parameters
disbursement_id

string

Required

The ID of the disbursement to clear.

Request
url 'https://api.column.com/loans/disbursements/<ldsb_id>/cancel' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "5000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "created_at": "2025-08-03T16:11:23Z",
  "currency": "USD",
  "description": "second disbursement",
  "effective_at": null,
  "id": "ldsb_30mf5GUhjkwxwvNBYGZX51cE7Gu",
  "idempotency_key": "",
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "status": "canceled"
}
List all disbursements
GET

/loans/disbursements

List all disbursements under the platform. Filtered results can be retrieved with extra parameters in the query.

Query Parameters
loan_id

string

Optional

bank_account_id

string

Optional

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/loans/disbursements?loan_id=loan_26UE1mcnJsRMTIJfwKFXqqF0xXo' \
  -u :<YOUR API KEY>
Response

200

400

{
  "disbursements": [
    {
      "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
      "amount": "1500",
      "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
      "created_at": "2025-08-03T16:04:09.247205826Z",
      "currency": "USD",
      "description": "first disbursement",
      "effective_at": "2025-08-03T16:04:09.247205826Z",
      "id": "ldsb_30meChPQuHfd7jqNuUWlkqS6B9o",
      "idempotency_key": "",
      "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
      "status": "completed"
    },
    {
      "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
      "amount": "5000",
      "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
      "created_at": "2025-08-03T16:11:23Z",
      "currency": "USD",
      "description": "second disbursement",
      "effective_at": null,
      "id": "ldsb_30mf5GUhjkwxwvNBYGZX51cE7Gu",
      "idempotency_key": "",
      "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
      "status": "canceled"
    }
  ],
  "has_more": false
}
Loan payment object

A loan payment object represents a repayment made toward a loan. It is associated with one loan object and typically occurs after one or more loan disbursements have been made. Payments can be made by the borrower directly or through a loan servicer. Read more.

Object Parameters
account_number_id

string

The unique ID of the account to which the payment was made to.

amount

string

Total payment amount in cents.

bank_account_id

string

The bank account to which funds are paid back to.

collection_account_number_id

string

ID of your collections account number.

collection_bank_account_id

string

ID of your collections account.

created_at

string

The timestamp the loan payment was created.

currency

string

The currency of the loan. Currently only USD is supported.

description

string

The description of the loan payment in the Column dashboard.

effective_at

string

The timestamp the loan payment was marked effective.

id

string

The ID of the loan payment object.

idempotency_key

string

The idempotency key specified in the loan payment. Returns as an empty string "" when not set.

interest_amount

string

Total paid interest receivable.

is_offline

boolean

Indicates whether the loan payment was made offline.

loan_id

string

The ID of the loan object the loan payment is associated to.

principal_amount

string

Amount of the payment applied to the loan principal.

retained_interest_amount

string

Paid interest receivable owned by Column.

retained_principal_amount

string

Paid principal amount owned by Column.

status

string

The current status of the loan payment. A loan payment can have a status of completed, canceled, orhold.

Loan payment object
{
  "id": "lpmt_2zF1i9dpJKZjNq7xeLawvtwZjGh",
  "idempotency_key": "",
  "loan_id": "loan_2zF1i8VNVX2Bw1o8idNBhRZxdtx",
  "description": "TestLoanWithLoanProgram",
  "status": "completed",
  "is_offline": true,
  "bank_account_id": "bacc_2zF1i4b7tzsFNa2RwiDYemf5guz",
  "account_number_id": "acno_2zF1i1U3OJ2P72HVzcv2kAzPHFy",
  "collection_bank_account_id": "",
  "collection_account_number_id": "",
  "created_at": "2025-06-30T19:35:31Z",
  "effective_at": "2025-06-30T19:35:31Z",
  "currency": "USD",
  "amount": "123456",
  "principal_amount": "123456",
  "interest_amount": "0",
  "retained_interest_amount": "0",
  "retained_principal_amount": "123456"
}
Create a payment
POST

/loans/payments

Creates a payment for a loan.

Body Parameters
amount

string

Optional

Amount in cents for principal and interest payments. At least one of amount or principal_amount must be specified.

e.g. $1.75 would be represented by 175.

principal_amount

string

Optional

Amount in cents for principal payments. At least one of amount or principal_amount must be specified.

e.g. $1.75 would be represented by 175.

is_offline

boolean

Optional

Indicates if this payment is an offline payment. Default value: false.

bank_account_id

string

Optional

ID of the source bank account. Source account is required if this payment is not offline, or the loan is not completely owned by your platform. Either bank_account_id or account_number_id must be specified.

account_number_id

string

Optional

ID of the source account number. Source account is required if this payment is not offline, or the loan is not completely owned by your platform. Either bank_account_id or account_number_id must be specified.

currency

string

Required

The currency of the loan. Currently only USD is supported.

description

string

Required

The description of the loan payment.

loan_id

string

Required

The ID of the loan to which the payment is being made. The principal_outstanding of the loan will decrease by the payment amount.

Request
curl 'https://api.column.com/loans/payments' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d amount="1000" \
  -d currency="USD" \
  -d description="first payment" \
  -d loan_id=loan_30mcttnSZBlSahXy6LUFzbeemlk \
  -d bank_account_id=bacc_2zI1DavEbJQbbOIJeExDVJczhqM
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "collection_account_number_id": "",
  "collection_bank_account_id": "",
  "created_at": "2025-08-03T16:25:20Z",
  "currency": "USD",
  "description": "first payment",
  "effective_at": "2025-08-03T16:25:20Z",
  "id": "lpmt_30mgmQvaN3DPwVPfS3mUPMeCtGZ",
  "idempotency_key": "",
  "interest_amount": "0",
  "is_offline": false,
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "principal_amount": "1000",
  "retained_interest_amount": "0",
  "retained_principal_amount": "1000",
  "status": "completed"
}
Get a payment
GET

/loans/payments/<payment_id>

Get a payment by its ID.

Path Parameters
payment_id

string

Required

The ID of the payment you are looking up.

Request
curl 'https://api.column.com/loans/payments/<lpmt_id>' \
-u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
  "amount": "1000",
  "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
  "collection_account_number_id": "",
  "collection_bank_account_id": "",
  "created_at": "2025-08-03T16:25:20Z",
  "currency": "USD",
  "description": "first payment",
  "effective_at": "2025-08-03T16:25:20Z",
  "id": "lpmt_30mgmQvaN3DPwVPfS3mUPMeCtGZ",
  "idempotency_key": "",
  "interest_amount": "0",
  "is_offline": false,
  "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
  "principal_amount": "1000",
  "retained_interest_amount": "0",
  "retained_principal_amount": "1000",
  "status": "completed"
}
List all payments
GET

/loans/payments

List all payments under the platform. Filtered results can be retrieved with extra parameters in the query.

Query Parameters
loan_id

string

Optional

bank_account_id

string

Optional

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/loans/payments?loan_id=loan_30mcttnSZBlSahXy6LUFzbeemlk' \
  -u :<YOUR API KEY>
Response

200

400

{
  "has_more": false,
  "payments": [
    {
      "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
      "amount": "200",
      "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
      "collection_account_number_id": "",
      "collection_bank_account_id": "",
      "created_at": "2025-08-03T16:28:29Z",
      "currency": "USD",
      "description": "first payment",
      "effective_at": "2025-08-03T16:28:29Z",
      "id": "lpmt_30mhA1SpuvC6OJlc8XPBCKSNcC1",
      "idempotency_key": "",
      "interest_amount": "0",
      "is_offline": false,
      "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
      "principal_amount": "200",
      "retained_interest_amount": "0",
      "retained_principal_amount": "200",
      "status": "completed"
    },
    {
      "account_number_id": "acno_2zI1Da9Ro0dvk6HT2gla1H0UTyS",
      "amount": "1000",
      "bank_account_id": "bacc_2zI1DavEbJQbbOIJeExDVJczhqM",
      "collection_account_number_id": "",
      "collection_bank_account_id": "",
      "created_at": "2025-08-03T16:25:20Z",
      "currency": "USD",
      "description": "first payment",
      "effective_at": "2025-08-03T16:25:20Z",
      "id": "lpmt_30mgmQvaN3DPwVPfS3mUPMeCtGZ",
      "idempotency_key": "",
      "interest_amount": "0",
      "is_offline": false,
      "loan_id": "loan_30mcttnSZBlSahXy6LUFzbeemlk",
      "principal_amount": "1000",
      "retained_interest_amount": "0",
      "retained_principal_amount": "1000",
      "status": "completed"
    }
  ],
  "has_more": false
}
Loan sale object

A loan sale object represents the sale of a loan by Column to your platform. When a loan is sold, you purchase the principal and interest receivables from Column, and are paid a servicing fee. Read more.

Object Parameters
id

string

The ID of the loan sale object.

created_at

string

The timestamp at which the loan sale was created.

updated_at

string

The timestamp at which the loan sale was last updated.

idempotency_key

string

The idempotency key specified in the loan sale.

loan_id

string

The ID of the loan being sold.

sold_at

string

The timestamp at which the loan sale was completed.

amount

string

The total sale amount in cents.

currency_code

string

The currency code of the sale amount. Currently only USD is supported.

sold_principal_receivable

string

The amount of principal receivable in cents sold to your platform.

sold_interest_receivable

string

The amount of interest receivable in cents sold to your platform.

paid_servicing_fee

string

The amount of servicing fees in cents paid to your platform by Column.

purchase_funding_account_number_id

string

The ID of the account number in your platform that was funded to complete this sale.

Loan sale object
{
  "id": "lsal_2zEjnD6zlXgnc7t8NGQvn66Y1wA",
  "created_at": "2025-06-30T17:08:11Z",
  "updated_at": "2025-06-30T17:08:11Z",
  "idempotency_key": "2zEjn6sLwRT8ao6DcNiUr9I1X1N",
  "loan_id": "loan_2zEjnA29UEHapWFEqgtDsM3jw2y",
  "sold_at": "2025-06-30T17:08:11Z",
  "amount": "100900",
  "currency_code": "USD",
  "sold_principal_receivable": "100000",
  "sold_interest_receivable": "1000",
  "paid_servicing_fee": "100",
  "purchase_funding_account_number_id": "acno_2zEjnBXUJwCHBXFLNMIK4wGVaia"
}
Create a loan sale
POST

/loans/<loan_id>/sales

Creates a loan sale for a specific loan.

Body Parameters
amount

string

Optional

Amount in cents that will be purchased. This amount cannot exceed the current sale price of the loan.

Either amount or percentage must be specified, but not both.

e.g. $1.75 would be represented by 175.

percentage

string

Optional

Percentage of the current sale price of the loan to purchase (e.g., "0.80" for 80%).

Maximum value: "1.00".

Either amount or percentage must be specified, but not both.

currency_code

string

Required

ISO 4217 currency code. It must be the same as the currency code on the loan.

purchase_funding_account_number_id

string

Optional

ID of the account number in your platform to fund this purchase. If this field is not set, the default purchase funding account number for the loan program of this loan will be used.

Request
curl 'https://api.column.com/loans/loan_xxx/sales' \
  -XPOST \
  -u :<YOUR API KEY> \
  -H "Idempotency-Key: 2zEjn6sLwRT8ao6DcNiUr9I1X1N" \
  -d amount="100900" \
  -d currency_code="USD" \
  -d purchase_funding_account_number_id="acno_2zEjnBXUJwCHBXFLNMIK4wGVaia"
Response

200

400

{
  "id": "lsal_2zEjnD6zlXgnc7t8NGQvn66Y1wA",
  "created_at": "2025-06-30T17:08:11Z",
  "updated_at": "2025-06-30T17:08:11Z",
  "idempotency_key": "2zEjn6sLwRT8ao6DcNiUr9I1X1N",
  "loan_id": "loan_xxx",
  "sold_at": "2025-06-30T17:08:11Z",
  "amount": "100900",
  "currency_code": "USD",
  "sold_principal_receivable": "100000",
  "sold_interest_receivable": "1000",
  "paid_servicing_fee": "100",
  "purchase_funding_account_number_id": "acno_2zEjnBXUJwCHBXFLNMIK4wGVaia"
}
Get a loan sale
GET

/loans/sales/<loan_sale_id>

Retrieve a single loan sale by its ID.

Path Parameters
loan_sale_id

string

Required

The ID of the loan sale you are looking up.

Request
curl 'https://api.column.com/loans/sales/lsal_2zEjnD6zlXgnc7t8NGQvn66Y1wA' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "lsal_2zEjnD6zlXgnc7t8NGQvn66Y1wA",
  "created_at": "2025-06-30T17:08:11Z",
  "updated_at": "2025-06-30T17:08:11Z",
  "idempotency_key": "2zEjn6sLwRT8ao6DcNiUr9I1X1N",
  "loan_id": "loan_2zEjnA29UEHapWFEqgtDsM3jw2y",
  "sold_at": "2025-06-30T17:08:11Z",
  "amount": "100900",
  "currency_code": "USD",
  "sold_principal_receivable": "100000",
  "sold_interest_receivable": "1000",
  "paid_servicing_fee": "100",
  "purchase_funding_account_number_id": "acno_2zEjnBXUJwCHBXFLNMIK4wGVaia"
}
List all loan sales
GET

/loans/sales

List loan sales under your platform.

Query Parameters
loan_id

string

Optional

Filter by loan ID.

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/loans/sales?loan_id=loan_2zF0GD2UnwmzTgkE2M64NLfPD12' \
  -u :<YOUR API KEY>
Response

200

400

{
  "loan_sales": [
    {
      "id": "lsal_2zF0GMzK4Hme1Q0dPHYGlRyT4zL",
      "created_at": "2025-06-30T19:23:36Z",
      "updated_at": "2025-06-30T19:23:36Z",
      "idempotency_key": null,
      "loan_id": "loan_2zF0GD2UnwmzTgkE2M64NLfPD12",
      "sold_at": "2025-06-30T19:23:36Z",
      "amount": "10000",
      "currency_code": "USD",
      "sold_principal_receivable": "9911",
      "sold_interest_receivable": "99",
      "paid_servicing_fee": "10",
      "purchase_funding_account_number_id": "acno_2zF0GDCQxFUP0QRlrmIRXVwRZAM"
    },
    {
      "id": "lsal_2zF0GL9EWCErpIhGhCEXY13guGv",
      "created_at": "2025-06-30T19:23:36Z",
      "updated_at": "2025-06-30T19:23:36Z",
      "idempotency_key": null,
      "loan_id": "loan_2zF0GD2UnwmzTgkE2M64NLfPD12",
      "sold_at": "2025-06-30T19:23:36Z",
      "amount": "10000",
      "currency_code": "USD",
      "sold_principal_receivable": "9911",
      "sold_interest_receivable": "99",
      "paid_servicing_fee": "10",
      "purchase_funding_account_number_id": "acno_2zF0GDCQxFUP0QRlrmIRXVwRZAM"
    }
  ],
  "has_more": true
}
Loan sale summary object

Loan sale summaries are aggregated from our loan_daily_summary reports. Read more.

Object Parameters
effective_date

string

Effective date of loan sales. Format: YYYY-MM-DD.

currency_code

string

Currency of the loan.

total_sale_price

string

Total sale price for loans at the end of the effective date.

total_principal

string

Total principal amount in cents of loans for sale.

total_interest

string

Total interest amount in cents of loans for sale.

total_fee

string

Total fee amount in cents of loans for sale.

loan_count

int

Number of loans for sale.

loans

list

List of loans with loan details for sale.

id

string

ID of loan.

loan_program_id

string

ID of loan program.

sale_price

string

Sale price in cents of loan.

principal

string

Principal in cents of loan for sale.

interest

string

Interest in cents of loan for sale.

fee

string

Fee in cents of loan for sale.

Loan sale summary object
{
  "effective_date": "2025-08-07",
  "currency_code": "USD",
  "total_sale_price": "201800",
  "total_principal": "200000",
  "total_interest": "2000",
  "total_fee": "200",
  "loan_count": 2,
  "loans": [
    {
      "id": "loan_3112JdNBZLqeFREfkTIkGZR0fpw",
      "loan_program_id": "lpgm_3112JdzqLGdrBCljdV6UPSKqhJf",
      "sale_price": "100900",
      "principal": "100000",
      "interest": "1000",
      "fee": "100"
    },
    {
      "id": "loan_3112Jm6zh5BBnQQUq5BODMzODWY",
      "loan_program_id": "lpgm_3112JqzDIjsvbsJ5XYLA9amU1VS",
      "sale_price": "100900",
      "principal": "100000",
      "interest": "1000",
      "fee": "100"
    }
  ]
}
Get loan sale summary
GET

/loans/sales/summaries/available

Get loan sale summaries for loans available for sale. Data returned by this API are updated daily after loan_daily_summary reports are generated. Read more.

GET

/loans/sales/summaries/sold

Get loan sale summaries for loans already sold. Data returned by this API are updated daily after loan_daily_summary reports are generated. Read more.

Query Parameters
date

string

Optional

Effective date of the loan daily summary report. Format: YYYY-MM-DD. If this parameter is not specified, loan sale summaries from the latest loan_daily_summary report will be returned.

loan_program_id

string

Optional

Filter loan sale summaries by loan program ID.

expand

string

Optional

List of fields to be expanded. Format: expand=field_1&expand=field_2. Available values:
loans: return list of loan sale details

Request
# Get available loan sale summaries
curl 'https://api.column.com/loans/sales/summaries/available?expand=loans' \
  -u :<YOUR API KEY>
Response

200

400

{
  "effective_date": "2025-08-07",
  "currency_code": "USD",
  "total_sale_price": "201800",
  "total_principal": "200000",
  "total_interest": "2000",
  "total_fee": "200",
  "loan_count": 2,
  "loans": [
    {
      "id": "loan_3112JdNBZLqeFREfkTIkGZR0fpw",
      "loan_program_id": "lpgm_3112JdzqLGdrBCljdV6UPSKqhJf",
      "sale_price": "100900",
      "principal": "100000",
      "interest": "1000",
      "fee": "100"
    },
    {
      "id": "loan_3112Jm6zh5BBnQQUq5BODMzODWY",
      "loan_program_id": "lpgm_3112JqzDIjsvbsJ5XYLA9amU1VS",
      "sale_price": "100900",
      "principal": "100000",
      "interest": "1000",
      "fee": "100"
    }
  ]
}
Counterparty object

A counterparty is an external account that you can transfer money to and from. All ACH and Wire transfers originated by Column take in a counterparty_id to identify the transfer destination. Once you have created a counterparty, you can send money to it (or pull from it)! A counterparty stores an external bank account and can also store additional transaction details, as desired or required. Read about counterparties in our data model section for more information.

Object Parameters
account_number

string

The account number for the bank account.

account_type

string

The type of the account number. Can be checking or savings.

address

object

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

created_at

string

The timestamp the object was created.

description

string

Description of the counterparty visible only in your platform. Maximum length: 127 characters.

email

string

The email address of the beneficiary.

id

string

The unique id of the object

is_column_account

boolean

Indicates whether this counterparty account is actually a Column account.

legal_id

string

The legal ID (e.g., Tax ID, Cedula Juridica, etc.) of the beneficiary. This field is recommended for international wire transfers, and required in some countries. Maximum length: 127 characters.

legal_type

string

The legal entity type of the beneficiary. Can be business, non_profit, individual, or sole_proprietor. This field is recommended for international wire transfers, and required in some countries.

local_account_number

string

The local account number (e.g. Cuenta Cliente in Costa Rica) in the beneficiary's bank. This field is recommended for international wire transfers, and required in some countries. Maximum length: 63 characters.

local_bank_code

string

The local bank code of the beneficiary's bank (e.g., India IFSC, Australia BSB, China CNAPS, etc.). This field is recommended for international wire transfers, and required in some countries. Maximum length: 63 characters.

name

string

The counterparty name who owns the bank account. For domestic wires, only the first 35 characters are included in the wire message. For international wires, only the first 140 characters are included in the wire message. Additional characters will be truncated.

phone

string

The phone number of the beneficiary. This field is recommended for international wire transfers, and required in some countries. Maximum length: 31 characters.

Format for international wire transfers: \+[0-9]{1,3}-[0-9()+\-]{1,30} (e.g. +44-(0)1223-333300).

Format for domestic wire transfers:
+1-(650)123-4567 (US international phone number format)
650-123-4567
(650)123-4567
(650) 123-4567
650 123 4567
6501234567

routing_number

string

The routing number of the bank.

routing_number_type

string

The type of the routing number. Can be aba, bic, or other.

updated_at

string

The timestamp the object was last updated.

wire_drawdown_allowed

boolean

Whitelists counterparties for automatic approval of drawdown requests to Column via FedWire. If false, all inbound drawdown requests from this counterparty will require explicit approval.

Counterparty object
{
  "account_number": "GB29NWBK60161331926819",
  "account_type": "checking",
  "address": {
    "city": "New Winton",
    "country_code": "GB",
    "line_1": "96 Lairg Road",
    "line_2": "",
    "postal_code": "EH33 5ZN",
    "state": ""
  },
  "created_at": "2023-07-07T22:31:30.859307801Z",
  "description": "international_cpty",
  "email": "john.doe@gmail.com",
  "id": "cpty_2SGNjEY3ax4DaX4LgU72navTADL",
  "is_column_account": false,
  "legal_id": "GB1245643234",
  "legal_type": "sole_proprietor",
  "local_account_number": "876545678",
  "local_bank_code": "GB123456",
  "local_bank_country_code": "",
  "local_bank_name": "",
  "name": "John Doe",
  "phone": "650-123-4567",
  "routing_number": "NWBKGB2L",
  "routing_number_type": "bic",
  "updated_at": "2023-07-07T22:31:30.859307801Z",
  "wire": {
    "beneficiary_address": {
      "city": "New Winton",
      "country_code": "GB",
      "line_1": "96 Lairg Road",
      "line_2": "",
      "postal_code": "EH33 5ZN",
      "state": ""
    },
    "beneficiary_email": "john.doe@gmail.com",
    "beneficiary_legal_id": "GB1245643234",
    "beneficiary_name": "John Doe",
    "beneficiary_phone": "650-123-4567",
    "beneficiary_type": "sole_proprietor",
    "local_account_number": "876545678",
    "local_bank_code": "GB123456"
  },
  "wire_drawdown_allowed": false
}
Create a counterparty
POST

/counterparties

A counterparty is the legal entity on the other side of the transaction. Depending on the type of transaction, we may need to know more or less about them.

A domestic ACH only requires a counterparty's account and routing number. If you include a counterparty name, Column will by default populate receiver_name on the ACH transfer request. Domestic and international wires require full name and address. Certain countries may require additional fields. Learn more about country-specific details here.

Body Parameters
routing_number

string

Required

The routing number of the bank.

routing_number_type

string

Optional

The type of the routing number. Can be aba or bic. Default value is aba if this field is not set.

account_number

string

Required

The account number of the bank account.

account_type

string

Optional

The type of the account number. Can be checking or savings. Default value is checking. It's important to set this correctly, as other banks may route to a different account type based on this field.

description

string

Optional

Description of the counterparty visible only in your platform. Maximum length: 127 characters.

wire_drawdown_allowed

boolean

Optional

Whitelists counterparties for automatic approval of drawdown requests to Column via FedWire. If false, all inbound drawdown requests from this counterparty will require explicit approval.

name

string

Optional

The account holder on the counterparty bank account. This field is not required to send ACH transfers, but is required to send domestic and international wires. For international wires, Must adhere to International Wire character validation . Column will truncate name to a maximum length of 140 characters per SWIFT guidelines. For domestic wires, Must adhere to FedWire character validation . Column will truncate name to 35 characters per Fedwire guidelines.

address

object

Optional

The address object is not required to send ACH transfers, but is required to send domestic and international wires.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

phone

string

Optional

The phone number of the beneficiary. This field is recommended for international wire transfers, and required in some countries. Maximum length: 31 characters.

Format for international wire transfers: \+[0-9]{1,3}-[0-9()+\-]{1,30} (e.g. +44-(0)1223-333300).

Format for domestic wire transfers:
+1-(650)123-4567 (US international phone number format)
650-123-4567
(650)123-4567
(650) 123-4567
650 123 4567
6501234567

email

string

Optional

The email address of the beneficiary. This field is recommended for international wire transfers, and required in some countries. Maximum length: 127 characters.

legal_id

string

Optional

The legal ID (e.g., Tax ID, Cedula Juridica, etc.) of the beneficiary. This field is recommended for international wire transfers, and required in some countries. Maximum length: 127 characters. For international wires, Must adhere to International Wire character validation .

legal_type

string

Optional

The legal entity type of the beneficiary. Can be business, non_profit, individual, or sole_proprietor. This field is recommended for international wire transfers, and required in some countries. For international wires, Must adhere to International Wire character validation .

local_bank_code

string

Optional

The local bank code of the beneficiary's bank (e.g., India IFSC, Australia BSB, China CNAPS, etc.). This field is recommended for international wire transfers, and required in some countries. Maximum length: 63 characters. For international wires, Must adhere to International Wire character validation .

local_account_number

string

Optional

The local account number (e.g. Cuenta Cliente in Costa Rica) in the beneficiary's bank. This field is recommended for international wire transfers, and required in some countries. Maximum length: 63 characters. For international wires, Must adhere to International Wire character validation .

Request
curl 'https://api.column.com/counterparties' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d routing_number="AACDGB21" \
  -d account_number="GB29NWBK60161331926819" \
  -d routing_number_type="bic" \
  -d account_type="checking" \
  -d description="international_cpty" \
  -d name="John Doe" \
  -d phone="650-123-4567" \
  -d email="john.doe@gmail.com" \
  -d legal_id="GB1245643234" \
  -d legal_type="sole_proprietor" \
  -d local_bank_code="GB123456" \
  -d local_account_number="876545678" \
  -d "address[line_1]"="96 Lairg Road" \
  -d "address[city]"="New Winton" \
  -d "address[postal_code]"="EH33 5ZN" \
  -d "address[country_code]"="GB"
Response

200

400

{
  "account_number": "GB29NWBK60161331926819",
  "account_type": "checking",
  "address": {
    "city": "New Winton",
    "country_code": "GB",
    "line_1": "96 Lairg Road",
    "line_2": "",
    "postal_code": "EH33 5ZN",
    "state": ""
  },
  "created_at": "2023-07-07T22:31:30.859307801Z",
  "description": "international_cpty",
  "email": "john.doe@gmail.com",
  "id": "cpty_2SGNjEY3ax4DaX4LgU72navTADL",
  "is_column_account": false,
  "legal_id": "GB1245643234",
  "legal_type": "sole_proprietor",
  "local_account_number": "876545678",
  "local_bank_code": "GB123456",
  "local_bank_country_code": "",
  "local_bank_name": "",
  "name": "John Doe",
  "phone": "650-123-4567",
  "routing_number": "NWBKGB2L",
  "routing_number_type": "bic",
  "updated_at": "2023-07-07T22:31:30.859307801Z",
  "wire": {
    "beneficiary_address": {
      "city": "New Winton",
      "country_code": "GB",
      "line_1": "96 Lairg Road",
      "line_2": "",
      "postal_code": "EH33 5ZN",
      "state": ""
    },
    "beneficiary_email": "john.doe@gmail.com",
    "beneficiary_legal_id": "GB1245643234",
    "beneficiary_name": "John Doe",
    "beneficiary_phone": "650-123-4567",
    "beneficiary_type": "sole_proprietor",
    "local_account_number": "876545678",
    "local_bank_code": "GB123456"
  },
  "wire_drawdown_allowed": false
}
List all counterparties
GET

/counterparties

Retrieve all counterparties under your developer account. Filtered results can be retrieved with extra parameters in the query (account_number, routing_number, etc.).

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

account_number

string

Optional

Return counterparties created with given account number.

routing_number

string

Optional

Return counterparties created with given routing number.

Request
curl 'https://api.column.com/counterparties' \
  -u :<YOUR API KEY>
Response

200

400

{
  "counterparties": [
    {
      "account_number": "GB29NWBK60161331926819",
      "account_type": "checking",
      "address": {
        "city": "New Winton",
        "country_code": "GB",
        "line_1": "96 Lairg Road",
        "line_2": "",
        "postal_code": "EH33 5ZN",
        "state": ""
      },
      "created_at": "2023-07-07T22:31:30.859307801Z",
      "description": "international_cpty",
      "email": "john.doe@gmail.com",
      "id": "cpty_2SGNjEY3ax4DaX4LgU72navTADL",
      "is_column_account": false,
      "legal_id": "GB1245643234",
      "legal_type": "sole_proprietor",
      "local_account_number": "876545678",
      "local_bank_code": "GB123456",
      "local_bank_country_code": "",
      "local_bank_name": "",
      "name": "John Doe",
      "phone": "650-123-4567",
      "routing_number": "NWBKGB2L",
      "routing_number_type": "bic",
      "updated_at": "2023-07-07T22:31:30.859307801Z",
      "wire": {
        "beneficiary_address": {
          "city": "New Winton",
          "country_code": "GB",
          "line_1": "96 Lairg Road",
          "line_2": "",
          "postal_code": "EH33 5ZN",
          "state": ""
        },
        "beneficiary_email": "john.doe@gmail.com",
        "beneficiary_legal_id": "GB1245643234",
        "beneficiary_name": "John Doe",
        "beneficiary_phone": "650-123-4567",
        "beneficiary_type": "sole_proprietor",
        "local_account_number": "876545678",
        "local_bank_code": "GB123456"
      },
      "wire_drawdown_allowed": false
    }
  ],
  "has_more": true
}
Get a counterparty by ID
GET

/counterparties/<counterparty_id>

Retrieve a single counterparty by its ID.

Path Parameters
counterparty_id

string

Required

ID of the counterparty you're looking up.

Request
curl 'https://api.column.com/counterparties/<counterparty_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number": "GB29NWBK60161331926819",
  "account_type": "checking",
  "address": {
    "city": "New Winton",
    "country_code": "GB",
    "line_1": "96 Lairg Road",
    "line_2": "",
    "postal_code": "EH33 5ZN",
    "state": ""
  },
  "created_at": "2023-07-07T22:31:30.859307801Z",
  "description": "international_cpty",
  "email": "john.doe@gmail.com",
  "id": "cpty_2SGNjEY3ax4DaX4LgU72navTADL",
  "is_column_account": false,
  "legal_id": "GB1245643234",
  "legal_type": "sole_proprietor",
  "local_account_number": "876545678",
  "local_bank_code": "GB123456",
  "local_bank_country_code": "",
  "local_bank_name": "",
  "name": "John Doe",
  "phone": "650-123-4567",
  "routing_number": "NWBKGB2L",
  "routing_number_type": "bic",
  "updated_at": "2023-07-07T22:31:30.859307801Z",
  "wire": {
    "beneficiary_address": {
      "city": "New Winton",
      "country_code": "GB",
      "line_1": "96 Lairg Road",
      "line_2": "",
      "postal_code": "EH33 5ZN",
      "state": ""
    },
    "beneficiary_email": "john.doe@gmail.com",
    "beneficiary_legal_id": "GB1245643234",
    "beneficiary_name": "John Doe",
    "beneficiary_phone": "650-123-4567",
    "beneficiary_type": "sole_proprietor",
    "local_account_number": "876545678",
    "local_bank_code": "GB123456"
  },
  "wire_drawdown_allowed": false
}
Delete a counterparty
DELETE

/counterparties/<counterparty_id>

Delete a counterparty

Path Parameters
counterparty_id

string

Required

ID of the counterparty you're deleting.

Request
curl 'https://api.column.com/counterparties/<counterparty_id>' \
  -XDELETE \
  -u :<YOUR API KEY>
Response

200

400

{}
Financial Institution object
Object Parameters
ach_eligible

bool

Indicates if an institution accepts ACH transfers or not.

check_eligible

bool

Indicates if an institution supports check deposits or not.

city

string

Institution's address city name.

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

created_at

string

The timestamp the object was created.

full_name

string

Institution's official full name.

phone_number

string

Institution's phone number. Only available if ach_eligible = true.

routing_number

string

Institution's routing number. Can be 9-digit ABA routing numbers, or 8/11-character BICs.

routing_number_type

string

The type of the routing number. Can be aba or bic, or other.

short_name

string

Institution's short name.

state

string

Institution's address state code (e.g., CA)

street_address

string

Institution's street address. Only available if ach_eligible = true.

updated_at

string

The timestamp the object was last updated.

realtime_eligible

bool

Indicates if an institution accepts Realtime transfers or not.

realtime_rfp_eligible

bool

Indicates if an institution accepts Realtime RFPs or not.

wire_eligible

bool

Indicates if an institution accepts wire transfers or not.

wire_settlement_only

bool

Indicates if an institution can only accept bank-to-bank settlement transfers, but cannot accept customer transfers.

zip_code

string

Institution's address zip code. Only available if ach_eligible = true.

Financial Institution object
{
  "ach_eligible": true,
  "check_eligible": true,
  "city": "TAMPA",
  "country_code": "US",
  "created_at": "2021-10-03T00:01:08Z",
  "full_name": "JPMORGAN CHASE BANK, NA",
  "phone_number": "8134323700",
  "realtime_eligible": false,
  "realtime_rfp_eligible": false,
  "routing_number": "021000021",
  "routing_number_type": "aba",
  "short_name": "JPMCHASE",
  "state": "FL",
  "street_address": "10430 HIGHLAND MANOR DRIVE",
  "updated_at": "2024-06-07T12:34:00Z",
  "wire_eligible": true,
  "wire_settlement_only": false,
  "zip_code": "33610"
}
Get a financial institution
GET

/institutions/<routing_number>

Retrieve a single financial institution by its ABA number or BIC.

Path Parameters
routing_number

string

Required

ABA number or BIC of the financial institution you're requesting

Request
curl 'https://api.column.com/institutions/322271627' \
  -u :<YOUR API KEY>
Response

200

400

{
  "ach_eligible": true,
  "check_eligible": true,
  "city": "TAMPA",
  "country_code": "US",
  "created_at": "2021-10-03T00:01:08Z",
  "full_name": "JPMORGAN CHASE BANK, NA",
  "phone_number": "8134323700",
  "realtime_eligible": false,
  "realtime_rfp_eligible": false,
  "routing_number": "021000021",
  "routing_number_type": "aba",
  "short_name": "JPMCHASE",
  "state": "FL",
  "street_address": "10430 HIGHLAND MANOR DRIVE",
  "updated_at": "2024-06-07T12:34:00Z",
  "wire_eligible": true,
  "wire_settlement_only": false,
  "zip_code": "33610"
}
List financial institutions
GET

/institutions

List all financial institutions. Filtered results can be retrieved with extra parameters in your queires.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

country_code

string

Optional

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

name

string

Optional

Case-insensitive keywords in full names of financial institutions.

routing_number_type

string

Optional

The type of the routing number. Can be aba or bic.

Request
curl 'https://api.column.com/institutions?routing_number_type=bic&name=victoria&country_code=GB' \
  -u :<YOUR API KEY>
Response

200

400

{
  "has_more": false,
  "institutions": [
    {
      "ach_eligible": true,
      "check_eligible": true,
      "city": "TAMPA",
      "country_code": "US",
      "created_at": "2021-10-03T00:01:08Z",
      "full_name": "JPMORGAN CHASE BANK, NA",
      "phone_number": "8134323700",
      "realtime_eligible": false,
      "realtime_rfp_eligible": false,
      "routing_number": "021000021",
      "routing_number_type": "aba",
      "short_name": "JPMCHASE",
      "state": "FL",
      "street_address": "10430 HIGHLAND MANOR DRIVE",
      "updated_at": "2024-06-07T12:34:00Z",
      "wire_eligible": true,
      "wire_settlement_only": false,
      "zip_code": "33610"
    },
    {
      "ach_eligible": true,
      "check_eligible": true,
      "city": "MINNEAPOLIS",
      "country_code": "US",
      "created_at": "2021-10-13T16:40:48Z",
      "full_name": "WELLS FARGO BANK",
      "phone_number": "8007452426",
      "realtime_eligible": false,
      "realtime_rfp_eligible": false,
      "routing_number": "011100106",
      "routing_number_type": "aba",
      "short_name": "",
      "state": "MN",
      "street_address": "MAC N9301-041",
      "updated_at": "2024-06-04T17:54:50Z",
      "wire_eligible": false,
      "wire_settlement_only": false,
      "zip_code": "55479"
    }
    ...
  ]
}
IBAN validation object
Object Parameters
account_number

string

Account number in the financial institution.

bank_id

string

Local bank code of the financial institution in its country.

bic

string

BIC of the financial institution.

branch_id

string

Branch ID of the financial institution.

check_digits

string

Check digits of the IBAN.

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...) of the financial institution.

iban

string

The IBAN you are validating

institution_name

string

Name of the financial institution.

national_id

string

National ID of the financial institution in its country, which usually consists of its bank_id and branch_id.

IBAN validation object
{
  "account_number": "31926819",
  "bank_id": "NWBK",
  "bic": "NWBKGB2L",
  "branch_id": "601613",
  "check_digits": "29",
  "country_code": "GB",
  "iban": "GB29NWBK60161331926819",
  "institution_name": "NATIONAL WESTMINSTER BANK PLC",
  "national_id": "NWBK601613"
}
Validate an IBAN
GET

/iban/<iban>

Validate the format of an IBAN and if it is registered with the given financial institution. However, we cannot verify if the account is still open.

Path Parameters
iban

string

Required

IBAN you're requesting

Request
curl 'https://api.column.com/iban/GB29NWBK60161331926819' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number": "31926819",
  "bank_id": "NWBK",
  "bic": "NWBKGB2L",
  "branch_id": "601613",
  "check_digits": "29",
  "country_code": "GB",
  "iban": "GB29NWBK60161331926819",
  "institution_name": "NATIONAL WESTMINSTER BANK PLC",
  "national_id": "NWBK601613"
}
ACH transfer object

The ACH transfer object represents the current state of a single ACH transfers originated by or received by Column. The ACH object will contain all relevant information about the specific transfer, which are described in the parameters below. Read about more about ACH transfers here.

Object Parameters
account_number_id

string

ID of the account number that is sending the transfer.

acknowledged_at

string

The timestamp at which an acknowledgement is received for a CCD or CTX ACH transfer.

allow_overdraft

boolean

Allow the account to go negative for the transfer. The bank account needs to have is_overdraftable enabled with an overdraft reserve account linked to it.

amount

int64

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175.

bank_account_id

string

ID of the bank account that is sending the transfer.

cancelled_at

string

The timestamp at which the transfer is cancelled.

company_discretionary_data

string

This optional field allows you to include codes (one or more), of significance only to you, to enable specialized handling of the transfer. There is no standardized interpretation for the value of the field. Maximum length:20 characters.

CIE: This field may contain the Biller's name.

CTX: The Originator's bank account number may be placed in this field.

company_entry_description

string

You can use this optional field to provide the Receiver with a description of the purpose of the transfer. For example, “Gas bill”, “Reg. Salary”, “ins. prem.”, “Soc. Sec.”, “DTC”, “Trade Pay”, “PURCHASE”, etc.

Default value: "PAYMENT". Maximum length: 10 characters.

company_id

string

Typically, a 10-digit unique identifier used for identifying entities, called originators, sending or collecting payments via ACH credit or ACH debit. For WEB entries it can be alphanumeric and less than 10 characters. If you would like to use a specific company ID when originating ACH transactions, please contact us.

company_name

string

The name of the originator company that initiated the ACH transfer.

completed_at

string

The timestamp at which the 60 day return window has passed for this ACH transfer, and it is officially completed.

counterparty_id

string

ID of the counterparty that will receive the transfer.

created_at

string

The timestamp at which the transfer request is created.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD.

description

string

Description of the transfer visible only in your platform. Maximum length: 255 characters.

effective_on

string

Datetime (00:00AM in Pacific Time zone) on which the transfer is effective. For incoming transfers, this is 00:00AM on the Settlement Date of the transfer in PT timezone (more details).

entry_class_code

string

Standard Entry Class code of the transfer. More Details Here.

entry_details

object

ACH entry details containing transaction code information.

transaction_code

integer

The 2 digit numeric value from the actual ACH entry record details that describes the type of account and transaction.

transaction_code_name

string

Human-readable description of the transaction code (e.g., "Checking Credit").

check_serial_number

string

Check serial number. Used for POP, ARC, BOC, RCK entry class codes.

terminal_id

string

Terminal ID. Used for POS, MTE entry class codes.

terminal_location

string

Terminal location. Used for POS, MTE entry class codes.

terminal_city

string

Terminal city. Used for POS, MTE entry class codes.

terminal_state

string

Terminal state. Used for POS, MTE entry class codes.

transaction_serial_number

string

Transaction serial number. Used for POS, MTE entry class codes.

iat

object

This field provides additional IAT (International ACH Transfer) addenda information. More information here.

id

string

The unique id for this object

idempotency_key

string

The idempotency key specified in the ACH transfer.

initiated_at

string

The timestamp at which Column received your ACH request.

is_incoming

boolean

Indicates whether the ACH transfer was incoming (true) or outgoing (false).

is_on_us

boolean

Indicates whether or not the ACH transfer is coming from a Column bank account. If true the request is processed immediately like a book transfer, and not sent to the Fed.

intermediary_financial_institutions

array

Applies only to IAT transfers. This is a List of intermediary institutions involved in an IAT transfer.

manual_review_at

string

The timestamp at which the ACH transfer went into the manual review state.

notification_of_changes

object

Details of Notifications of Change (NOCs) with the latest information of the counterparty. Available only with ach.outgoing_transfer.noc events.

receiver_id

string

Latest accounting reference number by which the beneficiary should be referred by the originator.

routing_number

string

Latest routing number of the counterparty.

account_number

string

Latest account number of the counterparty.

nsf_deadline

string

For incoming ACH Debits and available only with ach.incoming_transfer.nsf events. This is the deadline by which the receiver account must be funded to complete the incoming debit. Column will file an NSF return for this ACH transfer if the account is not funded by the nsf_deadline.

odfi_routing_number

string

The externally facing routing number for the ODFI that initiated the ACH Transfer.

payment_related_info

string

Provides additional information on the ACH transfer. It is usually up to 80 characters long but could be longer for CTX, ENR and TRX transfers.

receiver_id

string

This field contains the accounting reference number by which the Receiver is known to the Originator. It is included for further identification and for descriptive purposes.

For example, it may be the number shown on an invoice, statement, billhead, notice, or other communication as the reference for the Receiver to update account receivable records.

receiver_name

string

The name of the receiver, usually the name on the bank account of the Receiver.

Default value: beneficiary name of the counterparty. Maximum length: 22 characters.

return_contested_at

string

The timestamp at which the dishonored return for this transfer was contested by the RDFI.

return_details

array

Details of the return processing history (e.g., initiated, dishonored, dishonor contested, manual review, etc.). Available only with ach.*.returned, ach.*.return_dishonored or ach.*.return_contested events.

return_dishonored_at

string

The timestamp at which the return for this transfer was dishonored by the ODFI.

return_dishonored_funds_unlocked_at

string

The timestamp at which the dishonored return funds are unlocked.

returned_at

string

The timestamp at which the ACH transfer is returned by the RDFI.

reversal_pair_transfer_id

string

If the transfer is the original transfer of an ACH Reversal, this field is the unique ID of the reversal transfer. If the transfer is the reversal transfer of an ACH Reversal, this field is the unique ID of the original transfer. Please refer to ACH Reversals for more details.

same_day

boolean

Specify if the transfer is a same-day ACH transfer. If it is set as true, it takes precedence over effective_date and overrides it.

settled_at

string

The timestamp at which the ACH was settled.

status

string

The current state of the ACH transfer. See Notifications and States for details. Possible values: INITIATED, PENDING_SUBMISSION, SUBMITTED, SETTLED, RETURNED, COMPLETED, CANCELED, SCHEDULED, PENDING_RETURN, RETURN_DISHONORED, RETURN_DISHONORED_FUNDS_UNLOCKED, RETURN_CONTESTED, MANUAL_REVIEW, and MANUAL_REVIEW_APPROVED.

submitted_at

string

The timestamp at which the ACH transfer was submitted to the Fed.

trace_number

string

The unique number assigned to every ACH entry by an ODFI which identifies that entry within a specific ACH file.

transaction_type_code

string

This is a required code on IAT transfers used to identify reason for payment. Possible values: ANN, BUS, DEP, LOA, MIS, MOR, PEN, REM, RLS, SAL, TAX. See IAT transfers for details.

type

string

ACH transfer type: CREDIT or DEBIT. Learn more.

ultimate_beneficiary_counterparty_id

string

ID of the ultimate beneficiary counterparty that will receive the transfer. This is only required on outgoing IAT debits.

ultimate_originator_counterparty_id

string

ID of the ultimate originating counterparty that sent the transfer. This is only required on outgoing IAT credits.

updated_at

string

The timestamp at which the ACH transfer was lastly updated.

ACH Transfer object
{
  "id": "acht_2HKbYE2th2sFioBxrRFOZL3IHR4",
  "iat": null,
  "type": "CREDIT",
  "amount": 60000,
  "status": "SUBMITTED",
  "is_on_us": false,
  "same_day": false,
  "company_id": "9959349647",
  "created_at": "2022-11-09T23:32:47Z",
  "settled_at": null,
  "updated_at": "2022-11-09T23:32:48Z",
  "description": "",
  "is_incoming": false,
  "receiver_id": "",
  "returned_at": null,
  "cancelled_at": null,
  "company_name": "COLUMN NA",
  "completed_at": null,
  "effective_on": "2022-11-10T08:00:00Z",
  "initiated_at": "2022-11-09T23:32:47Z",
  "nsf_deadline": null,
  "submitted_at": "2022-11-09T23:32:48Z",
  "trace_number": "121145300000005",
  "currency_code": "USD",
  "receiver_name": "CHASE ACCOUNT",
  "return_details": [],
  "acknowledged_at": null,
  "allow_overdraft": false,
  "bank_account_id": "bacc_2HKbY4W10hcBQBx5r42xMDEhv2K",
  "counterparty_id": "cpty_2HKbYBePtS8z3zK32QvwKlIoIeK",
  "idempotency_key": "",
  "entry_class_code": "PPD",
  "manual_review_at": null,
  "account_number_id": "acno_2HKbY3eq0gPP1WaQLZShDk87JC4",
  "funds_availability": "default",
  "odfi_routing_number": "121145307",
  "return_contested_at": null,
  "payment_related_info": "payment addenda for COR testing",
  "return_dishonored_at": null,
  "return_dishonored_funds_unlocked_at": null,
  "notification_of_changes": {
    "receiver_id": "",
    "routing_number": "241070530",
    "account_number": "123456789"
  },
  "company_entry_description": "PAYMENT",
  "reversal_pair_transfer_id": "",
  "company_discretionary_data": "",
  "ultimate_beneficiary_counterparty_id": "",
  "ultimate_originator_counterparty_id": "",
  "entry_details": {
    "transaction_code": 22,
    "transaction_code_name": "Checking Credit"
  }
}
IAT transfer sub-object
Object Parameters
foreign_correspondent_bank_info

array

Provides additional details around foreign corresponding banks used in the IAT transfer.

foreign_payment_amount

string

The amount for which the transfer was originated by the Foreign ODFI. This will be in USD, since Column will receive IATs from a domestic correspondent bank.

foreign_trace_number

string

Contains the trace number assigned to the transfer in the originating national payments system.

odfi_branch_country_code

string

The two digit alphabetic country code which identifies the country in which the branch of the bank that originated the transfer is located.

odfi_identification

string

The routing number of the DFI originating the transfer.

odfi_identification_number_qualifier

string

The two digit numbering scheme used in the ODFI identification number. Possible values are 01(National Clearing System Number), 02(BIC Coder), or 03(IBAN).

odfi_name

string

The name of the ODFI.

originator_city_state_province

string

Contains the city, and if applicable the state or province of the originator.

originator_country_postal_code

string

Contains the postal code for the originator street address.

originator_name

string

Contains the name of the originator of the transaction.

originator_street_address

string

Contains the physical street address of the originator.

rdfi_branch_country_code

string

The two digit alphabetic country code which identifies the country in which the branch of the bank that received the transfer is located.

rdfi_identification

string

Contains the bank identification number of the DFI at which the receiver maintains their account.

rdfi_identification_number_qualifier

string

Thw two digit numbering scheme used in the RDFI identification number. Possible values are 01(National Clearing System Number), 02(BIC Coder), or 03(IBAN)

rdfi_name

string

The name of the RDFI.

receiver_city_state_province

string

Contains the city, and if applicable the state or province of the receiver.

receiver_country_postal_code

string

Contains the postal code for the receiver street address.

receiver_identification_number

string

This field is used by the originator to insert its own number for tracing purposes.

receiver_street_address

string

Contains the physical street address of the receiver.

receiving_company_or_individual_name

string

Contains the name of the receiver of the transaction.

IAT transfer sub-object
{
 "iat": {
    "foreign_correspondent_bank_info": [{
        "name": "name"
        "identification_number_qualifier": "identification_number_qualifier"
        "identification_number": "identification_number"
        "branch_country_code": "branch_country_code"
    }, ...],
    "foreign_payment_amount": "11500",
    "foreign_trace_number": "",
    "odfi_branch_country_code": "IE",
    "odfi_identification": "02800008",
    "odfi_identification_number_qualifier": "01",
    "odfi_name": "CITIBANK EUROPE PLC",
    "originator_city_state_province": "LONDON*GB\\",
    "originator_country_postal_code": "REDACTED",
    "originator_name": "REDACTED",
    "originator_street_address": "REDACTED",
    "rdfi_branch_country_code": "US",
    "rdfi_identification": "REDACTED",
    "rdfi_identification_number_qualifier": "01",
    "rdfi_name": "COLUMN N.A.",
    "receiver_city_state_province": "x\\",
    "receiver_country_postal_code": "US*74110\\",
    "receiver_identification_number": "REDACTED",
    "receiver_street_address": "REDACTED",
    "receiving_company_or_individual_name": "REDACTED"
    }
}
Create an ACH transfer
POST

/transfers/ach

Creates an ACH transfer between an account and a counterparty.

Body Parameters
description

string

Optional

Description of the transfer visible only in your platform. Maximum length: 255 characters.

amount

int64

Required

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175.

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

account_number_id

string

Optional

ID of the account number from which the transfer is sent. If no account_number_id is specified, the default account number on a provided bank_account_id is used.

account_number_id or bank_account_id is required.

bank_account_id

string

Optional

ID of the bank account from which the transfer is sent. If no account_number_id is specified, the default account number on the bank_account_id is used.

account_number_id or bank_account_id is required.

counterparty

object

Optional

Counterparty object to create a counterparty for the receiver of the transfer at transfer creation. Either counterparty or counterparty_id is required.

counterparty_id

string

Required

ID of the counterparty that will receive the transfer. Either counterparty or counterparty_id is required.

type

string

Required

ACH transfer type: CREDIT or DEBIT. Learn More.

effective_date

string

Optional

Date (format: YYYY-MM-DD) on which the transfer will be effective

same_day

boolean

Optional

Specify if the transfer is a same-day ACH transfer. If it is set as true, it takes precedence over effective_date and overrides it.

company_discretionary_data

string

Optional

This optional field allows you to include codes (one or more), of significance only to you, to enable specialized handling of the transfer. There is no standardized interpretation for the value of the field. Maximum length:20 characters.

CIE: This field may contain the Biller's name.

CTX: The Originator's bank account number may be placed in this field.

Characters are validated according to the ACH Valid Character Specification.
company_entry_description

string

Optional

You can use this optional field to provide the Receiver with a description of the purpose of the transfer. For example, “Gas bill”, “Reg. Salary”, “ins. prem.”, “Soc. Sec.”, “DTC”, “Trade Pay”, “PURCHASE”, etc.

Default value: "PAYMENT". Maximum length: 10 characters.

Characters are validated according to the ACH Valid Character Specification.
company_name

string

Optional

This optional field identifies the source of the transfer and is used for descriptive purposes for the Receiver. Except as otherwise noted below, this field must contain the name by which the Originator is known to and readily recognized by the Receiver of the transfer to reduce risk of return by the Receiver

CCD: For a Health Care EFT Transaction, this field must contain the name of the Health Plan, or where an organization is self-insured, the name of the organization's third-party administrator that is recognized by the Health Care Provider and to which the Health Care Provider submits its claims.

CIE: This field contains the bill payment service provider's name.

WEB: For a P2P transfer, this field contains the P2P service provider's name.

Default value: the root entity name of your platform, or "COLUMN NA" if no root entity exists. Maximum length: 16 characters.

Characters are validated according to the ACH Valid Character Specification.
payment_related_info

string

Optional

Provides an additional 80 characters to give details on the ACH transaction for outgoing transfers. This information will be surfaced to the RDFI. This information will be surfaced to the RDFI. Characters are validated according to the ACH Valid Character Specification.

receiver_name

string

Optional

The name of the receiver, usually the name on the bank account of the Receiver. If omitted, counterparty.name will be automatically used.

Default value: beneficiary name of the counterparty. Maximum length: 22 characters for all entry class codes except CIE it is 15 characters.

Characters are validated according to the ACH Valid Character Specification
receiver_id

string

Optional

This field contains the accounting reference number by which the Receiver is known to the Originator. It is included for further identification and for descriptive purposes.

For example, it may be the number shown on an invoice, statement, billhead, notice, or other communication as the reference for the Receiver to update account receivable records.

Maximum length: 15 characters.

Characters are validated according to the ACH Valid Character Specification
entry_class_code

string

Required

Standard Entry Class code of the transfer. Valid values: CCD, CTX, CIE, PPD (default), TEL, WEB. More Details Here.

allow_overdraft

boolean

Optional

Allow the account to go negative for the transfer. The bank account needs to have is_overdraftable enabled with an overdraft reserve account linked to it.

ultimate_beneficiary_counterparty

object

Optional

Counterparty object to create a counterparty an ultimate beneficiary counterparty at the time of transfer creation. This is only required on outgoing IAT debits. Either ultimate_beneficiary_counterparty or ultimate_beneficiary_counterpartyid is required.

ultimate_beneficiary_counterparty_id

string

Optional

ID of the ultimate beneficiary counterparty that will receive the transfer. This is only required on outgoing IAT debits. Either ultimate_beneficiary_counterparty or ultimate_beneficiary_counterparty_id is required.

ultimate_originator_counterparty

object

Optional

Counterparty object to create an ultimate originator counterparty at the time of transfer creation. This is only required on outgoing IAT credits. Either ultimate_originator_counterparty or ultimate_originator_counterparty_id is required.

ultimate_originator_counterparty_id

string

Optional

ID of the ultimate originating counterparty that will sent the transfer. This is only required on outgoing IAT credits. Either ultimate_originator_counterparty or ultimate_originator_counterparty_id is required.

Request
curl 'https://api.column.com/transfers/ach' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d amount=100000 \
  -d currency_code="USD" \
  -d bank_account_id="<bank_account_id>" \
  -d counterparty_id="<counterparty_id>" \
  -d type="CREDIT" \
  -d entry_class_code="CCD"
Response

200

400

{
  "id": "acht_2HKbYE2th2sFioBxrRFOZL3IHR4",
  "iat": null,
  "type": "CREDIT",
  "amount": 100000,
  "status": "SUBMITTED",
  "is_on_us": false,
  "same_day": false,
  "company_id": "9959349647",
  "created_at": "2022-11-09T23:32:47Z",
  "settled_at": null,
  "updated_at": "2022-11-09T23:32:48Z",
  "description": "",
  "is_incoming": false,
  "receiver_id": "",
  "returned_at": null,
  "cancelled_at": null,
  "company_name": "COLUMN NA",
  "completed_at": null,
  "effective_on": "2022-11-10T08:00:00Z",
  "initiated_at": "2022-11-09T23:32:47Z",
  "nsf_deadline": null,
  "submitted_at": "2022-11-09T23:32:48Z",
  "trace_number": "121145300000005",
  "currency_code": "USD",
  "receiver_name": "CHASE ACCOUNT",
  "return_details": [],
  "acknowledged_at": null,
  "allow_overdraft": false,
  "bank_account_id": "bacc_2HKbY4W10hcBQBx5r42xMDEhv2K",
  "counterparty_id": "cpty_2HKbYBePtS8z3zK32QvwKlIoIeK",
  "idempotency_key": "",
  "entry_class_code": "PPD",
  "manual_review_at": null,
  "account_number_id": "acno_2HKbY3eq0gPP1WaQLZShDk87JC4",
  "funds_availability": "default",
  "odfi_routing_number": "121145307",
  "return_contested_at": null,
  "payment_related_info": "payment addenda for COR testing",
  "return_dishonored_at": null,
  "return_dishonored_funds_unlocked_at": null,
  "notification_of_changes": null,
  "company_entry_description": "PAYMENT",
  "reversal_pair_transfer_id": "",
  "company_discretionary_data": "",
  "ultimate_beneficiary_counterparty_id": "",
  "ultimate_originator_counterparty_id": "",
  "entry_details": {
    "transaction_code": 22,
    "transaction_code_name": "Checking Credit"
  }
}
List all ACH transfers
GET

/transfers/ach

Retrieve all ACH transfers under your developer account. Filtered results can be retrieved with extra parameters in the query (bank_account_id, counterparty_id, etc.).

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

bank_account_id

string

Optional

Return results associated with this bank account.
counterparty_id

string

Optional

Return results associated with this counterparty.
status

string

Optional

Return results with this status.

Possible enum values:

- INITIATED: the outgoing transfer has been initiated but not submitted yet.

-PENDING_SUBMISSION: the outgoing transfer is to be submitted very soon.

- SUBMITTED: the outgoing transfer has been submitted to the FRB.

- ACKNOWLEDGED: the outgoing CCD/CTX transfer has been acknowledged by the RDFI.

- SETTLED: the transfer has been settled.

- RETURNED: the transfer has been returned. Please use the [ACH Return API](/docs/api/#ach-return/get) to check return details.

- COMPLETED: the transfer has been completed, and no return (except R06 and \`R31\`) is acceptable.

- CANCELED: the outgoing transfer has been cancelled by your request via our ACH Return API.

- SCHEDULED: the incoming transfer has been scheduled to be settled on its Settlement Date

- PENDING_RETURN: the incoming transfer will be returned shortly if no action is taken before the deadline

- RETURN_DISHONORED: the return of the transfer has been dishonored by the ODFI. Please use the ACH Return API to check return details.

- RETURN_DISHONORED_FUNDS_UNLOCKED: locked funds for the dishonored return transfer have been unlocked.

- RETURN_CONTESTED: the dishonored return of the transfer has been contested by the RDFI. Please use the ACH Return API to check return details.

- MANUAL_REVIEW: the transfer is under manual review.

is_incoming

boolean

Optional

Return transfers that is either incoming or outgoing.

type

string

Optional

Return transfers that are either CREDIT or DEBIT.

Request
curl 'https://api.column.com/transfers/ach' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "id": "acht_28LtyrWQ7d5CZTXOjKEwVJrnlTa",
      "created_at": "2022-04-26T21:19:11Z",
      "updated_at": "2022-04-26T21:19:11Z",
      "submitted_at": null,
      "acknowledged_at": null,
      "settled_at": null,
      "completed_at": null,
      "returned_at": null,
      "cancelled_at": null,
      "initiated_at": null,
      "manual_review_at": null,
      "return_dishonored_at": null,
      "return_contested_at": null,
      "status": "SCHEDULED",
      "type": "DEBIT",
      "idempotency_key": "",
      "bank_account_id": "bacc_28Ltym2THRHbemnnJBVTH3m39fE",
      "account_number_id": "acno_28LtynFqAR4JbLXYVdfwU53AVcO",
      "counterparty_id": "",
      "amount": 10000,
      "currency_code": "USD",
      "description": "received MOCK IAT transfer (trace #: 322271620000001)",
      "effective_on": "2022-04-26T07:00:00Z",
      "same_day": false,
      "company_discretionary_data": "",
      "company_entry_description": "MOCK IAT",
      "company_id": "123456666",
      "company_name": "STARK INDUSTRIES",
      "receiver_name": "John P. Doe",
      "receiver_id": "ACCT223457",
      "entry_class_code": "IAT",
      "allow_overdraft": false,
      "is_incoming": true,
      "nsf_deadline": null,
      "trace_number": "322271620000001",
      "odfi_routing_number": "322271627",
      "return_details": [],
      "is_on_us": false,
      "iat": {
        "foreign_payment_amount": "0",
        "foreign_trace_number": "",
        "receiving_company_or_individual_name": "John P. Doe",
        "originator_name": "Stark Industries",
        "originator_street_address": "THE WALBROOK BUILDING",
        "originator_city_state_province": "LONDON*GB",
        "originator_country_postal_code": "GB*EC4N 8AF",
        "odfi_name": "CITIBANK EUROPE PLC",
        "odfi_identification_number_qualifier": "01",
        "odfi_identification": "0280008",
        "odfi_branch_country_code": "IE",
        "rdfi_name": "COLUMN N.A.",
        "rdfi_identification_number_qualifier": "01",
        "rdfi_identification": "121145307",
        "rdfi_branch_country_code": "US",
        "receiver_identification_number": "ACCT223457",
        "receiver_street_address": "3744NBIRMINGHAMAVE",
        "receiver_city_state_province": "x",
        "receiver_country_postal_code": "US*74110",
        "foreign_correspondent_bank_info": [],
        "payment_related_info": ["1d46a25a-508e-4bc1-8a6e-5355b1dfd7aLuckyLand - 1d46a25a-508e-4bc1-8a6e"],
        "transaction_type_code": "DEP"
      },
      "notification_of_changes": null,
      "payment_related_info": "",
      "reversal_pair_transfer_id": "", 
      "ultimate_beneficiary_counterparty_id":"",
      "ultimate_originator_counterparty_id":"",
      "entry_details": {
        "transaction_code": 27,
        "transaction_code_name": "Checking Debit"
      }
    },
    {
      "id": "acht_2HKbYE2th2sFioBxrRFOZL3IHR4",
      "iat": null,
      "type": "CREDIT",
      "amount": 60000,
      "status": "SUBMITTED",
      "is_on_us": false,
      "same_day": false,
      "company_id": "9959349647",
      "created_at": "2022-11-09T23:32:47Z",
      "settled_at": null,
      "updated_at": "2022-11-09T23:32:48Z",
      "description": "",
      "is_incoming": false,
      "receiver_id": "",
      "returned_at": null,
      "cancelled_at": null,
      "company_name": "COLUMN NA",
      "completed_at": null,
      "effective_on": "2022-11-10T08:00:00Z",
      "initiated_at": "2022-11-09T23:32:47Z",
      "nsf_deadline": null,
      "submitted_at": "2022-11-09T23:32:48Z",
      "trace_number": "121145300000005",
      "currency_code": "USD",
      "receiver_name": "CHASE ACCOUNT",
      "return_details": [],
      "acknowledged_at": null,
      "allow_overdraft": false,
      "bank_account_id": "bacc_2HKbY4W10hcBQBx5r42xMDEhv2K",
      "counterparty_id": "cpty_2HKbYBePtS8z3zK32QvwKlIoIeK",
      "idempotency_key": "",
      "entry_class_code": "PPD",
      "manual_review_at": null,
      "account_number_id": "acno_2HKbY3eq0gPP1WaQLZShDk87JC4",
      "funds_availability": "default",
      "odfi_routing_number": "121145307",
      "return_contested_at": null,
      "payment_related_info": "payment addenda for COR testing",
      "return_dishonored_at": null,
      "notification_of_changes": null,
      "company_entry_description": "PAYMENT",
      "reversal_pair_transfer_id": "",
      "company_discretionary_data": "", 
      "ultimate_beneficiary_counterparty_id":"",
      "ultimate_originator_counterparty_id":"",
      "entry_details": {
        "transaction_code": 22,
        "transaction_code_name": "Checking Credit"
      }
    }
  ],
  "has_more": false
}
Get an ACH transfer
GET

/transfers/ach/<ach_transfer_id>

Retrieves a single transfer by its ID.

Path Parameters
ach_transfer_id

string

Required

ID of the ACH transfer you're looking up.
Request
curl 'https://api.column.com/transfers/ach/<ach_transfer_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "acht_28LtyrWQ7d5CZTXOjKEwVJrnlTa",
  "created_at": "2022-04-26T21:19:11Z",
  "updated_at": "2022-04-26T21:19:11Z",
  "submitted_at": null,
  "acknowledged_at": null,
  "settled_at": null,
  "completed_at": null,
  "returned_at": null,
  "cancelled_at": null,
  "initiated_at": null,
  "manual_review_at": null,
  "return_dishonored_at": null,
  "return_dishonored_funds_unlocked_at": null,
  "return_contested_at": null,
  "status": "SCHEDULED",
  "type": "DEBIT",
  "idempotency_key": "",
  "bank_account_id": "bacc_28Ltym2THRHbemnnJBVTH3m39fE",
  "account_number_id": "acno_28LtynFqAR4JbLXYVdfwU53AVcO",
  "counterparty_id": "",
  "amount": 10000,
  "currency_code": "USD",
  "description": "received MOCK IAT transfer (trace #: 322271620000001)",
  "effective_on": "2022-04-26T07:00:00Z",
  "same_day": false,
  "company_discretionary_data": "",
  "company_entry_description": "MOCK IAT",
  "company_id": "123456666",
  "company_name": "STARK INDUSTRIES",
  "receiver_name": "John P. Doe",
  "receiver_id": "ACCT223457",
  "entry_class_code": "IAT",
  "allow_overdraft": false,
  "is_incoming": true,
  "nsf_deadline": null,
  "trace_number": "322271620000001",
  "odfi_routing_number": "322271627",
  "return_details": [],
  "is_on_us": false,
  "iat": {
    "foreign_payment_amount": "0",
    "foreign_trace_number": "",
    "receiving_company_or_individual_name": "John P. Doe",
    "originator_name": "Stark Industries",
    "originator_street_address": "THE WALBROOK BUILDING",
    "originator_city_state_province": "LONDON*GB",
    "originator_country_postal_code": "GB*EC4N 8AF",
    "odfi_name": "CITIBANK EUROPE PLC",
    "odfi_identification_number_qualifier": "01",
    "odfi_identification": "0280008",
    "odfi_branch_country_code": "IE",
    "rdfi_name": "COLUMN N.A.",
    "rdfi_identification_number_qualifier": "01",
    "rdfi_identification": "121145307",
    "rdfi_branch_country_code": "US",
    "receiver_identification_number": "ACCT223457",
    "receiver_street_address": "3744NBIRMINGHAMAVE",
    "receiver_city_state_province": "x",
    "receiver_country_postal_code": "US*74110",
    "foreign_correspondent_bank_info": [],
    "payment_related_info": ["1d46a25a-508e-4bc1-8a6e-5355b1dfd7aLuckyLand - 1d46a25a-508e-4bc1-8a6e"],
    "transaction_type_code": "DEP"
  },
  "notification_of_changes": null,
  "payment_related_info": "",
  "reversal_pair_transfer_id": "", 
  "ultimate_beneficiary_counterparty_id":"",
  "ultimate_originator_counterparty_id":"",
  "entry_details": {
    "transaction_code": 27,
    "transaction_code_name": "Checking Debit"
  }
}
Cancel an ACH transfer
POST

/transfers/ach/<ach_transfer_id>/cancel

Cancels an ACH transfer before it is sent to the Federal Reserve.

This action can be performed only if a given transfer is INITIATED.

You can read more about ACH states here.

Path Parameters
ach_transfer_id

string

Required

ID of the ACH transfer you intend to cancel.
Request
curl 'https://api.column.com/transfers/ach/<ach_transfer_id>/cancel' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "acht_28LtylaW2AzFlAkj1ZFyqW2m5tR",
  "created_at": "2022-04-26T21:19:11Z",
  "updated_at": "2022-04-26T21:19:11Z",
  "submitted_at": null,
  "acknowledged_at": null,
  "settled_at": null,
  "completed_at": null,
  "returned_at": null,
  "cancelled_at": "2022-04-26T21:19:11Z",
  "initiated_at": "2022-04-26T21:19:11Z",
  "manual_review_at": null,
  "return_dishonored_at": null,
  "return_contested_at": null,
  "status": "CANCELED",
  "type": "CREDIT",
  "idempotency_key": "",
  "bank_account_id": "bacc_28LtymCYuPbxZVKFqEb2LG25gtv",
  "account_number_id": "acno_28LtyqzrhU5s1TGOjWqNrGNHpRp",
  "counterparty_id": "cpty_28LtyqybwjOBwqcSYv1ogtffbYw",
  "amount": 50000,
  "currency_code": "USD",
  "description": "test transfer",
  "effective_on": "2022-04-27T07:00:00Z",
  "same_day": false,
  "company_discretionary_data": "",
  "company_entry_description": "PAYMENT",
  "company_id": "9121145307",
  "company_name": "COLUMN NA",
  "receiver_name": "CHASE ACCOUNT",
  "receiver_id": "",
  "entry_class_code": "PPD",
  "allow_overdraft": false,
  "is_incoming": false,
  "nsf_deadline": null,
  "trace_number": "",
  "odfi_routing_number": "121145307",
  "return_details": [],
  "is_on_us": false,
  "iat": null,
  "payment_related_info": "",
  "notification_of_changes": null,
  "reversal_pair_transfer_id": "",
  "ultimate_beneficiary_counterparty_id": "",
  "ultimate_originator_counterparty_id": "",
  "entry_details": {
    "transaction_code": 22,
    "transaction_code_name": "Checking Credit"
  }
}
Reverse an ACH transfer
POST

/transfers/ach/<ach_transfer_id>/reverse

Reverse an erroneous outgoing ACH transfer. You can read more about ACH Reversals.

Path Parameters
ach_transfer_id

string

Required

ID of the original ACH transfer you intend to reverse.
Body Parameters
reason

string

Required

Reason for the reversal transfer. Must be one of the following:

duplicated_entry: the original transfer is a duplicated transfer
incorrect_amount: the original transfer has an incorrect amount
incorrect_receiver_account: the original transfer has an incorrect receiver account
debit_earlier_than_intended: the original transfer is an ACH debit requested earlier than intended
credit_later_than_intended: the original transfer is an ACH credit requested later than intended
description

string

Optional

Description of the reversal transfer visible only in your platform. Maximum length: 255 characters.

Request
curl 'https://api.column.com/transfers/ach/<ach_transfer_id>/reverse' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d reason="duplicated_entry" \
  -d description="reverse duplicated transfer"
Response

200

400

{
  "account_number_id": "acno_28LvftEu6Ee31HZzMCLrjf9skqU",
  "acknowledged_at": null,
  "allow_overdraft": false,
  "amount": 12500,
  "bank_account_id": "bacc_28LvfooToT4UhrNLxoDX8EuZLeR",
  "cancelled_at": null,
  "company_discretionary_data": "",
  "company_entry_description": "REVERSAL",
  "company_id": "9121145307",
  "company_name": "COLUMN NA",
  "completed_at": null,
  "counterparty_id": "cpty_28LvfpAkfFAO1PiSSEY8rJAOtou",
  "created_at": "2022-04-26T21:33:07Z",
  "currency_code": "USD",
  "description": "reverse duplicated transfer",
  "effective_on": "2022-04-27T07:00:00Z",
  "entry_class_code": "PPD",
  "iat": null,
  "id": "acht_28LvftqvcJ7nE5BDOAMLzTBI8xe",
  "idempotency_key": "28LvfqsLQYMMtFFaV95gDYbcfMo",
  "initiated_at": "2022-04-26T21:33:07Z",
  "is_incoming": false,
  "is_on_us": false,
  "manual_review_at": null,
  "nsf_deadline": null,
  "odfi_routing_number": "121145307",
  "payment_related_info": "duplicated_entry",
  "receiver_id": "",
  "receiver_name": "CHASE ACCOUNT",
  "return_contested_at": null,
  "return_details": [],
  "return_dishonored_at": null,
  "returned_at": null,
  "reversal_pair_transfer_id": "acht_28Lvftv63RqD69H9gpbF4oQ2JEW",
  "same_day": false,
  "settled_at": null,
  "status": "INITIATED",
  "submitted_at": null,
  "trace_number": "",
  "type": "DEBIT",
  "notification_of_changes": null,
  "updated_at": "2022-04-26T21:33:07Z", 
  "ultimate_beneficiary_counterparty_id":"",
  "ultimate_originator_counterparty_id":"",
  "entry_details": {
    "transaction_code": 27,
    "transaction_code_name": "Checking Debit"
  }
}
ACH return object

The ACH return object represents the current state of a single ACH return originated by or received by Column. The ACH return object will contain all relevant information about the specific return, which are described in the parameters below. Read about more about ACH transfers here.

Object Parameters
ach_transfer_id

string

The id of the ACH transfer that is being returned.

created_at

string

The timestamp at which the return was created.

details

array of objects

Includes an object containing detailed information about the return.

addenda

string

Optional information provided about the ACH return.

created_at

string

The timestamp at which the ACH return is created.

description

string

Description of the ACH return.

return_code

string

Reason for the ACH return.

status

string

Status of the ACH return.

updated_at

string

The timestamp at which the ACH return is updated.

is_incoming

boolean

Indicates if the return was initiated by an RDFI (true) or by Column (false).

status

string

The current state of the ACH return. The possible states are INITIATED, SENT, DISHONORED, CONTESTED, COMPLETED, and REJECTED. See here for more information.

updated_at

string

The timestamp at which the return ACH return was updated (typically a status update).

ACH Return object
{
  "ach_transfer_id": "acht_25JG4Xr0azGVzfNDMoCUjcO1YgF",
  "created_at": "2022-02-19T07:20:08Z",
  "details": [
    {
      "addenda": "ACH Returned by FakeFed",
      "created_at": "2022-02-19T07:20:08Z",
      "description": "Insufficient Funds (trace #: 322271620000003)",
      "return_code": "R01",
      "status": "INITIATED",
      "updated_at": "2022-02-19T07:20:08Z"
    }
  ],
  "is_incoming": true,
  "status": "INITIATED",
  "updated_at": "2022-02-19T07:20:08Z"
}
Create an ACH return
POST

/transfers/ach/<ach_transfer_id>/return

Submit a request to return an incoming ACH transfer that is sent by other ODFIs (i.e. Column is the RDFI).

At most only one return request can be submitted for each incoming ACH transfer.

You can read more about ACH returns here.

Path Parameters
ach_transfer_id

string

Required

ID of the ACH transfer you intend to return.

Body Parameters
return_code

string

Required

Return reason codes of the return

You can read more about ACH return reason codes here.

description

string

Optional

Description of the reason for the return. Maximum length: 255 characters. This is for internal use only and will not be transmitted to the ODFI.

addenda

string

Optional

If provided, this string will be sent as the addenda information field of the ACH addenda entry to the ODFI. Maximum length: 44 characters.

Request
curl 'https://api.column.com/transfers/ach/<ach_transfer_id>/return' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d return_code="R10"
Response

200

400

{
  "ach_transfer_id": "string",
  "created_at": "2021-11-29T20:08:58.662Z",
  "updated_at": "2021-11-29T20:08:58.662Z",
  "status": "INVALID",
  "is_incoming": true,
  "details": [
    {
      "created_at": "2021-11-29T20:08:58.662Z",
      "updated_at": "2021-11-29T20:08:58.662Z",
      "status": "INVALID",
      "return_code": "string",
      "description": "string",
      "addenda": "string"
    }
  ]
}
List all ACH returns
GET

/transfers/ach/returns

Retrieve the return processing details of all ACH transfers under your developer account, including both returns filed by your platform and returns sent by other RDFIs.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/transfers/ach/returns' \
  -u :<YOUR API KEY>
Response

200

400

{
  "ach_returns": [
    {
      "ach_transfer_id": "string",
      "created_at": "2021-11-29T20:00:20.304Z",
      "updated_at": "2021-11-29T20:00:20.304Z",
      "status": "INVALID",
      "is_incoming": true,
      "details": [
        {
          "created_at": "2021-11-29T20:00:20.304Z",
          "updated_at": "2021-11-29T20:00:20.304Z",
          "status": "INVALID",
          "return_code": "string",
          "description": "string",
          "addenda": "string"
        }
      ]
    }
  ],
  "has_more": true
}
Get an ACH return
GET

/transfers/ach/<ach_transfer_id>/return

Retrieve the return processing details of an ACH transfer. The return may be either filed by your platform, or sent to you by other RDFIs.

Path Parameters
ach_transfer_id

string

Required

ID of the ACH transfer you're looking up.

Request
curl 'https://api.column.com/transfers/ach/<ach_transfer_id>/return' \
  -u :<YOUR API KEY>
Response

200

400

{
  "ach_transfer_id": "string",
  "created_at": "2021-11-29T20:08:18.295Z",
  "updated_at": "2021-11-29T20:08:18.295Z",
  "status": "INVALID",
  "is_incoming": true,
  "details": [
    {
      "created_at": "2021-11-29T20:08:18.295Z",
      "updated_at": "2021-11-29T20:08:18.295Z",
      "status": "INVALID",
      "return_code": "string",
      "description": "string",
      "addenda": "string"
    }
  ]
}
ACH Positive Pay Rule object

The ACH Positive Pay Rule object represents a whitelist rule for handling incoming debits. Incoming debits to a bank account with at least one positive pay rule will be automatically returned unless the incoming debit meets the conditions of a positive pay rule on the account. A positive pay rule is uniquely identified by the target bank account and the ACH Company ID present in an incoming debit.

Object Parameters
ach_company_id

string

the ACH Company ID for the rule. This is a ten digit identifier.

amount

int64

the amount threshold in cents that will be used in rule evaluation. Must not be set if amount_condition is set to ANY_AMOUNT

amount_condition

string

This required field configures the rule to make a specific kind of amount comparison.

equal: The incoming debit will only be permitted if the transfer amount equals the rule amount.

less_than_or_equal_to: The incoming debit will only be permitted if the transfer amount is less than or equal to the rule amount.

any_amount: The incoming debit will be permitted for any amount. If this value is used, `amount` must not be specified.

bank_account_id

string

ID of the bank account this rule applies to.

description

string

Description of the rule. maximum length:255 characters.

ACH Positive Pay rule object
{
  "ach_company_id": "1234567890",
  "ach_positive_pay_rule_id": "appr_2iqaXhOkS89lL7apWzSx0lGWRdu",
  "amount": 100,
  "amount_condition": "equal",
  "bank_account_id": "bacc_2ipgDr97nxf9lfFkI8aopgnYX3M",
  "description": "example ACH Positive Pay rule"
}
Create an ACH positive pay rule
POST

/ach-positive-pay-rules

Creates an ACH positive pay rule on a bank account.

Body Parameters
ach_company_id

string

Required

the ACH Company ID for the rule. This is a ten digit identifier. This rule will apply to incoming debits with this ACH Company ID.

amount

int64

Optional

Amount (in cents) of the funds that the rule condition will be evaluated against.

e.g. $1.75 would be represented by 175.

amount_condition

string

Required

The type of comparison to make against the amount of an incoming ACH debit: EQUAL or LESS_THAN_OR_EQUAL_TO or ANY_AMOUNT. If amount_condition is ANY_AMOUNT, then amount must not be specified.

bank_account_id

string

Required

ID of the bank account ID this rule applies to.

description

string

Required

Description of the positive pay rule: 255 characters.

Request
curl 'https://api.column.com/positive-pay-rules' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d ach_company_id="1234567890" \
  -d amount=10000 \
  -d amount_condition="less_than_or_equal_to" \
  -d bank_account_id="bacc_2ipgDrdfsdfqoufgnYX3M" \
  -d description="example ACH Positive Pay rule" \
Response

200

400

{
  "ach_company_id": "1234567890",
  "ach_positive_pay_rule_id": "appr_2iqaXhOkS89lL7apWzSx0lGWRdu",
  "amount": 100,
  "amount_condition": "less_than_or_equal_to",
  "bank_account_id": "bacc_2ipgDr97nxf9lfFkI8aopgnYX3M",
  "description": "example ACH Positive Pay rule"
}
Get an ACH positive pay rule
GET

/ach-positive-pay-rules/<positive_pay_rule_id>

Gets an ACH positive pay rule.

Path Parameters
positive_pay_rule_id

string

Required

ID of the positive pay rule.

Request
curl 'https://api.column.com/ach-positive-pay-rules/<positive_pay_rule_id>' \
  -u :<YOUR API KEY> \
Response

200

400

{
  "ach_company_id": "1234567890",
  "ach_positive_pay_rule_id": "appr_2iqaXhOkS89lL7apWzSx0lGWRdu",
  "amount": 100,
  "amount_condition": "equal",
  "bank_account_id": "bacc_2ipgDr97nxf9lfFkI8aopgnYX3M",
  "description": "example ACH Positive Pay rule"
}
List ACH positive pay rules
GET

/bank-accounts/<bank_account_id>/ach-positive-pay-rules

Gets all ACH positive pay rules on a bank account.

Path Parameters
bank_account_id

string

Required

ID of the bank account ID to fetch rules for.

Request
curl 'https://api.column.com/bank-accounts/<bank_account_id>/ach-positive-pay-rules' \
  -u :<YOUR API KEY> \
Response

200

400

{
  "ach_positive_pay_rules": [
    {
      "ach_company_id": "1234567890",
      "ach_positive_pay_rule_id": "appr_2iqaXhOkS89lL7apWzSx0lGWRdu",
      "amount": 100,
      "amount_condition": "equal",
      "bank_account_id": "bacc_2ipgDr97nxf9lfFkI8aopgnYX3M",
      "description": "example ACH Positive Pay rule"
    }
  ]
  "has_more": false,
}
Delete an ACH positive pay rule
DELETE

/ach-positive-pay-rules/<positive_pay_rule_id>

Deletes an ACH positive pay rule by ID.

Path Parameters
positive_pay_rule_id

string

Required

ID of the positive pay rule.

Request
curl -XDELETE 'https://api.column.com/ach-positive-pay-rules/<positive_pay_rule_id>' \
  -u :<YOUR API KEY> \
Response

200

400

{
}
Book transfer object

The book transfer object is the current state of a single book transfer initiated in Column. A book transfer is the movement of funds between two bank accounts under your platform, and once initiated, happen instantaneously 24/7. Read about more about book transfers here.

Object Parameters
allow_overdraft

boolean

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

amount

int64

Amount (in cents) of the funds that will be transferred between sender and receiver accounts.

e.g. $1.75 would be represented by 175

created_at

string

The timestamp at which the transfer request is created.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD

description

string

A description of the transfer visible in people's accounts.

id

string

The unique id of the object.

idempotency_key

string

The idempotency key specified in the book transfer.

receiver_account_number_id

string

ID of the account number that will receive the transfer.

receiver_bank_account_id

string

ID of the bank account that will receive the transfer.

sender_account_number_id

string

ID of the account number that is sending the transfer.

sender_bank_account_id

string

ID of the bank account that is sending the transfer.

status

string

The current status of the book transfer. Possible values: REJECTED, COMPLETED, HOLD, and CANCELED.

updated_at

string

The timestamp at which the book transfer was updated (typically a status update).

Book Transfer object
{
  "allow_overdraft": false,
  "amount": 50000,
  "created_at": "2022-03-02T22:44:35Z",
  "currency_code": "USD",
  "description": "For documents",
  "id": "book_25qiZnUKr2AP8Rb5Vs3PGzpcttC",
  "idempotency_key": "",
  "receiver_account_number_id": "acno_25FyF49P2SE4PJJOmfx6kYCzkeI",
  "receiver_bank_account_id": "bacc_25FyEyuKX3KlRAciUs3BzXag1RI",
  "sender_account_number_id": "acno_25nVQkqfCU6Okpn66QWi1xX9riD",
  "sender_bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "status": "COMPLETED",
  "updated_at": "2022-03-02T22:44:35Z"
}
Create a book transfer
POST

/transfers/book

A book transfer, is a transaction between between two Column accounts that you own.

They can happen instantly and can be sent 24 hours a day, 7 days a week. Both accounts need to under your platform, but don't need to be under the same entity.

Alternatively, you can send a book transfer in two steps, using the "hold" parameter and "clear" method. Book transfers in a "hold" state can be updated and canceled.

There is no reversal functionality for book transfers. Simply swap the sender_account_number_id and receiver_account_number_id and repeat the request.

Body Parameters
description

string

Optional

A description of the transfer visible in people's accounts.

amount

int64

Required

Amount (in cents) of the funds that will be transferred between sender and receiver accounts.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

sender_bank_account_id

string

Optional

ID of the bank account that is sending the transfer. If no sender_account_number_id is specified, the default account number on sender_bank_account_id is used.

sender_bank_account_id or sender_account_number_id is required

sender_account_number_id

string

Optional

ID of the account number that is sending the transfer.

If this is specified, the sender_bank_account_id does not need to be included.

sender_bank_account_id or sender_account_number_id is required

receiver_bank_account_id

string

Optional

ID of the bank account that will receive the transfer. If no receiver_account_number_id is specified, the default account number on receiver_bank_account_id is used.

receiver_bank_account_id or receiver_account_number_id is required

receiver_account_number_id

string

Optional

ID of the account number that will receive the transfer. If this is specified, the receiver_bank_account_id does not need to be included.

receiver_bank_account_id or receiver_account_number_id is required

allow_overdraft

boolean

Optional

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

hold

boolean

Optional

Creates a book transfer in a hold state. The transfer will not be completed until the clear API is called. Transfers in a hold state may be updated or canceled.

details

object

Optional

Transfer monitoring details

sender_name

string

Optional

Name of the sender

merchant_name

string

Optional

Name of the merchant for this transaction

merchant_category_code

string

Optional

Category code for the merchant for this transaction

authorization_method

string

Optional

Authorization method for this transaction

website

string

Optional

Website for this transaction

internal_transfer_type

string

Optional

Transfer type in non-column systems

statement_description

string

Optional

Line item on the customer statement for the transfer

fx_amount

integer

Optional

Foreign exchange amount for card transaction (in the smallest unit of the currency)

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

fx_currency

string

Optional

Foreign exchange currency for card transaction

address

object

Required

Addresses need to adhere to character validation, as addresses are used across multiple payment rails. Characters are validated according to the Fedwire character validation.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Optional

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Optional

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

Required

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

Request
curl 'https://api.column.com/transfers/book' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d amount=10000 \
  -d currency_code="USD" \
  -d sender_bank_account_id="<bank_account_id>" \
  -d receiver_bank_account_id="<bank_account_id>"
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:18:34.844Z",
  "updated_at": "2021-11-29T20:18:34.844Z",
  "idempotency_key": "string",
  "sender_bank_account_id": "string",
  "sender_account_number_id": "string",
  "receiver_bank_account_id": "string",
  "receiver_account_number_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true,
  "details": {}
}
List all book transfers
GET

/transfers/book

Retrieve all book transfers under your developer account. Filtered results can be retrieved with extra parameters in the query (sender_bank_account_id, receiver_bank_account_id, etc.).

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

sender_bank_account_id

string

Optional

Return results associated with this sender bank account.

receiver_bank_account_id

string

Optional

Return results associated with this receiver bank account.

status

string

Optional

Return results with this status.

Possible enum values:

REJECTED
COMPLETED
HOLD
CANCELED
Request
curl 'https://api.column.com/transfers/book' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "id": "string",
      "created_at": "2021-11-29T20:22:11.956Z",
      "updated_at": "2021-11-29T20:22:11.956Z",
      "idempotency_key": "string",
      "sender_bank_account_id": "string",
      "sender_account_number_id": "string",
      "receiver_bank_account_id": "string",
      "receiver_account_number_id": "string",
      "amount": int64,
      "currency_code": "string",
      "description": "string",
      "status": "NONE",
      "allow_overdraft": true
    }
  ],
  "has_more": true
}
Get a book transfer
GET

/transfers/book/<book_transfer_id>

Retrieve a single book transfer by its ID

Path Parameters
book_transfer_id

string

Required

ID of the book transfer you're looking up.

Request
curl 'https://api.column.com/transfers/book/<book_transfer_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:22:41.596Z",
  "updated_at": "2021-11-29T20:22:41.596Z",
  "idempotency_key": "string",
  "sender_bank_account_id": "string",
  "sender_account_number_id": "string",
  "receiver_bank_account_id": "string",
  "receiver_account_number_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true
}
Update a book transfer
PATCH

/transfers/book/<book_transfer_id>

Update a book transfer by its ID. Transfer must be in a "hold" state. Only the amount can be updated.

Path Parameters
book_transfer_id

string

Required

Body Parameters
amount

int64

Required

Amount (in cents) to update the hold to. Can be lower or higher than the original amount. This will not clear the hold.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

allow_overdraft

boolean

Optional

If true, will cause the hold to overdraft the available balance if the amount is greater than the available balance.

Request
curl 'https://api.column.com/transfers/book/<book_transfer_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -d amount=15000 \
  -d currency_code="USD"
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:22:41.596Z",
  "updated_at": "2021-11-29T20:22:41.596Z",
  "idempotency_key": "string",
  "sender_bank_account_id": "string",
  "sender_account_number_id": "string",
  "receiver_bank_account_id": "string",
  "receiver_account_number_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true
}
Cancel a book transfer
POST

/transfers/book/<book_transfer_id>/cancel

Cancel a book transfer hold by its ID. Transfer must be in a "hold" state.

Path Parameters
book_transfer_id

string

Required

Request
curl 'https://api.column.com/transfers/book/<book_transfer_id>/cancel' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:24:42.867Z",
  "updated_at": "2021-11-29T20:24:42.867Z",
  "idempotency_key": "string",
  "sender_bank_account_id": "string",
  "sender_account_number_id": "string",
  "receiver_bank_account_id": "string",
  "receiver_account_number_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true
}
Clear a book transfer
POST

/transfers/book/<book_transfer_id>/clear

Clear a book transfer by its ID. Transfer must be in a "hold" state. If the amount is specified, then that amount will be cleared, regardless of the amount of the hold. If no amount is specified, then the amount of the hold will be cleared.

Path Parameters
book_transfer_id

string

Required

Body Parameters
amount

int64

Optional

Amount (in cents) to clear the hold to. Can be lower or higher than the original amount. If no amount is specified, the hold will be cleared for the original amount on the transfer.

currency_code

string

Optional

The three-letter currency code defined in ISO 4217. e.g. USD

allow_overdraft

boolean

Optional

If true, will cause the clear to overdraft the available balance if the amount is greater than the available balance.

Request
curl 'https://api.column.com/transfers/book/<book_transfer_id>/clear' \
  -u :<YOUR API KEY> \
  -d amount=150000 \
  -d currency_code="USD"
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:24:42.867Z",
  "updated_at": "2021-11-29T20:24:42.867Z",
  "idempotency_key": "string",
  "sender_bank_account_id": "string",
  "sender_account_number_id": "string",
  "receiver_bank_account_id": "string",
  "receiver_account_number_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true
}
Wire transfer object

The wire transfer object represents the current state of a single wire transfer initiated by or received by Column. Wire transfers are used to send and receive money over Fedwire. The wire transfer object exposes all relevant information about the wire transfer to developers. Read about more about wire transfers here.

Object Parameters
account_number_id

string

ID of the account number that is sending/receiving the transfer.

allow_overdraft

bool

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

amount

integer

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175

bank_account_id

string

ID of the bank number that is sending/receiving the transfer.

beneficiary_account_number

string

The external account number to which the wire is being sent.

beneficiary_name

string

The name of the person who is receiving the wire.

business_function_code

string

The business function code specified in the wire transfer. Possible business function codes are BTR, CTP, CTR, DRC, or DRW.

completed_at

string

The timestamp when the wire was completed.

counterparty_id

string

ID of the counterparty that is receiving/sending the transfer

created_at

string

The timestamp when the wire was created.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD

description

string

A description of the transfer visible in people's accounts. This field contains "originator to beneficiary" information and will be transmitted to the RDFI. It is commonly visible in the beneficiary's statement.

fi_to_fi_information_line_<1-6>

string

Financial institution to financial institution information, most often used by a FI to explain the reason for a wire reversal. Column will populate this for outgoing reversals. There can be up to six separate parameters, one for each message line.

id

string

The unique id of the object.

idempotency_key

string

The idempotency key specified in the wire transfer.

imad

string

Stands for Input/Output Message Accountability Data. A unique number set by the originating bank given to each FedWire payment when using the Federal Reserve Bank Service and can be used to investigate and track wire transfers. IMAD will be populated asynchronously and will not be populated on the completed event. IMAD will also not be populated for on-us wire transfers.

initiated_at

string

The timestamp when the wire was initiated.

is_incoming

boolean

Indicates whether the wire transfer was incoming (true or outgoing false)

is_on_us

boolean

Indicates whether the wire transfer was between two bank accounts held at Column.

manual_review_at

string

The timestamp when the wire went into the manual review state.

omad

string

Stands for Input/Output Message Accountability Data. A unique number set by the Fed given to each FedWire payment when using the Federal Reserve Bank Service and can be used to investigate and track wire transfers. OMAD will be populated asynchronously and will not be populated on the completed event. OMAD will also not be populated for on-us wire transfers.

originator_account_number

string

The external account number from which the wire is originated.

originator_name

string

The name of the person or entity that is originating the wire.

pending_submission_at

string

The timestamp when the wire was marked PENDING_SUBMISSION.

previous_message_reference

string

The previous message identifier included in the raw wire message.

raw_beneficiary_address

string

The unstructured beneficiary address extracted from the raw wire message.

raw_originator_address

string

The unstructured originator address extracted from the raw wire message

receiver_di_name

string

The name of the person / entity that received the wire.

receiver_di_routing_number

string

The routing number of the bank that received the wire.

rejected_at

string

The timestamp when the wire was rejected.

reversal_pair_transfer_id

string

If the transfer is the original transfer of an wire reversal, this field is the unique ID of the reversal transfer. If the transfer is the reversal transfer of a wire reversal, this field is the unique ID of the original transfer. Please refer to Wire Reversals for more details.

sender_di_name

string

The name of the person / entity that sent the wire.

sender_di_routing_number

string

The routing number of the bank that sent the wire.

sender_reference

string

The sender reference field parsed out from the raw wire message.

status

string

The current status of the wire transfer. Possible statuses are INITIATED, COMPLETED, REJECTED, and MANUAL_REVIEW.

submitted_at

string

The timestamp when the wire was submitted.

subtype_code

string

The subtype code specified in the wire transfer.

type_code

string

The type code specified in the wire transfer.

updated_at

string

The timestamp when the wire was updated.

wire_drawdown_request_id

string

ID of the wire drawdown request if the wire is sent in response to a wire drawdown request.

ultimate_originator_counterparty_id

string

ID of the ultimate originating counterparty that sent the transfer in outgoing wire transfer. If present, this will replace the originator field in the outgoing wire message.

return_reason

string

Reason the original transfer was returned.:

invalid_beneficiary_account_number: the beneficiary account number is invalid
beneficiary_mismatch: beneficiary information in the wire does not match the corresponding information on the account
beneficiary_request: the beneficiary is refusing the wire
originator_request: the beneficiary is reversing the wire as per the sender's request
account_closed: the account has been closed
account_blocked: the account is blocked or frozen and cannot accept wires at this time
incorrect_amount: the amount of the transfer is incorrect or invalid
fraud: the transfer was fraudulent
missing_originator_data: the transfer couldn't be applied as some originator data was missing
missing_beneficiary_data: the transfer couldn't be applied as some beneficiary data was missing
compliance: the transfer couldn't be applied due to compliance restrictions
other: the transfer was returned for a reason other than the above
return_additional_info

string

Contains additional freeform text from the RDFI if provided (only populated for wire returns).

creditor_tax_id

string

A Tax Identification Number (TIN) or Employer Identification Number (EIN) of exactly 9 numeric characters for the creditor. This field is only required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177') for an outgoing wire transfer.

tax_record_period_type

string

The Tax Month in the tax remittance component. This field is only required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177') for an outgoing wire transfer. Possible values are MM01 (January), MM02 (February), MM03 (March), MM04 (April), MM05 (May), MM06 (June), MM07 (July), MM08 (August), MM09 (September), MM10 (October), MM11 (November) or MM12 (December).

tax_type_code

string

Tax Type Code of exactly 5 alphanumeric characters (capital letters and numbers). This field is only required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177') for an outgoing wire transfer. See IRS Website for more info.

tax_year

string

A Tax Year of exactly 4 numerical characters. This field is only required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177') for an outgoing wire transfer.

Wire Transfer Object
{
  "account_number_id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "allow_overdraft": false,
  "amount": 100000,
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "beneficiary_account_number": "256783259046169",
  "beneficiary_name": "Column account",
  "business_function_code": "CTR"
  "completed_at": "2022-03-02T00:05:54Z",
  "counterparty_id": "cpty_25QihOzMbXhGQVNHQmeIp6UJNnj",
  "created_at": "2022-03-02T00:05:54Z",
  "currency_code": "USD",
  "description": "incoming CTR wire transfer",
  "fi_to_fi_information_line_1": "",
  "fi_to_fi_information_line_2": "",
  "fi_to_fi_information_line_3": "",
  "fi_to_fi_information_line_4": "",
  "fi_to_fi_information_line_5": "",
  "fi_to_fi_information_line_6": "",
  "id": "wire_25o3LGGbxLjpabTm6zHquAM1ti2",
  "idempotency_key": "",
  "imad": "20220301CHASE001000001",
  "initiated_at": "2022-03-02T00:05:54Z",
  "is_incoming": true,
  "is_on_us": false,
  "manual_review_at": null,
  "omad": "20220301MMQFMC2U000001",
  "originator_account_number": "1234567890",
  "originator_name": "Chase account",
  "pending_submission_at": null,
  "previous_message_reference": "",
  "raw_beneficiary_address": "",
  "raw_originator_address": "",
  "receiver_di_name": "Column Bank",
  "receiver_di_routing_number": "091000019",
  "rejected_at": null,
  "reversal_pair_transfer_id": null,
  "sender_di_name": "TestBank",
  "sender_di_routing_number": "322271627",
  "sender_reference": "",
  "status": "COMPLETED",
  "submitted_at": null,
  "subtype_code": "00",
  "type_code": "10",
  "updated_at": "2022-03-02T00:05:54Z",
  "wire_drawdown_request_id": "",
  "return_reason": "fraud",
  "return_additional_info": "Raw text from the RDFI"
}
Create a wire transfer
POST

/transfers/wire

Create a wire transfer between a Column account and a counterparty.

Body Parameters
description

string

Optional

A description of the transfer visible in people's accounts. This field contains "originator to beneficiary" information and will be transmitted to the RDFI. It is commonly visible in the beneficiary's statement. Must adhere to Fedwire character validation.

amount

int64

Required

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

account_number_id

string

Optional

ID of the account number that is sending the transfer. If this is specified, the bank_account_id does not need to be included.

account_number_id or bank_account_id is required

bank_account_id

string

Optional

ID of the bank number that is sending the transfer. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required

counterparty_id

string

Required

ID of the counterparty that will receive the transfer

Note: A wire object must be attached to the counterparty. If it is not, this request will fail.

allow_overdraft

boolean

Optional

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

ultimate_originator_counterparty

object

Optional

Counterparty object to create an ultimate originator counterparty at the time of transfer creation. If present, this will replace the originator field in the outgoing wire message. Either ultimate_originator_counterparty or ultimate_originator_counterparty_id is required to set this up.

ultimate_originator_counterparty_id

string

Optional

ID of the ultimate originating counterparty that will sent the transfer. If present, this will replace the originator field in the outgoing wire message. Either ultimate_originator_counterparty or ultimate_originator_counterparty_id is required to set this up.

creditor_tax_id

string

Optional

A Tax Identification Number (TIN) or Employer Identification Number (EIN) of exactly 9 numeric characters (excluding '000000000' and '999999999') for the creditor. Required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177').

tax_record_period_type

string

Optional

The Tax Month in the tax remittance component. Required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177'). Possible values are MM01 (January), MM02 (February), MM03 (March), MM04 (April), MM05 (May), MM06 (June), MM07 (July), MM08 (August), MM09 (September), MM10 (October), MM11 (November) or MM12 (December).

tax_type_code

string

Optional

Tax Type Code of exactly 5 alphanumeric characters (capital letters and numbers). Required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177'). See IRS Website for more info.

tax_year

string

Optional

A Tax Year of exactly 4 numerical characters. Required when the counterparty routing number is one of the Treasury tax payment RTNs ('091036164' or '091036177').

Request
curl 'https://api.column.com/transfers/wire' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Example wire transfer" \
  -d amount=10000 \
  -d currency_code="USD" \
  -d bank_account_id="<bank_account_id>" \
  -d counterparty_id="<counterparty_id>"
Response

200

400

{
  "id": "wire_2DucXfsrbVzW4GsNMUmFum1eOeP",
  "created_at": "2021-11-29T20:40:19.916Z",
  "updated_at": "2021-11-29T20:40:19.916Z",
  "initiated_at": "2021-11-29T20:40:19.916Z",
  "pending_submission_at": "2021-11-29T20:40:19.916Z",
  "submitted_at": "2021-11-29T20:40:19.916Z",
  "completed_at": "2021-11-29T20:40:19.916Z",
  "rejected_at": "2021-11-29T20:40:19.916Z",
  "idempotency_key": "string",
  "bank_account_id": "string",
  "account_number_id": "string",
  "counterparty_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true,
  "platform_id": "string",
  "is_on_us": true,
  "is_incoming": true,
  "wire_drawdown_request_id":"",
}
List all wire transfers
GET

/transfers/wire

Retrieve all wire transfers under your platform

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

bank_account_id

string

Optional

Return results associated with this bank account.

counterparty_id

string

Optional

Return results associated with this counterparty.

status

string

Optional

Return results with this status.

Possible enum values:

NONE
INITIATED
PENDING_SUBMISSION
SUBMITTED
COMPLETED
REJECTED
MANUAL_REVIEW
is_incoming

boolean

Optional

Return transfers that is either incoming or outgoing.

Request
curl 'https://api.column.com/transfers/wire' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "id": "string",
      "created_at": "2021-11-29T20:43:16.326Z",
      "updated_at": "2021-11-29T20:43:16.326Z",
      "initiated_at": "2021-11-29T20:43:16.326Z",
      "pending_submission_at": "2021-11-29T20:43:16.326Z",
      "submitted_at": "2021-11-29T20:43:16.326Z",
      "completed_at": "2021-11-29T20:43:16.326Z",
      "rejected_at": "2021-11-29T20:43:16.326Z",
      "idempotency_key": "string",
      "bank_account_id": "string",
      "account_number_id": "string",
      "counterparty_id": "string",
      "amount": int64,
      "currency_code": "string",
      "description": "string",
      "status": "NONE",
      "allow_overdraft": true,
      "platform_id": "string",
      "is_on_us": true,
      "is_incoming": true, 
      "wire_drawdown_request_id":"",
    }
  ],
  "has_more": true
}
Get wire transfer
GET

/transfers/wire/<wire_transfer_id>

Retrieve a single wire transfer by its ID

Path Parameters
wire_transfer_id

string

Required

ID of the wire transfer you're looking up.

Query Parameters
expand

string

Optional

List of fields to be expanded (format: expand=field_1&expand=field_2&expand=field_3).

raw_message: raw message body (only available for ISO messages)
Request
curl 'https://api.column.com/transfers/wire/<wire_transfer_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T20:44:53.287Z",
  "updated_at": "2021-11-29T20:44:53.287Z",
  "initiated_at": "2021-11-29T20:44:53.287Z",
  "pending_submission_at": "2021-11-29T20:44:53.287Z",
  "submitted_at": "2021-11-29T20:44:53.287Z",
  "completed_at": "2021-11-29T20:44:53.287Z",
  "rejected_at": "2021-11-29T20:44:53.287Z",
  "idempotency_key": "string",
  "bank_account_id": "string",
  "account_number_id": "string",
  "counterparty_id": "string",
  "amount": int64,
  "currency_code": "string",
  "description": "string",
  "status": "NONE",
  "allow_overdraft": true,
  "platform_id": "string",
  "is_on_us": true,
  "is_incoming": true,
  "wire_drawdown_request_id":"",

}
Reverse an incoming wire transfer
POST

/transfers/wire/<wire_transfer_id>/reverse

Reverse an incoming wire transfer received in error. You can read more about Wire Reversals.

Path Parameters
wire_transfer_id

string

Required

ID of the original incoming wire transfer you intend to reverse.
Body Parameters
reason

string

Required

Reason for the reversal transfer. Must be one of the following:

invalid_beneficiary_account_number: the beneficiary account number is invalid
beneficiary_mismatch: beneficiary information in the wire does not match the corresponding information on the account
beneficiary_request: the beneficiary is refusing the wire
originator_request: the beneficiary is reversing the wire as per the sender's request
account_closed: the account has been closed
account_blocked: the account is blocked or frozen and cannot accept wires at this time
incorrect_amount: the amount of the transfer is incorrect or invalid
fraud: the transfer was fraudulent
missing_originator_data: the transfer couldn't be applied as some originator data was missing
missing_beneficiary_data: the transfer couldn't be applied as some beneficiary data was missing
compliance: the transfer couldn't be applied due to compliance restrictions
other: the transfer was returned for a reason other than the above
description

string

Optional

Description of the reversal transfer visible only in your platform. Maximum length: 255 characters.

Request
curl 'https://api.column.com/transfers/wire/<wire_transfer_id>/reverse' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d reason="invalid_beneficiary_account_number" \
  -d description="the beneficiary account number does not exist"
Response

200

400

{
    "id": "wire_2DucXfsrbVzW4GsNMUmFum1eOeP",
    "created_at": "2021-11-29T20:40:19.916Z",
    "updated_at": "2021-11-29T20:40:19.916Z",
    "initiated_at": "2021-11-29T20:40:19.916Z",
    "pending_submission_at": "2021-11-29T20:40:19.916Z",
    "submitted_at": "2021-11-29T20:40:19.916Z",
    "completed_at": "2021-11-29T20:40:19.916Z",
    "rejected_at": "2021-11-29T20:40:19.916Z",
    "reversal_pair_transfer_id": "wire_2DuchZzpgT8W49QUdepFAKTQMSH",
    "idempotency_key": "string",
    "bank_account_id": "string",
    "account_number_id": "string",
    "counterparty_id": "string",
    "amount": int64,
    "currency_code": "string",
    "description": "string",
    "status": "NONE",
    "allow_overdraft": true,
    "platform_id": "string",
    "is_on_us": false,
    "is_incoming": true,
    "wire_drawdown_request_id":"",
}
Wire drawdown object

The wire drawdown object represents the current state of a single wire drawdown received by Column. Wire drawdowns are used to request a customer send a wire to a verified counterparty.

Object Parameters
account_number_id

string

The Column account number id to which the wire drawdown request was made.

amount

int64

Amount (in cents) that will be transferred between originator and counterparty accounts if the wire drawdown is approved.

bank_account_id

string

Column bank account id to which the wire drawdown request was made.

beneficiary_account_number

string

The external account number to which funds will be sent if the wire drawdown request is approved.

beneficiary_name

string

The name of the person who will receive funds with via wire if the wire drawdown request is approved.

beneficiary_counterparty_id

string

The counterparty ID, which Column automatically creates, to which funds will be sent if the wire drawdown request is approved.

beneficiary_name

string

The beneficiary name to which funds will be sent if the wire drawdown request is approved.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD

id

string

The unique id of the wire drawdown request object.

imad

string

The IMAD included in the wire drawdown request. Stands for Input/Output Message Accountability Data. A unique number set by the originating bank given to each FedWire payment when using the Federal Reserve Bank Service and can be used to investigate and track wire transfers. IMAD will not be populated for on-us wire transfers.

is_incoming

boolean

Indicates whether the wire drawdown request is incoming. (true or outgoing false)

message_identifier

string

The message identifier supplied in the wire drawdown request. This is typically the same as the IMAD.

originator_account_number

string

The account number of the originator of the wire drawdown request. This is often different from the beneficiary account number.

originator_name

string

The name of the originator who sent the wire drawdown request. This is often different from the beneficiary name.

originator_to_beneficiary_information

string

Free form text where the originator may supply some additional information describing the wire drawdown request.

received_at

string

Date/time at which the wire drawdown request was received (UTC).

receiver_di_name

string

The name of the financial institution to which the wire drawdown request was sent.

receiver_di_routing_number

boolean

The routing number of the financial institution to which the wire drawdown request was sent.

sender_di_name

string

The name of the financial institution that sent the wire drawdown request.

sender_di_routing_number

string

The routing number of the financial institution that sent the wire drawdown request.

status

string

The status of the wire drawdown request. Possible statuses include received, initiated, sent, approved, denied, completed, and rejected.

supplementary_beneficiary_counterparty_id

string

In the case you need to supplement counterparty information to approve a drawdown, create a new counterparty and pass the resulting ID here. Routing number and account number of the original drawdown request must match.

wire_transfer_id

string

The wire transfer ID of the outgoing wire transfer should a wire drawdown request be approved.

Wire Drawdown Object
{
  "account_number_id": "acno_2N9g8VZKfCRXItzIV7bev39KlQ5",
  "amount": 100,
  "bank_account_id": "bacc_2N9g8VbA3n5NCh068GQwD5hrlS0",
  "beneficiary_account_number": "403943517509507",
  "beneficiary_counterparty_id": "cpty_2Jq2AyMFZhulLdrlBHcJw17SPGa",
  "beneficiary_name": "Yellen Cocktails, LLC",
  "currency_code": "USD",
  "id": "wdrw_2N9lWiJF2bGit9RGxOuWpAfrnKP",
  "imad": "20230317I1B7032R00000",
  "is_incoming": true,
  "message_identifier": "20230317I1B7032R00000",
  "originator_account_number": "",
  "originator_name": "",
  "originator_to_beneficiary_information": null,
  "received_at": "2023-03-17T19:06:52Z",
  "receiver_di_name": "Yellen Cocktails, LLC",
  "receiver_di_routing_number": "121145307",
  "sender_di_name": "WELLS FARGO SF",
  "sender_di_routing_number": "121000248",
  "status": "received",
  "supplementary_beneficiary_counterparty_id": "",
  "wire_transfer_id": ""
}
Get a wire drawdown request
GET

/transfers/wire/drawdown/<wire_drawdown_request_id>

Retrieves a single wire drawdown request by its ID.

Path Parameters
wire_drawdown_request_id

string

Required

ID of the wire drawdown request you're looking up.
Request
curl 'https://api.column.com/transfers/wire/drawdown/<wire_drawdown_request_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2N9g8VZKfCRXItzIV7bev39KlQ5",
  "amount": 100,
  "bank_account_id": "bacc_2N9g8VbA3n5NCh068GQwD5hrlS0",
  "beneficiary_account_number": "403943517509507",
  "beneficiary_counterparty_id": "cpty_2Jq2AyMFZhulLdrlBHcJw17SPGa",
  "beneficiary_name": "Yellen Cocktails, LLC",
  "currency_code": "USD",
  "id": "wdrw_2N9lWiJF2bGit9RGxOuWpAfrnKP",
  "imad": "20230317I1B7032R00000",
  "is_incoming": true,
  "message_identifier": "20230317I1B7032R00000",
  "originator_account_number": "",
  "originator_name": "",
  "originator_to_beneficiary_information": null,
  "received_at": "2023-03-17T19:06:52Z",
  "receiver_di_name": "Yellen Cocktails, LLC",
  "receiver_di_routing_number": "121145307",
  "sender_di_name": "WELLS FARGO SF",
  "sender_di_routing_number": "121000248",
  "status": "received",
  "supplementary_beneficiary_counterparty_id": "",
  "wire_transfer_id": ""
}
Approve a wire drawdown request
POST

/transfers/wire/drawdown/<wire_drawdown_request_id>/approve

Approves a single wire drawdown request by its ID. If approved, an outgoing wire is initiated using the information specified in the drawdown request.

Path Parameters
wire_drawdown_request_id

string

Required

ID of the wire drawdown request you're looking up.
Body Parameters
supplementary_beneficiary_counterparty_id

string

Optional

In the case you need to supplement counterparty information to approve a drawdown, create a new counterparty and pass the resulting ID here. Routing number and account number of the original drawdown request must match.

allow_overdraft

boolean

Optional

This field allows the drawdown wire payment to overdraft if there are not sufficient funds available in the account for the wire transfer.

Request
curl 'https://api.column.com/transfers/wire/drawdown/<wire_drawdown_request_id>/approve' \
  -X POST \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2N9g8VZKfCRXItzIV7bev39KlQ5",
  "amount": 100,
  "bank_account_id": "bacc_2N9g8VbA3n5NCh068GQwD5hrlS0",
  "beneficiary_account_number": "403943517509507",
  "beneficiary_counterparty_id": "cpty_2Jq2AyMFZhulLdrlBHcJw17SPGa",
  "beneficiary_name": "Yellen Cocktails, LLC",
  "currency_code": "USD",
  "id": "wdrw_2N9lWiJF2bGit9RGxOuWpAfrnKP",
  "imad": "20230317I1B7032R00000",
  "is_incoming": true,
  "message_identifier": "20230317I1B7032R00000",
  "originator_account_number": "",
  "originator_name": "",
  "originator_to_beneficiary_information": null,
  "received_at": "2023-03-17T19:06:52Z",
  "receiver_di_name": "Yellen Cocktails, LLC",
  "receiver_di_routing_number": "121145307",
  "sender_di_name": "WELLS FARGO SF",
  "sender_di_routing_number": "121000248",
  "status": "approved",
  "supplementary_beneficiary_counterparty_id": "",
  "wire_transfer_id": "wire_4K8jWiJF3bGit6RHmKuJpWnjpQN"
}
List all wire drawdown requests
GET

/transfers/wire/drawdown

Retrieve all wire drawdowns under your developer account.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

bank_account_id

string

Optional

Return results associated with this bank account.

account_number_id

string

Optional

Return results associated with this account number.

beneficiary_counterparty_id

string

Optional

Return results associated with this beneficiary counterparty.

status

string

Optional

Return results with this status.

Possible enum values:

received
approved
denied
completed
rejected
is_incoming

boolean

Optional

All wire drawdowns are incoming, and thus is_incoming will be true.

Request
curl 'https://api.column.com/transfers/wire/drawdown' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "account_number_id": "acno_2N9g8VZKfCRXItzIV7bev39KlQ5",
      "amount": 100,
      "bank_account_id": "bacc_2N9g8VbA3n5NCh068GQwD5hrlS0",
      "beneficiary_account_number": "403943517509507",
      "beneficiary_counterparty_id": "cpty_2Jq2AyMFZhulLdrlBHcJw17SPGa",
      "beneficiary_name": "Yellen Cocktails, LLC",
      "currency_code": "USD",
      "id": "wdrw_2N9lWiJF2bGit9RGxOuWpAfrnKP",
      "imad": "20230317I1B7032R00000",
      "is_incoming": true,
      "message_identifier": "20230317I1B7032R00000",
      "originator_account_number": "",
      "originator_name": "",
      "originator_to_beneficiary_information": null,
      "received_at": "2023-03-17T19:06:52Z",
      "receiver_di_name": "Yellen Cocktails, LLC",
      "receiver_di_routing_number": "121145307",
      "sender_di_name": "WELLS FARGO SF",
      "sender_di_routing_number": "121000248",
      "status": "received",
      "supplementary_beneficiary_counterparty_id": "",
      "wire_transfer_id": ""
    }
  ],
  "has_more": true
}
Create a wire drawdown request
POST

/transfers/wire/drawdown

Sends an outgoing wire drawdown to request funds from an external account.

Body Parameters
recipient_description

string

Required

A description sent to the external bank conveying information about the purpose of the drawdown (e.g. details of the payment, invoice numbers, identifiers). Must adhere to Fedwire character validation.

amount

int64

Required

Amount (in cents) to be requested.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

beneficiary_account_number_id

string

Optional

ID of the account number that will receive funds if the drawdown is approved. If this is specified, beneficiary_bank_account_id does not need to be included.

beneficiary_account_number_id or beneficiary_bank_account_id is required

beneficiary_bank_account_id

string

Optional

ID of the bank account that will receive funds if the drawdown is approved. If this is specified, beneficiary_account_number_id does not need to be included. The default account number on bank_account_id will be used.

beneficiary_account_number_id or beneficiary_bank_account_id is required

recipient_counterparty_id

string

Required

ID of the counterparty the drawdown request will be sent to and funds requested from.

Note: A wire object must be attached to the counterparty. If it is not, this request will fail.

Request
curl 'https://api.column.com/transfers/wire/drawdown' \
  -X POST \
  -u :<YOUR API KEY> \
  -d amount="15000" \
  -d currency_code="USD" \
  -d beneficiary_account_number_id="acct_..." \
  -d recipient_counterparty_id="cpty_..." \
  -d recipient_description="" \
Response

200

400

{
  "account_number_id": "acno_2VdcHCs6QSKE9MMQUlHUYEhmXD3",
  "amount": 1200,
  "bank_account_id": "bacc_2VdcHC0sougz5z7KKx1zxvBnEbd",
  "beneficiary_account_number": "1234567890",
  "beneficiary_counterparty_id": "cpty_2VddNPqm17UgAI0cq0dAJv7fQsd",
  "beneficiary_name": "Vandelay Industries",
  "beneficiary_reference": "M60WTZS6K32WAGWM",
  "currency_code": "USD",
  "description": "Invoice 21873 for import export services",
  "id": "wdrw_2hWshSjdN9XYhpWiaSGEfOJ03FE",
  "imad": "20240607MMQFMP2U000000",
  "is_incoming": false,
  "message_identifier": "20240607MMQFMP2U000000",
  "originator_account_number": "987654321",
  "originator_name": "HE Pennypacker",
  "originator_to_beneficiary_information": [
	"Invoice 21873 for import export",
	"services",
	"",
	""
  ],
  "receiver_di_name": "BANK OF MONEY",
  "receiver_di_routing_number": "111111111",
  "sender_di_name": "COLUMN NA",
  "sender_di_routing_number": "121145307",
  "sent_at": null,
  "status": "initiated"
}
Wire return request object

A wire return request object represents a request to return funds from a wire transfer. Each return request object can be either sent or received and must always be associated with an existing wire transfer.

Object Parameters
id

string

The unique id of the wire return request object.

original_transfer_id

string

ID of the original transfer that this return request is requesting to return.

status

string

The status of the wire return request. Possible statuses include initiated, scheduled, sent, manual_review, approved, rejected, and completed.

return_request_reason

string

The reason of the return request

return_request_response_reason

string

The reason of the response to the return request

created_at

string

The timestamp when the wire return request was created.

updated_at

string

The timestamp when the wire return request was updated.

manual_review_at

string

The timestamp when the wire return request went into the manual review state.

approved_at

string

The timestamp when the wire return request is approved.

rejected_at

string

The timestamp when the wire return request is rejected.

completed_at

string

The timestamp when the wire return request is completed.

scheduled_at

string

The timestamp when the wire return request is scheduled to be sent.

sent_at

string

The timestamp when the wire return request is sent.

Wire Return Request Object
{
    "approved_at": null,
    "completed_at": null,
    "created_at": "2025-08-22T16:04:50Z",
    "id": "wrrq_31vlV9qjCk2HCYiFZSFGaIIaCnK",
    "manual_review_at": null,
    "original_transfer_id": "wire_31vlUIYhA3levdxVr99YfhOiU1x",
    "rejected_at": "2025-08-22T16:04:54Z",
    "return_request_reason": "AC03: Wrong account number",
    "return_request_response_reason": "AC04: Account number has been closed",
    "scheduled_at": "2025-08-22T16:04:50Z",
    "sent_at": "2025-08-22T16:04:52Z",
    "status": "rejected",
    "updated_at": "2025-08-22T16:04:54Z"
}
Create a wire return request
POST

/transfers/wire/<wire_transfer_id>/return-request

Sends an outgoing wire return request to request the return of funds of a previously sent outgoing wire transfer.

Path Parameters
wire_transfer_id

string

Required

ID of the outgoing wire transfer that the return request is for

Body Parameters
return_request_reason

string

Required

The reason why the return is requested. Possible reasons are incorrect_beneficiary_account, incorrect_amount, requested_by_originator, duplicate, fraud, tech_failure, and payment_not_justified

additional_info

string

Optional

Additional information to be included in the returned request (maximum of 105 characters)

Request
curl 'https://api.column.com/transfers/wire/<wire_transfer_id>/return-request' \
  -X POST \
  -u :<YOUR API KEY> \
  -d return_request_reason="incorrect_beneficiary_account" \
Response

200

400

{
    "approved_at": null,
    "completed_at": null,
    "created_at": "2025-08-22T16:04:50Z",
    "id": "wrrq_31vlV9qjCk2HCYiFZSFGaIIaCnK",
    "manual_review_at": null,
    "original_transfer_id": "wire_31vlUIYhA3levdxVr99YfhOiU1x",
    "rejected_at": "2025-08-22T16:04:54Z",
    "return_request_reason": "AC03: Wrong account number",
    "return_request_response_reason": "AC04: Account number has been closed",
    "scheduled_at": "2025-08-22T16:04:50Z",
    "sent_at": "2025-08-22T16:04:52Z",
    "status": "rejected",
    "updated_at": "2025-08-22T16:04:54Z"
}
Get a wire return request
GET

/transfers/wire/return-requests/<wire_return_request_id>

Retrieves a single wire return request by its ID.

Path Parameters
wire_return_request_id

string

Required

ID of the wire return request you're looking up.
Request
curl 'https://api.column.com/transfers/wire/return-requests/<wire_return_request_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
    "approved_at": null,
    "completed_at": null,
    "created_at": "2025-08-22T16:04:50Z",
    "id": "wrrq_31vlV9qjCk2HCYiFZSFGaIIaCnK",
    "manual_review_at": null,
    "original_transfer_id": "wire_31vlUIYhA3levdxVr99YfhOiU1x",
    "rejected_at": "2025-08-22T16:04:54Z",
    "return_request_reason": "AC03: Wrong account number",
    "return_request_response_reason": "AC04: Account number has been closed",
    "scheduled_at": "2025-08-22T16:04:50Z",
    "sent_at": "2025-08-22T16:04:52Z",
    "status": "rejected",
    "updated_at": "2025-08-22T16:04:54Z"
}
List all wire return requests
GET

/transfers/wire/return-requests

Retrieve all wire returns under your developer account.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

original_transfer_id

string

Optional

Return results associated with this wire transfer.

status

string

Optional

Return results with this status.

Possible enum values:

initiated
scheduled
sent
manual_review
approved
rejected
completed
is_incoming

boolean

Optional

Return results that are incoming or outgoing.

Request
curl 'https://api.column.com/transfers/wire/return-requests' \
  -u :<YOUR API KEY>
Response

200

400

{
    "has_more": false,
    "requests": [
        {
            "approved_at": null,
            "completed_at": null,
            "created_at": "2025-08-22T16:04:50Z",
            "id": "wrrq_31vojwAL4cLiJAjAF9aKvAuSXeU",
            "manual_review_at": null,
            "original_transfer_id": "wire_31voktYfQcqD3BWXlOFjdJUQAOF",
            "rejected_at": "2025-08-22T16:04:54Z",
            "return_request_reason": "AC03: Wrong account number",
            "return_request_response_reason": "AC04: Account number has been closed",
            "scheduled_at": "2025-08-22T16:04:50Z",
            "sent_at": "2025-08-22T16:04:52Z",
            "status": "rejected",
            "updated_at": "2025-08-22T16:04:54Z"
        },
        {
            "approved_at": null,
            "completed_at": "2025-08-21T22:06:39Z",
            "created_at": "2025-08-21T21:23:11Z",
            "id": "wrrq_31vomDF2QHAd2VP7lR363Sb7iX8",
            "manual_review_at": null,
            "original_transfer_id": "wire_31vonUb92LGIBJAA0rv49QXcAxp",
            "rejected_at": null,
            "return_request_reason": "AC03: Wrong account number",
            "return_request_response_reason": "",
            "scheduled_at": "2025-08-21T21:23:11Z",
            "sent_at": "2025-08-21T21:23:12Z",
            "status": "completed",
            "updated_at": "2025-08-21T22:06:39Z"
        },
        {
            "approved_at": "2025-08-19T21:39:41Z",
            "completed_at": "2025-08-19T21:39:48Z",
            "created_at": "2025-08-19T21:35:03Z",
            "id": "wrrq_31vooPhYfHGWTXqhtCWNNacaRrS",
            "manual_review_at": "2025-08-19T21:35:03Z",
            "original_transfer_id": "wire_31vopZ3oVy7WsTvGBxJo0NfIDoA",
            "rejected_at": null,
            "return_request_reason": "AC02: Debtor account number invalid or missing",
            "return_request_response_reason": "",
            "scheduled_at": null,
            "sent_at": null,
            "status": "completed",
            "updated_at": "2025-08-19T21:39:48Z"
        }
    ]
}
Approve a wire return request
POST

/transfers/wire/return-requests/<wire_return_request_id>/approve

Approves a single wire return request by its ID. If approved, an outgoing wire is initiated using the information specified in the return request.

Path Parameters
wire_return_request_id

string

Required

ID of the wire return request you're looking up.
Request
curl 'https://api.column.com/transfers/wire/return/<wire_return_request_id>/approve' \
  -X POST \
  -u :<YOUR API KEY>
Response

200

400

{
    "approved_at": "2025-08-19T21:39:41Z",
    "completed_at": "2025-08-19T21:39:48Z",
    "created_at": "2025-08-19T21:35:03Z",
    "id": "wrrq_31vooPhYfHGWTXqhtCWNNacaRrS",
    "manual_review_at": "2025-08-19T21:35:03Z",
    "original_transfer_id": "wire_31vopZ3oVy7WsTvGBxJo0NfIDoA",
    "rejected_at": null,
    "return_request_reason": "AC02: Debtor account number invalid or missing",
    "return_request_response_reason": "",
    "scheduled_at": null,
    "sent_at": null,
    "status": "completed",
    "updated_at": "2025-08-19T21:39:48Z"
}
Reject a wire return request
POST

/transfers/wire/return-requests/<wire_return_request_id>/reject

Rejects a single wire return request by its ID. If rejected, a return response is sent to the requestor.

Path Parameters
wire_return_request_id

string

Required

ID of the wire return request you're looking up.
Body Parameters
reject_reason

string

Required

The reason why the return is rejected. Possible reasons are beneficiary_account_closed, non_sufficient_funds, funds_already_returned, rejected_by_beneficiary, legal_decision, and no_response_from_beneficiary

additional_info

string

Optional

Additional information to be included in the returned request response (maximum of 105 characters)

Request
curl 'https://api.column.com/transfers/wire/return/<wire_return_request_id>/approve' \
  -X POST \
  -u :<YOUR API KEY>
Response

200

400

{
    "approved_at": "2025-08-19T21:39:41Z",
    "completed_at": "2025-08-19T21:39:48Z",
    "created_at": "2025-08-19T21:35:03Z",
    "id": "wrrq_31vooPhYfHGWTXqhtCWNNacaRrS",
    "manual_review_at": "2025-08-19T21:35:03Z",
    "original_transfer_id": "wire_31vopZ3oVy7WsTvGBxJo0NfIDoA",
    "rejected_at": null,
    "return_request_reason": "AC02: Debtor account number invalid or missing",
    "return_request_response_reason": "",
    "scheduled_at": null,
    "sent_at": null,
    "status": "completed",
    "updated_at": "2025-08-19T21:39:48Z"
}
Foreign exchange rate sheet object

The foreign exchange rate sheet object includes FX rates for all foreign currencies that Column supports. This rate sheet is informational only and should be used to display FX rates to your customers. You can read about more about international wires and creating FX quotes here.

Object Parameters
data

array

List of FX rates for all supported currencies.

buy_currency_code

string

Buy currency. The three-letter currency code defined in ISO 4217. e.g. USD

rate

string

The FX rate used for currency exchange from sell_currency_code to buy_currency_code, including FX rate margin charged by your platform. Read more

rate_without_margin

string

The FX rate used for currency exchange from sell_currency_code to buy_currency_code, excluding FX rate margin charged by your platform. Read more

sell_currency_code

string

Sell currency. The three-letter currency code defined in ISO 4217. e.g. USD

updated_at

string

The timestamp at which the FX rate was last refreshed.

fx_rate_margin_bps

int

Foreign currency exchange margin charged by your platform to your customers in Basis Points (BPS). 1 bps equals 0.01%. Read more

supported_currencies

int

Number of supported currencies

Foreign Exchange Rate object
{
  "data": [
    {
      "buy_currency_code": "CNY",
      "rate": "7.181206726",
      "rate_without_margin": "7.188316832",
      "sell_currency_code": "USD",
      "updated_at": "2023-08-30T17:20:17Z"
    },
    {
      "buy_currency_code": "EUR",
      "rate": "0.902563814",
      "rate_without_margin": "0.903457442",
      "sell_currency_code": "USD",
      "updated_at": "2023-08-30T17:20:17Z"
    },
    {
      "buy_currency_code": "JPY",
      "rate": "144.045499505",
      "rate_without_margin": "144.188118812",
      "sell_currency_code": "USD",
      "updated_at": "2023-08-30T17:20:17Z"
    },
    ...
  ],
  "fx_rate_margin_bps": 10,
  "supported_currencies": 138
}
Get FX rate sheet
GET

/transfers/international-wire/fx-rate-sheet

Retrieve the FX rate sheet for all foreign currencies that Column supports.

Request
curl 'https://api.column.com/transfers/international-wire/fx-rate-sheet' \
  -u :<YOUR API KEY>
Response

200

400

  {
    "data": [
      {
        "buy_currency_code": "CNY",
        "rate": "7.181206726",
        "rate_without_margin": "7.188316832",
        "sell_currency_code": "USD",
        "updated_at": "2023-08-30T17:20:17Z"
      },
      {
        "buy_currency_code": "EUR",
        "rate": "0.902563814",
        "rate_without_margin": "0.903457442",
        "sell_currency_code": "USD",
        "updated_at": "2023-08-30T17:20:17Z"
      },
      {
        "buy_currency_code": "JPY",
        "rate": "144.045499505",
        "rate_without_margin": "144.188118812",
        "sell_currency_code": "USD",
        "updated_at": "2023-08-30T17:20:17Z"
      },
      ...
    ],
    "fx_rate_margin_bps": 10,
    "supported_currencies": 138
  }
Foreign exchange quote object

The Foreign Exchange Quote object represents the rate quote for an international wire transfer. Read about more about international wire transfers here.

Object Parameters
buy_amount

int64

Buy amount (in the smallest unit of the currency) of the quote.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

buy_currency_code

string

Buy currency. The three-letter currency code defined in ISO 4217. e.g. USD

created_at

string

The timestamp when the FX quote was created.

expired_at

string

If this quote has not been booked yet, this is the deadline to book it. If this quote has already been booked, this is the deadline to use it to initiate an outgoing transfer. It is set as 16:30 ET on its rate date after it is booked. If this quote is not booked or used for an outgoing transfer after this deadline, it will be automatically canceled.

id

string

The ID of the FX quote.

rate

string

The foreign exchange rate used for currency exchange from sell_currency to buy_currency.

rate_date

string

The deadline to use this quote to initiate outgoing transfers. Format: YYYY-MM-DD.

sell_amount

int64

Sell amount (in the smallest unit of the currency) of the quote.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

sell_currency_code

string

Sell currency. The three-letter currency code defined in ISO 4217. e.g. USD

status

string

The current status of the FX quote. Possible statuses are:

not_booked: the FX quote has been requested but not yet booked. If you want to use it for an outgoing transfer, it must be booked before expired_at.
booked: the FX quote has been booked. It can be used for an outgoing transfer before expired_at.
canceled: the FX quote has been canceled, and can no longer be used for an outgoing transfer.
used: the FX quote has been used for an outgoing transfer.
failed: the FX quote is failed to be booked.
updated_at

string

The timestamp when the FX quote was updated.

Foreign Exchange Quote Object
{
  "buy_amount": 100000,
  "buy_currency_code": "CNY",
  "created_at": "2022-09-29T19:16:58Z",
  "expired_at": "2022-09-29T19:31:28Z",
  "id": "fxqt_2FSINZ1O21ncdarR7GITr9kAgr6",
  "rate": "6.8546",
  "rate_date": "2022-09-29",
  "sell_amount": 14589,
  "sell_currency_code": "USD",
  "status": "not_booked",
  "updated_at": "2022-09-29T19:16:58.998Z"
}
Request a foreign exchange quote
POST

/transfers/international-wire/fx-rate

Request a foreign exchange quote to exchange USD to other currencies for international wire transfers. Quotes are not booked until they are used in transfer requests.

Body Parameters
book_directly

bool

Optional

By default (i.e., book_directly=false), we will query FX quotes only, and they are not booked until they are used to initiate outgoing transfers before they expire. However, if you need to initiate outgoing transfers after their expiration times (e.g., outgoing funds will not be available until next business day), you can book FX quotes directly by setting book_directly=true. Booked FX quotes will be valid for a few days, depending on their correspondent banks.

A FX quote should be booked only with the intention of completing a transfer. If you do not intend to use a booked FX quote, it should be canceled as soon as possible. You may incur costs associated with canceling booked FX quotes given FX rate fluctuations.

buy_amount

int64

Required

Buy amount (in the smallest unit of the currency) of the quote.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

buy_currency_code

string

Required

Buy currency. The three-letter currency code defined in ISO 4217. e.g. EUR

fx_fee_bps

int64

Optional

Foreign currency exchange margin charged by your platform to your customers in Basis Points (BPS) for this quote. If specified, this overrides your platform's default fee for FX conversion. Must be non-negative.

rate_date

string

Optional

Desired date for this FX quote. Format: YYYY-MM-DD. If buy_currency_code='CAD', max rate dates are one business day after the current dates. For any other currencies, max rate dates are two business days after the current dates. After 5pm EST will be considered the following business day for booking rate dates in the future.

Request
curl https://api.column.com/transfers/international-wire/fx-rate \
  -XPOST \
  -u :<YOUR API KEY> \
  -d buy_amount=100000 \
  -d buy_currency_code=CNY
Response

200

400

{
  "buy_amount": 100000,
  "buy_currency_code": "CNY",
  "created_at": "2022-09-29T19:16:58Z",
  "expired_at": "2022-09-29T19:31:28Z",
  "id": "fxqt_2FSINZ1O21ncdarR7GITr9kAgr6",
  "rate": "6.8546",
  "rate_date": "2022-09-29",
  "sell_amount": 14589,
  "sell_currency_code": "USD",
  "status": "not_booked",
  "updated_at": "2022-09-29T19:16:58.998Z"
}
Get a foreign exchange quote
GET

/transfers/international-wire/fx-rate/<fx_quote_id>

Retrieve a single foreign exchange quote by its ID

Path Parameters
fx_quote_id

string

Required

ID of the foreign exchange quote you're looking up.

Request
curl 'https://api.column.com/transfers/international-wire/fx-rate/fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e",
  "created_at": "2023-05-03T17:41:48Z",
  "updated_at": "2023-05-03T17:41:48Z",
  "rate": "6.8546",
  "rate_date": "2023-05-05",
  "expired_at": "2023-05-03T17:56:18Z",
  "sell_currency_code": "USD",
  "sell_amount": 14589,
  "buy_currency_code": "CNY",
  "buy_amount": 100000,
  "status": "used"
}
Book a foreign exchange quote
POST

/transfers/international-wire/fx-rate/<fx_quote_id>/book

Book a single foreign exchange quote by its ID. If the quote has already been booked before, it will be returned.

Warning

A FX quote should be booked only with the intention of completing a transfer. If you do not intend to use a booked FX quote, it should be canceled as soon as possible. You may incur costs associated with canceling booked FX quotes given FX rate fluctuations.

Path Parameters
fx_quote_id

string

Required

ID of the foreign exchange quote you're booking.

Request
curl 'https://api.column.com/transfers/international-wire/fx-rate/fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e/book' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e",
  "created_at": "2023-05-03T17:41:48Z",
  "updated_at": "2023-05-03T17:41:48Z",
  "rate": "6.8546",
  "rate_date": "2023-05-05",
  "expired_at": "2023-05-03T17:56:18Z",
  "sell_currency_code": "USD",
  "sell_amount": 14589,
  "buy_currency_code": "CNY",
  "buy_amount": 100000,
  "status": "booked"
}
Cancel a foreign exchange quote
POST

/transfers/international-wire/fx-rate/<fx_quote_id>/cancel

Cancel a single foreign exchange quote by its ID. If the quote has already been used by an outgoing transfer, it cannot be canceled. If the quote has already been canceled before, it will be returned.

Warning

If you do not intend to use a booked FX quote, it should be canceled as soon as possible. You may incur costs associated with canceling booked FX quotes given FX rate fluctuations.

Path Parameters
fx_quote_id

string

Required

ID of the foreign exchange quote you're canceling.

Request
curl 'https://api.column.com/transfers/international-wire/fx-rate/fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e/cancel' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "fxqt_2PIDTFK8uWYeTV1SD9ybNiWMx9e",
  "created_at": "2023-05-03T17:41:48Z",
  "updated_at": "2023-05-03T17:41:48Z",
  "rate": "6.8546",
  "rate_date": "2023-05-05",
  "expired_at": "2023-05-03T17:56:18Z",
  "sell_currency_code": "USD",
  "sell_amount": 14589,
  "buy_currency_code": "CNY",
  "buy_amount": 100000,
  "status": "canceled"
}
International wire transfer object

The international wire transfer object represents the current state of a single international wire transfer initiated by or received by Column. International wire transfers are used to send/receive money to/from outside of the United States via the Swift network. The international wire transfer object exposes all relevant information about the wire transfer to developers. Read about more about international wire transfers here.

Object Parameters
account_number_id

string

ID of the account number that is sending/receiving the transfer.

allow_overdraft

bool

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

amount

int64

Amount (in the smallest unit of the currency) of the funds that will be debited from the originator account for an outgoing transfer (including all fees), or credited to the beneficiary account for an incoming transfer (after deducting any fees).

e.g. $1.75 would be represented by 175. Read more.

bank_account_id

string

ID of the bank account that is sending/receiving the transfer.

beneficiary_account_number

string

The account number of the beneficiary.

beneficiary_address

object

The address of the beneficiary.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

beneficiary_fi

string

The Swift BIC code of the beneficiary's financial institution.

beneficiary_name

string

The name of the beneficiary.

cancellation_reason

string

The reason if the transfer is requested to be canceled (Read more).

cancellation_status

string

The status of cancellation request (Read more). Possible statuses are pending, accepted, and rejected.

charge_bearer

string

The charge bearer code. Can be DEBT, CRED, or SHAR. Read more.

charges

array of objects

List of fees charged by financial institutions involved in this transfer. These charges are inclusive of both the wire the wire return if applicable. Charges are only listed here if the intermediary and beneficiary banks are part of the SWIFT GPI tracking system.

amount

int64

Charge amount (in the smallest unit of the currency).

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

currency_code

string

Charge currency. The three-letter currency code defined in ISO 4217 (e.g. USD)

agent

string

The Swift BIC code of the financial institution that applied the charge. It may be empty as some financial institutions do not provide it.

column_fixed_fee

int64

The amount (in the smallest unit of currency_code) of fixed fee charged by Column for an outgoing transfer. This is not included in the charges field.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

completed_at

string

The timestamp when the international wire was completed.

counterparty_id

string

ID of the counterparty that is receiving/sending the transfer.

created_at

string

The timestamp when the international wire was created.

currency_code

string

Currency of amount. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

description

string

The description of the transfer visible only in your platform.

end_to_end_id

string

Unique ID to unambiguously identify the transaction. This ID is passed on, unchanged, throughout the entire end-to-end chain, and can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.

For example, an originator sent a transfer to pay an invoice. However, its amount is not enough to pay off the balance due to FX fluctuations, fees charged by intermediary banks. The originator may send another transfer with a different uetr, but the same end_to_end_id to link those two transfers.

Note: while uetr is globally unique for each transfer, end_to_end_id is unique only within originating banks (it may be only unique within certain time periods).

fx_quote_id

string

The ID of the foreign exchange quote.

fx_rate

string

The foreign exchange rate used for currency exchange of this transfer, including your platform FX rate margin markup. Read more

id

string

The ID of this international wire transfer.

idempotency_key

string

The idempotency key specified in the wire transfer.

initiated_at

string

The timestamp when the international wire was initiated.

instructed_amount

int64

Instructed amount (in the smallest unit of the currency) of the transfer. Read more.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

instructed_currency_code

string

Instructed currency. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

instruction_id

string

Unique ID assigned by the sender of this message.

instruction_to_beneficiary_fi

string

Further information for the beneficiary's financial institution.

intermediary_fis

array

The Swift BIC codes of intermediary financial institutions.

is_incoming

boolean

Indicates whether the wire transfer was incoming (true or outgoing false)

manual_review_at

string

The timestamp when the international wire went into the manual review state.

originator_account_number

string

The account number of the originator.

originator_address

object

The address of the originator.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

originator_fi

string

The Swift BIC code of the originator's financial institution.

originator_name

string

The name of the originator.

pending_submission_at

string

The timestamp when the international wire was pending for submission.

platform_fixed_fee

int64

The amount (in the smallest unit of the currency_code) of fixed fee charged by your platform for an outgoing transfer. This is not included in the charges field.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

platform_fx_fee

int64

The amount (in the smallest unit of the currency_code) of FX fee charged by your platform for an outgoing FX transfer. This is not included in the charges field.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

raw_message

string

Raw initial transfer message in the Swift MT103 or ISO 20022/MX pacs.008 format. Only populated if it is queried with expand=raw_message parameter.

remittance_info

object

Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an account's receivable system. We will support more structured information soon (e.g., tax, invoicer, invoicee, etc.). They will be sent in F70 in MT103 messages, or RmtInf in pacs.008.001.xx messages. More details. Must adhere to International Wire character validation .

general_info

string

General information for the beneficiary in an unstructured form. Maximum length: 140 characters.

beneficiary_reference

string

Reference for the beneficiary (e.g., invoice number) to reconcile this transfer with their internal records. Maximum length: 30 characters.

return_reason

string

The reason if this transfer is returned.

returned_amount

int64

The amount (in the smallest unit of the currency) if this transfer is returned. Read more.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

returned_at

string

The timestamp when the international wire was returned.

returned_currency_code

string

The currency if this transfer is returned. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

settled_amount

int64

Settlement amount (in the smallest unit of the currency) of the transfer. Read more.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

settled_currency_code

string

Settlement currency. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

settlement_date

string

The date (in ET time zone) when funds are sent to the beneficiary bank for an outgoing transfer, or received from the originator bank for an incoming transfer. Format: YYYY-MM-DD.

status

string

The current status of the international wire transfer. This internal status is different from the tracking status of tracking object (Read more). Possible statuses are initiated, manual_review,pending_submission, submitted, completed,pending_return and returned.

submitted_at

string

The timestamp when the international wire was submitted to the Swift network.

uetr

string

Universally unique ID to provide an end-to-end reference for this transfer. Format: UUID v4.

ultimate_beneficiary_address

object

The address of the ultimate beneficiary to which this transfer is due.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

ultimate_beneficiary_name

string

The name of the ultimate beneficiary to which this transfer is due.

ultimate_originator_address

object

The address of the ultimate party that owes an amount to the (ultimate) beneficiary.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, this field is mandatory and only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code. The following postal code validations apply. CN: ^\d6$, DE: ^\d5$, FR: ^\d5$, GB: ^[A-Z]{1,2}d[A-Z0-9]? ?d[A-Z]{2}$, JP: ^\d3-\d4$, US: ^\d5(?:-\d4)?$

country_code

string

ISO 3166-1 Alpha-2 Country Code (e.g., US, FR, UK, DE, ...).

ultimate_originator_name

string

The name of the ultimate party that owes an amount to the (ultimate) beneficiary.

updated_at

string

The timestamp when the international wire was updated.

International Wire Transfer Object
{
  "account_number_id": "acno_2F37RhDUnWtB4GD9JXQEDYu7YAY",
  "allow_overdraft": false,
  "amount": 17965,
  "bank_account_id": "bacc_2F37RbG3NZAr7Yn2d1i5hITz9O4",
  "beneficiary_account_number": "1234567890",
  "beneficiary_address": {
    "city": "London",
    "country_code": "GB",
    "line_1": "123 Threadneedle Street",
    "line_2": "",
    "postal_code": "EC2R 8AH",
    "state": "LND"
  },
  "beneficiary_fi": "BKENGB20",
  "beneficiary_name": "Bob Trimble",
  "charge_bearer": "SHAR",
  "charges": [
    {
      "amount": 500,
      "currency_code": "USD",
      "agent": "CLNOUS66"
    },
    {
      "amount": 500,
      "currency_code": "CNY",
      "agent": "CHASGBGLT"
    }
  ],
  "completed_at": null,
  "counterparty_id": "cpty_2ESSJPnpof38GraQR5C6EnfFGKw",
  "created_at": "2022-09-20T21:55:31Z",
  "currency_code": "USD",
  "description": "Swift transfer with CNY",
  "end_to_end_id": "",
  "fx_quote_id": "fxqt_2F3BY6XCpKQUy5cGCqPgLf3Kit7",
  "fx_rate": "6.872100000",
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "idempotency_key": null,
  "initiated_at": "2022-09-20T21:55:31Z",
  "instructed_amount": 123456,
  "instructed_currency_code": "CNY",
  "instruction_id": "XF7MBKI09TUNZXIL",
  "instruction_to_beneficiary_fi": "please contact with the beneficiary before releasing the funds",
  "is_incoming": false,
  "manual_review_at": null,
  "originator_account_number": "366763686659680",
  "originator_address": {
    "city": "San Francisco",
    "country_code": "US",
    "line_1": "12345 Mission St.",
    "line_2": "",
    "postal_code": "94016",
    "state": "CA"
  },
  "originator_fi": "CLNOUS66",
  "originator_name": "Alice Biden",
  "pending_submission_at": "2022-09-20T21:55:32Z",
  "raw_message": null,
  "remittance_info": {
    "general_info": "downpayment for mortgage ID 123546"
  },
  "return_reason": null,
  "returned_amount": null,
  "returned_at": null,
  "returned_currency_code": null,
  "settled_amount": 123456,
  "settled_currency_code": "CNY",
  "settlement_date": "2022-09-20",
  "status": "submitted",
  "submitted_at": "2022-09-20T21:59:16Z",
  "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
  "ultimate_beneficiary_address": null,
  "ultimate_beneficiary_name": "",
  "ultimate_originator_address": null,
  "ultimate_originator_name": "",
  "updated_at": "2022-09-20T22:09:18Z"
}
Create an international wire transfer
POST

/transfers/international-wire

Create an international wire transfer between a Column account and a counterparty. Transfer status can be tracked via the Tracking API.

Body Parameters
account_number_id

string

Optional

ID of the account number that is sending the transfer. If this is specified, the bank_account_id does not need to be included.

account_number_id or bank_account_id is required

allow_overdraft

boolean

Optional

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

amount

int64

Required

Amount (in the smallest unit of the currency) of the funds that will be transferred between originator and counterparty accounts.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

bank_account_id

string

Optional

ID of the bank account that is sending the transfer. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required

charge_bearer

string

Optional

The charge bearer code. Can be SHAR (default) DEBT, or CRED. Read more.

counterparty_id

string

Required

ID of the counterparty that will receive the transfer

Note: A wire object must be attached to the counterparty. If it is not, this request will fail.

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. EUR. If USD is specified as the currency_code we will discard any provided fx_quote_id and send the transfer in USD.

description

string

Optional

A description of the transfer visible only in your platform. Maximum length: 255 characters.

fx_quote_id

string

Optional

ID of the foreign exchange quote returned by FX Quote API. If it is not specified, we will automatically book a FX quote for this transfer if the currency is not USD.

intermediary_bank

string

Optional

BIC of the preferred intermediary for the beneficiary bank. This is typically documented in the settlement instructions for the beneficiary bank.

Note: we use the routing table from Swift to decide the optimal routes to beneficiary banks if this parameter is not set. If you set an incorrect intermediary bank that has no routing information to the beneficiary bank, your transfer request will be returned. So please only set this parameter at your risk. For non-USD wires, we HIGHLY recommend NOT setting a US bank in this field unless you are absolutely sure of the routing instructions. This field does NOT determine where FX conversion occurs, as Column handles the FX conversion internally before routing to the intermediary bank.

message_to_beneficiary_bank

string

Optional

Further information for the beneficiary's financial institution, which is sent in F72 in MT103 messages, or InstrForCdtrAgt in pacs.008.001.xx messages. Maximum length: 140 characters. Must adhere to International Wire character validation .

remittance_info

object

Optional

Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an account's receivable system. We will support more structured information soon (e.g., tax, invoicer, invoicee, etc.). They will be sent in F70 in MT103 messages, or RmtInf in pacs.008.001.xx messages. More details. Must adhere to International Wire character validation .

general_info

string

Optional

General information for the beneficiary in an unstructured form. Maximum length: 140 characters.

beneficiary_reference

string

Optional

Reference for the beneficiary (e.g., invoice number) to reconcile this transfer with their internal records. Maximum length: 30 characters.

purpose_code

string

Optional

Purpose code of this transfer. Maximum length: 35 characters. More details.

Request
curl https://api.column.com/transfers/international-wire \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Swift transfer with CNY" \
  -d message_to_beneficiary_bank="please contact with the beneficiary before releasing the funds" \
  -d "remittance_info[general_info]"="downpayment for mortgage ID 123546" \
  -d amount=123456 \
  -d currency_code="CNY" \
  -d bank_account_id=bacc_2F37RbG3NZAr7Yn2d1i5hITz9O4 \
  -d counterparty_id=cpty_2ESSJPnpof38GraQR5C6EnfFGKw
Response

200

400

{
  "account_number_id": "acno_2F37RhDUnWtB4GD9JXQEDYu7YAY",
  "allow_overdraft": false,
  "amount": 17965,
  "bank_account_id": "bacc_2F37RbG3NZAr7Yn2d1i5hITz9O4",
  "beneficiary_account_number": "1234567890",
  "beneficiary_address": {
    "city": "London",
    "country_code": "GB",
    "line_1": "123 Threadneedle Street",
    "line_2": "",
    "postal_code": "EC2R 8AH",
    "state": "LND"
  },
  "beneficiary_fi": "BKENGB20",
  "beneficiary_name": "Bob Trimble",
  "charge_bearer": "SHAR",
  "charges": [
    {
      "amount": 500,
      "currency_code": "USD",
      "agent": "CLNOUS66"
    },
    {
      "amount": 500,
      "currency_code": "CNY",
      "agent": "CHASGBGLT"
    }
  ],
  "completed_at": null,
  "counterparty_id": "cpty_2ESSJPnpof38GraQR5C6EnfFGKw",
  "created_at": "2022-09-20T21:55:31Z",
  "currency_code": "USD",
  "description": "Swift transfer with CNY",
  "end_to_end_id": "",
  "fx_quote_id": "fxqt_2F3BY6XCpKQUy5cGCqPgLf3Kit7",
  "fx_rate": "6.872100000",
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "idempotency_key": null,
  "initiated_at": "2022-09-20T21:55:31Z",
  "instructed_amount": 123456,
  "instructed_currency_code": "CNY",
  "instruction_id": "XF7MBKI09TUNZXIL",
  "instruction_to_beneficiary_fi": "please contact with the beneficiary before releasing the funds",
  "is_incoming": false,
  "manual_review_at": null,
  "originator_account_number": "366763686659680",
  "originator_address": {
    "city": "San Francisco",
    "country_code": "US",
    "line_1": "12345 Mission St.",
    "line_2": "",
    "postal_code": "94016",
    "state": "CA"
  },
  "originator_fi": "CLNOUS66",
  "originator_name": "Alice Biden",
  "pending_submission_at": "2022-09-20T21:55:32Z",
  "raw_message": null,
  "remittance_info": {
    "general_info": "downpayment for mortgage ID 123546"
  },
  "return_reason": null,
  "returned_amount": null,
  "returned_at": null,
  "returned_currency_code": null,
  "settled_amount": 123456,
  "settled_currency_code": "CNY",
  "settlement_date": "2022-09-20",
  "status": "submitted",
  "submitted_at": "2022-09-20T21:59:16Z",
  "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
  "ultimate_beneficiary_address": null,
  "ultimate_beneficiary_name": "",
  "ultimate_originator_address": null,
  "ultimate_originator_name": "",
  "updated_at": "2022-09-20T22:09:18Z"
}
Get international wire transfer
GET

/transfers/international-wire/<swift_transfer_id>

Retrieve a single international wire transfer by its ID

Path Parameters
swift_transfer_id

string

Required

ID of the Swift transfer you're looking up.

Query Parameters
expand

string

Optional

List of fields to be expanded (format: expand=field_1&expand=field_2&expand=field_3).

raw_message: raw initial transfer message in MT103 or ISO 20022/MX pacs.008 format
Request
curl 'https://api.column.com/transfers/international-wire/swft_2F3BYA9aMdHag8iUtsDE8ji0KOK?expand=raw_message' \
  -u :<YOUR API KEY>
Response

200

400

{
  "account_number_id": "acno_2F37RhDUnWtB4GD9JXQEDYu7YAY",
  "allow_overdraft": false,
  "amount": 17965,
  "bank_account_id": "bacc_2F37RbG3NZAr7Yn2d1i5hITz9O4",
  "beneficiary_account_number": "1234567890",
  "beneficiary_address": {
    "city": "London",
    "country_code": "GB",
    "line_1": "123 Threadneedle Street",
    "line_2": "",
    "postal_code": "EC2R 8AH",
    "state": "LND"
  },
  "beneficiary_fi": "BKENGB20",
  "beneficiary_name": "Bob Trimble",
  "charge_bearer": "SHAR",
  "charges": [
    {
      "amount": 500,
      "currency_code": "USD",
      "agent": "CLNOUS66"
    },
    {
      "amount": 500,
      "currency_code": "CNY",
      "agent": "CHASGBGLT"
    }
  ],
  "completed_at": null,
  "counterparty_id": "cpty_2ESSJPnpof38GraQR5C6EnfFGKw",
  "created_at": "2022-09-20T21:55:31Z",
  "currency_code": "USD",
  "description": "Swift transfer with CNY",
  "end_to_end_id": "",
  "fx_quote_id": "fxqt_2F3BY6XCpKQUy5cGCqPgLf3Kit7",
  "fx_rate": "6.872100000",
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "idempotency_key": null,
  "initiated_at": "2022-09-20T21:55:31Z",
  "instructed_amount": 123456,
  "instructed_currency_code": "CNY",
  "instruction_id": "XF7MBKI09TUNZXIL",
  "instruction_to_beneficiary_fi": "please contact with the beneficiary before releasing the funds",
  "is_incoming": false,
  "manual_review_at": null,
  "originator_account_number": "366763686659680",
  "originator_address": {
    "city": "San Francisco",
    "country_code": "US",
    "line_1": "12345 Mission St.",
    "line_2": "",
    "postal_code": "94016",
    "state": "CA"
  },
  "originator_fi": "CLNOUS66",
  "originator_name": "Alice Biden",
  "pending_submission_at": "2022-09-20T21:55:32Z",
  "raw_message": null,
  "remittance_info": {
    "general_info": "downpayment for mortgage ID 123546"
  },
  "return_reason": null,
  "returned_amount": null,
  "returned_at": null,
  "returned_currency_code": null,
  "settled_amount": 123456,
  "settled_currency_code": "CNY",
  "settlement_date": "2022-09-20",
  "status": "submitted",
  "submitted_at": "2022-09-20T21:59:16Z",
  "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
  "ultimate_beneficiary_address": null,
  "ultimate_beneficiary_name": "",
  "ultimate_originator_address": null,
  "ultimate_originator_name": "",
  "updated_at": "2022-09-20T22:09:18Z"
}
List all international wire transfers
GET

/transfers/international-wire

Retrieve all international wire transfers under your platform

Query Parameters
bank_account_id

string

Optional

Return results associated with this bank account.

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/transfers/international-wire' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "account_number_id": "acno_2F37RhDUnWtB4GD9JXQEDYu7YAY",
      "allow_overdraft": false,
      "amount": 17965,
      "bank_account_id": "bacc_2F37RbG3NZAr7Yn2d1i5hITz9O4",
      "beneficiary_account_number": "1234567890",
      "beneficiary_address": {
        "city": "London",
        "country_code": "GB",
        "line_1": "123 Threadneedle Street",
        "line_2": "",
        "postal_code": "EC2R 8AH",
        "state": "LND"
      },
      "beneficiary_fi": "BKENGB20",
      "beneficiary_name": "Bob Trimble",
      "charge_bearer": "SHAR",
      "charges": [
        {
          "amount": 500,
          "currency_code": "USD",
          "agent": "CLNOUS66"
        },
        {
          "amount": 500,
          "currency_code": "CNY",
          "agent": "CHASGBGLT"
        }
      ],
      "completed_at": null,
      "counterparty_id": "cpty_2ESSJPnpof38GraQR5C6EnfFGKw",
      "created_at": "2022-09-20T21:55:31Z",
      "currency_code": "USD",
      "description": "Swift transfer with CNY",
      "end_to_end_id": "",
      "fx_quote_id": "fxqt_2F3BY6XCpKQUy5cGCqPgLf3Kit7",
      "fx_rate": "6.872100000",
      "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
      "idempotency_key": null,
      "initiated_at": "2022-09-20T21:55:31Z",
      "instructed_amount": 123456,
      "instructed_currency_code": "CNY",
      "instruction_id": "XF7MBKI09TUNZXIL",
      "instruction_to_beneficiary_fi": "please contact with the beneficiary before releasing the funds",
      "is_incoming": false,
      "manual_review_at": null,
      "originator_account_number": "366763686659680",
      "originator_address": {
        "city": "San Francisco",
        "country_code": "US",
        "line_1": "12345 Mission St.",
        "line_2": "",
        "postal_code": "94016",
        "state": "CA"
      },
      "originator_fi": "CLNOUS66",
      "originator_name": "Alice Biden",
      "pending_submission_at": "2022-09-20T21:55:32Z",
      "raw_message": null,
      "remittance_info": {
        "general_info": "downpayment for mortgage ID 123546"
      },
      "return_reason": null,
      "returned_amount": null,
      "returned_at": null,
      "returned_currency_code": null,
      "settled_amount": 123456,
      "settled_currency_code": "CNY",
      "settlement_date": "2022-09-20",
      "status": "submitted",
      "submitted_at": "2022-09-20T21:59:16Z",
      "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
      "ultimate_beneficiary_address": null,
      "ultimate_beneficiary_name": "",
      "ultimate_originator_address": null,
      "ultimate_originator_name": "",
      "updated_at": "2022-09-20T22:09:18Z"
    }
  ],
  "has_more": true
}
Return an incoming international wire
POST

/transfers/international-wire/<swift_transfer_id>/return

Return an incoming international wire transfer to the originator. Return status can be tracked via the Tracking API.

Path Parameters
swift_transfer_id

string

Required

ID of the original incoming international wire transfer you intend to return.
Body Parameters
return_reason

string

Required

Reason for the return. Must be one of the following:

incorrect_beneficiary_account: the beneficiary account number is incorrect
beneficiary_account_blocked: the beneficiary account is blocked
incorrect_amount: transfer amount is not the same as expected by the beneficiary
beneficiary_mismatch: beneficiary information in the wire does not match the corresponding information on the account
refused_by_beneficiary: the beneficiary refuses to accept this transfer
cancellation_requested: the cancellation request from the originator is approved
fraud: the transfer is a fraud
compliance_rejected: the transfer did not pass compliance check
message_to_originator_bank

string

Optional

Additional information to the originator bank

Request
curl 'https://api.column.com/transfers/international-wire/<swift_transfer_id>/return' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d return_reason="incorrect_beneficiary_account" \
  -d message_to_originator_bank="the beneficiary account number does not exist"
Response

200

400

{
  "id": "swft_2IYWtUEUhEhSNXOEPfjzHAxaCzw",
  "idempotency_key": null,
  "bank_account_id": "bacc_2IYWtTssuLNF4DNUoEPUlXmv9iq",
  "account_number_id": "acno_2IYWtWEgx9HtronSv2F5adAzKqS",
  "counterparty_id": "cpty_2IYWtRzthJQiW8SyXcdGWPdqDAJ",
  "status": "pending_return",
  "is_incoming": true,
  "allow_overdraft": false,
  "description": null,
  "fx_quote_id": "",
  "return_reason": "incorrect_beneficiary_account",
  "amount": 2918,
  "currency_code": "USD",
  "instructed_amount": 20000,
  "instructed_currency_code": "CNY",
  "settled_amount": 2918,
  "settled_currency_code": "USD",
  "settlement_date": "2022-12-06",
  "returned_amount": 2918,
  "returned_currency_code": "USD",
  "created_at": "2022-12-06T20:40:12Z",
  "updated_at": "2022-12-06T12:40:11.719-08:00",
  "initiated_at": "2022-12-06T20:40:12Z",
  "pending_submission_at": null,
  "submitted_at": null,
  "completed_at": "2022-12-06T20:40:12Z",
  "returned_at": null,
  "manual_review_at": null,
  "end_to_end_id": null,
  "uetr": "6a4796b7-a97e-43f6-afa1-d98b2ab90be3",
  "fx_rate": "0.145887433",
  "charge_bearer": "CRED",
  "charges": [
    {
      "amount": 1000,
      "currency_code": "USD",
      "agent": ""
    }
  ],
  "originator_name": "John Britain",
  "originator_address": {
    "line_1": "96 Lairg Road",
    "line_2": "",
    "city": "New Winton",
    "state": "",
    "postal_code": "EH33 5ZN",
    "country_code": "GB"
  },
  "originator_account_number": "GB29NWBK60161331926819",
  "originator_fi": "BKENGB22",
  "ultimate_originator_name": "",
  "ultimate_originator_address": null,
  "beneficiary_name": "Alice Milton",
  "beneficiary_address": {
    "line_1": "1 Mission St",
    "line_2": "Apt 202",
    "city": "San Francisco",
    "state": "CA",
    "postal_code": "94110",
    "country_code": "US"
  },
  "beneficiary_account_number": "485989263105726",
  "beneficiary_fi": "CLNOUS66",
  "instruction_id": "XF7MBKI09TUNZXIL",
  "instruction_to_beneficiary_fi": "POP/tax payment",
  "ultimate_beneficiary_name": "",
  "ultimate_beneficiary_address": null,
  "remittance_info": { "general_info": "payment for invoice ABC-123" },
  "raw_message": null
}
Cancel an outgoing international wire
POST

/transfers/international-wire/<swift_transfer_id>/cancel

Send a cancellation request to recall funds from the beneficiary for an outgoing international wire transfer. The beneficiary may approve or reject the cancellation request. Cancellation status can be tracked via the Tracking API.

Path Parameters
swift_transfer_id

string

Required

ID of the original outgoing international wire transfer you intend to cancel.
Body Parameters
cancellation_reason

string

Required

Reason for the cancellation. Must be one of the following:

incorrect_amount: the transfer amount is incorrect
incorrect_currency: the transfer currency is incorrect
duplicate: the transfer was sent multiple times by mistake
fraud: the transfer is a fraud
tech_failure: the transfer was sent by mistake due to technical failures
payment_not_justified: the transfer is missing some critical information required to process it successfully
requested_by_originator: any other reason requested by the originator
Request
curl 'https://api.column.com/transfers/international-wire/<swift_transfer_id>/cancel' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d cancellation_reason="duplicate"
Response

200

400

{
  "account_number_id": "acno_2IYWtWEgx9HtronSv2F5adAzKqS",
  "allow_overdraft": false,
  "amount": 553,
  "bank_account_id": "bacc_2IYWtTssuLNF4DNUoEPUlXmv9iq",
  "beneficiary_account_number": "485989263105726",
  "beneficiary_address": {
    "city": "London",
    "country_code": "GB",
    "line_1": "123 Threadneedle Street",
    "line_2": "",
    "postal_code": "EC2R 8AH",
    "state": "LND"
  },
  "beneficiary_fi": "BKENGB20",
  "beneficiary_name": "Bob Trimble",
  "cancellation_reason": "duplicate",
  "cancellation_status": "pending",
  "charge_bearer": "DEBT",
  "charges": null,
  "column_fixed_fee": 0,
  "completed_at": "2023-08-22T06:52:40Z",
  "counterparty_id": "cpty_2ESSJPnpof38GraQR5C6EnfFGKw",
  "created_at": "2023-08-21T21:45:48Z",
  "currency_code": "USD",
  "description": "test cancellation of outgoing transfer",
  "end_to_end_id": null,
  "fx_quote_id": "fxqt_2F3BY6XCpKQUy5cGCqPgLf3Kit7",
  "fx_rate": "0.904159132",
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "idempotency_key": null,
  "initiated_at": "2023-08-21T21:45:48Z",
  "instructed_amount": 500,
  "instructed_currency_code": "EUR",
  "instruction_id": "TQT1n61SqYWCjhTL",
  "instruction_to_beneficiary_fi": "",
  "intermediary_fis": ["CHASUS33FXS", "CHASDEFX", "BREXPLPW"],
  "is_incoming": false,
  "manual_review_at": null,
  "originator_account_number": "366763686659680",
  "originator_address": {
    "city": "San Francisco",
    "country_code": "US",
    "line_1": "12345 Mission St.",
    "line_2": "",
    "postal_code": "94016",
    "state": "CA"
  },
  "originator_fi": "CLNOUS66",
  "originator_name": "Column NA",
  "pending_submission_at": "2023-08-22T04:00:39Z",
  "platform_fixed_fee": 0,
  "platform_fx_fee": 0,
  "raw_message": null,
  "remittance_info": {
    "beneficiary_reference": "",
    "general_info": "invoice NO. 123456"
  },
  "return_reason": null,
  "returned_amount": null,
  "returned_at": null,
  "returned_currency_code": null,
  "settled_amount": 500,
  "settled_currency_code": "EUR",
  "settlement_date": "2023-08-22",
  "status": "completed",
  "submitted_at": "2023-08-22T04:00:40Z",
  "uetr": "dbfefd8f-0156-4c47-830c-71d4eb1d4226",
  "ultimate_beneficiary_address": null,
  "ultimate_beneficiary_name": "",
  "ultimate_originator_address": null,
  "ultimate_originator_name": "",
  "updated_at": "2023-08-22T17:07:08.383Z"
}
International wire tracking object
Read more.
Object Parameters
cancellation_reason

string

The reason if the transfer is requested to be canceled. Read more.

cancellation_status

string

The latest status of cancellation request (Read more). Can be one of the following:

pending: the beneficiary bank is still processing the cancellation request.
accepted: the beneficiary bank has accepted the cancellation request. Funds have been returned, or will be returned shortly.
rejected: the beneficiary bank has rejected the cancellation request. Funds won't be returned.
completed_at

string

The timestamp when the international wire was completed by the beneficiary bank.

completed_amount

int64

The amount (in the smallest unit of the currency) credited to the beneficiary account by the beneficiary bank.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

completed_currency_code

string

Currency code of the completed amount. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

events

object

List of tracking updates of the transfer in ascending order of event timestamp.

cancellation_reason

string

The reason if the transfer is requested to be canceled. Read more.

cancellation_status

string

The current status of cancellation request by this event (Read more). Can be one of the following:

pending: the beneficiary bank is still processing the cancellation request.
accepted: the beneficiary bank has accepted the cancellation request. Funds have been returned, or will be returned shortly.
rejected: the beneficiary bank has rejected the cancellation request. Funds won't be returned.
cancellation_status_reason

string

The reason if the cancellation request is still pending or rejected.

charge_bearer

string

The charge bearer code. Can be DEBT, CRED, or SHAR. Read more.

charges

array of objects

List of fees charged by financial institutions involved in this transfer. These charges are inclusive of both the wire the wire return if applicable. Charges are only listed here if the intermediary and beneficiary banks are part of the SWIFT GPI tracking system.

amount

int64

Charge amount (in the smallest unit of the currency).

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

currency_code

string

Charge currency. The three-letter currency code defined in ISO 4217 (e.g. USD)

agent

string

The Swift BIC code of the financial institution that applied the charge. It may be empty as some financial institutions do not provide it.

fx_rate

string

The foreign exchange rate used for currency exchange by this financial institution.

instructed_amount

int64

Instructed amount (in the smallest unit of the currency) of the transfer. Read more.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

instructed_currency_code

string

Instructed currency. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

instructed_fi

string

The Swift BIC code of the instructed financial institution (i.e., the next FI in the routing).

is_cover_transfer_event

bool

Indicate if this event is for the cover transfer that settles funds. Cover transfer events will not impact the corresponding customer transfer status. Read more

network_reference

string

The event ID in the Swift tracking system. Unique per transfer.

settled_amount

int64

Settlement amount (in the smallest unit of the currency) of the transfer.

e.g., 1756 means 1.756 in KWD, 17.56 in USD, or 1756 in JPY.

settled_currency_code

string

Settlement currency. The three-letter currency code defined in ISO 4217 (e.g. USD). Read more.

transfer_status

string

The current transfer status in the Swift tracking system by this event. This tracking status is different from the internal status of international wire object (Read more). Can be one of the following:

pending: the transfer is still being processed by an intermediary bank or the beneficiary bank.
rejected: the transfer has been rejected by an intermediary bank or the beneficiary bank.
completed: the transfer has been processed successfully by the beneficiary bank, and funds have been credited to the beneficiary account.
transfer_status_reason

string

The reason if the transfer is still pending or rejected.

type

string

The tracking event type. Can be one of the following:

fi_transfer_initiated: the FI transfer is initiated
fi_transfer_updated: the FI transfer is updated
fi_transfer_cancellation_requested: an originator has requested to cancel the FI transfer
fi_transfer_cancellation_responded: the FI transfer cancellation status is updated
fi_transfer_cancellation_tracking_updated: the tracking status of the FI transfer cancellation request is updated
fi_transfer_return_initiated: the FI transfer return is initiated
fi_transfer_return_updated: the FI transfer return is updated
fi_transfer_cover_initiated: the cover of a FI transfer is initiated
fi_transfer_cover_updated: the cover of a FI transfer is updated
fi_transfer_cover_return_initiated: the cover of a FI transfer is returned
fi_transfer_cover_return_updated: a return of the cover of a FI transfer is updated
transfer_initiated: the transfer is initiated
transfer_updated: the transfer status is updated
transfer_cancellation_requested: the originator has requested to cancel the transfer
transfer_cancellation_responded: the cancellation status is updated
transfer_cancellation_tracking_updated: the tracking status of cancellation request is updated
transfer_return_initiated: the transfer is returned
transfer_return_updated: the transfer return status is updated
transfer_cover_initiated: the cover transfer is initiated
transfer_cover_updated: the cover transfer status is updated
transfer_cover_return_initiated: the cover transfer is returned
transfer_cover_return_updated: the cover transfer return status is updated
updated_at

string

The timestamp when the event was lastly updated by the Swift Tracking system.

updated_by

string

The Swift BIC code of the financial institution posting this status update, or the Swift Tracking system (TRCKCHZZXXX).

id

string

The ID of this international wire transfer.

transfer_status

string

The latest transfer status in the Swift tracking system. This tracking status is different from the internal status of international wire object (Read more). Can be one of the following:

pending: the transfer is still being processed by an intermediary bank or the beneficiary bank.
rejected: the transfer has been rejected by an intermediary bank or the beneficiary bank.
completed: the transfer has been processed successfully by the beneficiary bank, and funds have been credited to the beneficiary account.
transfer_status_reason

string

The reason if the transfer is still pending or rejected.

uetr

string

Universally unique ID to provide an end-to-end reference for this transfer. Format: UUID v4.

updated_at

string

The timestamp when the transfer was lastly updated by the Swift tracking system.

International Wire Tracking Object
{
  "cancellation_reason": null,
  "cancellation_status": null,
  "completed_amount": null,
  "completed_at": null,
  "completed_currency_code": null,
  "events": [
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": "DEBT",
      "charges": null,
      "fx_rate": null,
      "instructed_amount": 500,
      "instructed_currency_code": "EUR",
      "instructed_fi": null,
      "network_reference": "20230821CLNOUS66AXXX0161234567",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "pending",
      "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
      "type": "transfer_initiated",
      "updated_at": "2023-08-22T04:01:02Z",
      "updated_by": "CLNOUS66XXX"
    },
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": "DEBT",
      "charges": null,
      "fx_rate": null,
      "instructed_amount": 500,
      "instructed_currency_code": "EUR",
      "instructed_fi": null,
      "network_reference": "swi00004-2023-08-22T04:03:08.44682.781207Z",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "pending",
      "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
      "type": "transfer_initiated",
      "updated_at": "2023-08-22T04:03:33Z",
      "updated_by": "CHASUS33XXX"
    }
  ],
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "transfer_status": "pending",
  "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
  "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
  "updated_at": "2023-08-22T04:03:33Z"
}
Get international wire tracking
GET

/transfers/international-wire/<swift_transfer_id_or_uetr>/tracking

Retrieve the tracking details of an international wire transfer by its ID or UETR. Read more.

Path Parameters
swift_transfer_id_or_uetr

string

Required

ID or UETR of the Swift transfer you're looking up.

Request
curl 'https://api.column.com/transfers/international-wire/swft_2F3BYA9aMdHag8iUtsDE8ji0KOK/tracking' \
  -u :<YOUR API KEY>

curl 'https://api.column.com/transfers/international-wire/d6e4313a-e186-4b21-83a5-43fa4cbaa38e/tracking' \
  -u :<YOUR API KEY>
Response

200

400

{
  "cancellation_reason": null,
  "cancellation_status": null,
  "completed_amount": 500,
  "completed_at": "2023-08-22T06:09:00Z",
  "completed_currency_code": "EUR",
  "events": [
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": "DEBT",
      "charges": null,
      "fx_rate": null,
      "instructed_amount": 500,
      "instructed_currency_code": "EUR",
      "instructed_fi": null,
      "network_reference": "20230821CLNOUS66AXXX0161234567",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "pending",
      "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
      "type": "transfer_initiated",
      "updated_at": "2023-08-22T04:01:02Z",
      "updated_by": "CLNOUS66XXX"
    },
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": "DEBT",
      "charges": null,
      "fx_rate": null,
      "instructed_amount": 500,
      "instructed_currency_code": "EUR",
      "instructed_fi": null,
      "network_reference": "swi00004-2023-08-22T04:03:08.44682.781207Z",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "pending",
      "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
      "type": "transfer_initiated",
      "updated_at": "2023-08-22T04:03:33Z",
      "updated_by": "CHASUS33XXX"
    },
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": "DEBT",
      "charges": null,
      "fx_rate": null,
      "instructed_amount": null,
      "instructed_currency_code": null,
      "instructed_fi": null,
      "network_reference": "20230822CHASDEFXEXXX1681234567",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "pending",
      "transfer_status_reason": "Credit transfer has been forwarded to the next bank that does not provide tracking service",
      "type": "transfer_updated",
      "updated_at": "2023-08-22T06:08:00Z",
      "updated_by": "CHASDEFXXXX"
    },
    {
      "cancellation_reason": null,
      "cancellation_status": null,
      "cancellation_status_reason": null,
      "charge_bearer": null,
      "charges": null,
      "fx_rate": null,
      "instructed_amount": null,
      "instructed_currency_code": null,
      "instructed_fi": null,
      "network_reference": "20230822BKENGB20AXXX6667680136",
      "settled_amount": 500,
      "settled_currency_code": "EUR",
      "transfer_status": "completed",
      "transfer_status_reason": null,
      "type": "transfer_updated",
      "updated_at": "2023-08-22T06:10:02Z",
      "updated_by": "BKENGB20XXX"
    }
  ],
  "id": "swft_2F3BYA9aMdHag8iUtsDE8ji0KOK",
  "transfer_status": "completed",
  "transfer_status_reason": null,
  "uetr": "d6e4313a-e186-4b21-83a5-43fa4cbaa38e",
  "updated_at": "2023-08-22T17:22:18Z"
}
Realtime transfer object

The Realtime transfer object represents the current state of a single Realtime transfer initiated by or received by Column. Realtime transfers are used to send and receive money over FedNow or RTP. The Realtime transfer object exposes all relevant information about the Realtime transfer to developers. Read about more about Realtime transfers here.

Object Parameters
accepted_at

string

The timestamp when the realtime transfer was accepted without posting.

account_number_id

string

ID of the account number that is sending/receiving the transfer.

allow_overdraft

bool

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it.

amount

integer

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175

bank_account_id

string

ID of the bank number that is sending/receiving the transfer.

pending_at

string

The timestamp when the realtime transfer was accepted without posting and is pending.

blocked_at

string

The timestamp when the realtime transfer was blocked after accepting without posting.

completed_at

string

The timestamp when the realtime transfer was completed.

counterparty_id

string

ID of the counterparty that is receiving/sending the transfer.

ultimate_debtor_counterparty_id

string

ID of the ultimate debtor counterparty that was set on the transfer.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD.

description

string

A description of the transfer visible in people's accounts.

id

string

The unique id of the object.

idempotency_key

string

The idempotency key specified in the realtime transfer.

initiated_at

string

The timestamp when the realtime transfer was initiated.

is_incoming

boolean

Indicates whether the realtime transfer was incoming (true or outgoing false).

is_on_us

boolean

Indicates whether the realtime transfer was between two bank accounts held at Column.

manual_review_approved_at

string

The timestamp when the realtime transfer was approved after manual review.

manual_review_at

string

The timestamp when the realtime transfer went into the manual review state.

manual_review_rejected_at

string

The timestamp when the realtime transfer was rejected after manual review.

rejected_at

string

The timestamp when the realtime transfer was rejected after accept without posting.

rejection_code

string

Code representing a reason for rejecting realtime payment.

rejection_description

string

Description for the rejection_reason_code.

rejection_additional_info

string

Contains further information on the payment status reason in free-formatted text, if available.

return_pair_transfer_id

string

Provides a reference to a pair return transfer created when return was accepted. It is either the original transfer or the return transfer ID.

status

string

The current status of the realtime transfer. Possible statuses are initiated, pending, accepted, completed, blocked, rejected, manual_review, manual_review_approved, manual_review_rejected.

end_to_end_id

string

A unique identifier for the transfer that is passed through to the receiving bank. This is used for reconciliation purposes between originator and receiver. This ID may not be populated on an incoming Realtime transfer.

Realtime Transfer Object
{
  "accepted_at": "2023-12-29T19:45:11Z",
  "account_number_id": "acno_2XrFelm5efqwGkPsu3B1DtSEDDg",
  "allow_overdraft": false,
  "amount": 10000,
  "bank_account_id": "bacc_2XrFelZxSUOXXTswfr0h9KByzNp",
  "blocked_at": null,
  "completed_at": "2023-12-29T19:45:13Z",
  "counterparty_id": "cpty_2aELmewqaBj5Bp6oraJ7Pl6LH1p",
  "ultimate_debtor_counterparty_id": null,
  "currency_code": "USD",
  "description": "Example realtime transfer",
  "id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "idempotency_key": null,
  "initiated_at": "2023-12-29T19:45:10Z",
  "is_incoming": false,
  "is_on_us": false,
  "manual_review_approved_at": null,
  "manual_review_at": null,
  "manual_review_rejected_at": null,
  "pending_at": null,
  "rejected_at": null,
  "rejection_code": null,
  "rejection_code_description": null,
  "rejection_additional_info": null,
  "status": "completed",
  "return_pair_transfer_id": "rttr_2ipl7TLOLY0Kyv5flfi2NHAIqJm",
  "end_to_end_id": "bill-19421a4b7e2d"
}
Create a Realtime transfer
POST

/transfers/realtime

Create a realtime transfer between a Column account and a counterparty.

Body Parameters
description

string

Optional

A description of the transfer visible in people's accounts.

amount

int64

Required

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

account_number_id

string

Optional

ID of the account number that is sending the transfer. If this is specified, the bank_account_id does not need to be included.

account_number_id or bank_account_id is required

bank_account_id

string

Optional

ID of the bank number that is sending the transfer. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required

counterparty_id

string

Required

ID of the counterparty that will receive the transfer. Address is not required in the counterparty object for Realtime transfers.

ultimate_debtor_counterparty

object

Optional

Counterparty object to create an ultimate debtor counterparty at the time of transfer creation. If present, this will add ultimate_debtor fields to the outgoing realtime transfer message. Either ultimate_debtor_counterparty or ultimate_debtor_counterparty_id is required to set this up.

ultimate_debtor_counterparty_id

string

Optional

ID of the ultimate debtor counterparty that will sent the transfer. If present, this will add ultimate_debtor fields to the outgoing realtime transfer message. Either ultimate_debtor_counterparty or ultimate_debtor_counterparty_id is required to set this up.

allow_overdraft

boolean

Optional

Allows the account to go negative for an outgoing transfer. The bank account needs to haveis_overdraftable enabled with an overdraft reserve account linked to it

end_to_end_id

string

Optional

A unique identifier for the transfer that is passed through to the receiving bank. This is used for reconciliation purposes between originator and receiver. If not set, transfer ID is used by default (eg.: rttr_2pV9fkRGLZD34KL2fo11Rf4e3HC).

Request
curl 'https://api.column.com/transfers/realtime' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Example realtime transfer" \
  -d amount=10000 \
  -d currency_code="USD" \
  -d bank_account_id="<bank_account_id>" \
  -d counterparty_id="<counterparty_id>"
Response

200

400

{
  "accepted_at": "2023-12-29T19:45:11Z",
  "account_number_id": "acno_2XrFelm5efqwGkPsu3B1DtSEDDg",
  "allow_overdraft": false,
  "amount": 10000,
  "bank_account_id": "bacc_2XrFelZxSUOXXTswfr0h9KByzNp",
  "blocked_at": null,
  "completed_at": "2023-12-29T19:45:13Z",
  "counterparty_id": "cpty_2aELmewqaBj5Bp6oraJ7Pl6LH1p",
  "ultimate_debtor_counterparty_id": null,
  "currency_code": "USD",
  "description": "Example realtime transfer",
  "id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "idempotency_key": null,
  "initiated_at": "2023-12-29T19:45:10Z",
  "is_incoming": false,
  "is_on_us": false,
  "manual_review_approved_at": null,
  "manual_review_at": null,
  "manual_review_rejected_at": null,
  "pending_at": null,
  "rejected_at": null,
  "rejection_code": null,
  "rejection_code_description": null,
  "rejection_additional_info": null,
  "status": "completed",
  "return_pair_transfer_id": "rttr_2ipl7TLOLY0Kyv5flfi2NHAIqJm"
}
List all Realtime transfers
GET

/transfers/realtime

Retrieve all realtime transfers under your platform

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

Request
curl 'https://api.column.com/transfers/realtime' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "accepted_at": "2023-12-29T19:45:11Z",
      "account_number_id": "acno_2XrFelm5efqwGkPsu3B1DtSEDDg",
      "allow_overdraft": false,
      "amount": 10000,
      "bank_account_id": "bacc_2XrFelZxSUOXXTswfr0h9KByzNp",
      "blocked_at": null,
      "completed_at": "2023-12-29T19:45:13Z",
      "counterparty_id": "cpty_2aELmewqaBj5Bp6oraJ7Pl6LH1p",
      "ultimate_debtor_counterparty_id": null,
      "currency_code": "USD",
      "description": "Example realtime transfer",
      "id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
      "idempotency_key": null,
      "initiated_at": "2023-12-29T19:45:10Z",
      "is_incoming": false,
      "is_on_us": false,
      "manual_review_approved_at": null,
      "manual_review_at": null,
      "manual_review_rejected_at": null,
      "pending_at": null,
      "rejected_at": null,
      "rejection_code": null,
      "rejection_code_description": null,
      "rejection_additional_info": null,
      "status": "completed",
      "return_pair_transfer_id": "rttr_2ipl7TLOLY0Kyv5flfi2NHAIqJm"
    }
  ],
  "has_more": true
}
Get Realtime transfer
GET

/transfers/realtime/<realtime_transfer_id>

Retrieve a single realtime transfer by its ID

Path Parameters
realtime_transfer_id

string

Required

ID of the realtime transfer you're looking up.

Request
curl 'https://api.column.com/transfers/realtime/<realtime_transfer_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "accepted_at": "2023-12-29T19:45:11Z",
  "account_number_id": "acno_2XrFelm5efqwGkPsu3B1DtSEDDg",
  "allow_overdraft": false,
  "amount": 10000,
  "bank_account_id": "bacc_2XrFelZxSUOXXTswfr0h9KByzNp",
  "blocked_at": null,
  "completed_at": "2023-12-29T19:45:13Z",
  "counterparty_id": "cpty_2aELmewqaBj5Bp6oraJ7Pl6LH1p",
  "currency_code": "USD",
  "description": "Example realtime transfer",
  "id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "idempotency_key": null,
  "initiated_at": "2023-12-29T19:45:10Z",
  "is_incoming": false,
  "is_on_us": false,
  "manual_review_approved_at": null,
  "manual_review_at": null,
  "manual_review_rejected_at": null,
  "pending_at": null,
  "rejected_at": null,
  "rejection_code": null,
  "rejection_code_description": null,
  "rejection_additional_info": null,
  "status": "completed",
  "return_pair_transfer_id": "rttr_2ipl7TLOLY0Kyv5flfi2NHAIqJm",
  "end_to_end_id": "bill-19421a4b7e2d"
}
Return a Realtime transfer
POST

/transfers/realtime/{transfer_id}/return

Return a realtime transfer that was previously received. Only incoming transfers can be returned. For outgoing transfers, use the Request Return for a Realtime transfer endpoint.

When returning an incoming Realtime transfer, you must provide a reason in your return. The following reasons are supported:

incorrect_beneficiary_account - Account number is invalid or has been closed
beneficiary_account_blocked - Account is blocked
incorrect_amount - Amount is incorrect
beneficiary_mismatch - Beneficiary name mismatch
refused_by_beneficiary - Beneficiary refused the transfer
requested_by_originator - Return requested by originator
Body Parameters
reason

string

Required

The reason for returning this transfer. Possible values are: incorrect_beneficiary_account, beneficiary_account_blocked, incorrect_amount, beneficiary_mismatch, refused_by_beneficiary, requested_by_originator.

Request
curl 'https://api.column.com/transfers/realtime/rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E/return' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d reason="requested_by_originator"
Response

200

400

{
  "accepted_at": "2023-12-29T19:45:11Z",
  "account_number_id": "acno_2XrFelm5efqwGkPsu3B1DtSEDDg",
  "allow_overdraft": false,
  "amount": 10000,
  "bank_account_id": "bacc_2XrFelZxSUOXXTswfr0h9KByzNp",
  "blocked_at": null,
  "completed_at": "2023-12-29T19:45:13Z",
  "counterparty_id": "cpty_2aELmewqaBj5Bp6oraJ7Pl6LH1p",
  "currency_code": "USD",
  "description": "Example realtime transfer",
  "id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "idempotency_key": null,
  "initiated_at": "2023-12-29T19:45:10Z",
  "is_incoming": false,
  "is_on_us": false,
  "manual_review_approved_at": null,
  "manual_review_at": null,
  "manual_review_rejected_at": null,
  "pending_at": null,
  "rejected_at": null,
  "rejection_code": null,
  "rejection_code_description": null,
  "rejection_additional_info": null,
  "status": "completed",
  "return_pair_transfer_id": "rttr_2ipl7TLOLY0Kyv5flfi2NHAIqJm"
}
Request Return for a Realtime transfer
POST

/transfers/realtime/{transfer_id}/return-request

You can only request returns on outgoing Realtime transfers. For incoming transfers, use the Return a Realtime transfer endpoint.

When creating a Realtime return request, you must provide the reason you are requesting a return. The following reasons are supported:

incorrect_beneficiary_account - Account number is invalid or has been closed
incorrect_amount - Amount is not the amount agreed or expected
requested_by_originator - Cancellation requested by the Debtor
duplicate - Payment is a duplicate of another payment
fraud - Cancellation requested following a transaction that was originated fraudulently
tech - Cancellation requested following technical problems resulting in an erroneous transaction
payment_not_justified - Payment is not justified (missing critical information)

Additionally, you can provide a comment to explain why the return is being requested.

Body Parameters
reason

string

Required

The reason for requesting a return for this transfer. Possible values are: incorrect_beneficiary_account, incorrect_amount, requested_by_originator, duplicate, fraud, tech, payment_not_justified.

description

string

Optional

A description of the return request visible in people's accounts (max 105 characters)

Request
curl 'https://api.column.com/transfers/realtime/rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E/return-request' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d reason="requested_by_originator"
Response

200

400

{
  "id": "rtrr_2uuKWqgpCEmclWz7vpsXUqKwCxa",
  "status": "pending",
  "is_incoming": false,
  "pending_at": "2025-03-27T16:30:54Z",
  "accepted_at": null,
  "rejected_at": null,
  "original_transfer_id": "rttr_2u8nr9gLy1y7FoyReEhPb5STMJl",
  "return_transfer_id": null,
}
Realtime RFP object

The Realtime Request For Payment (RFP) object represents the current state of a single Realtime RFP initiated by or received by Column. Realtime RFPs are used to initiate and receive debit requests called Request for Payments over FedNow or the RTP network. The Realtime RFP object exposes all relevant information about the Realtime RFP to developers. Read about more about Realtime RFP here.

Object Parameters
accepted_at

string

The timestamp when the Realtime RFP was accepted.

account_number_id

string

ID of the account number that is sending/receiving the RFP.

amount

integer

Amount (in cents) of the funds that will be transferred between originator and counterparty accounts.

e.g. $1.75 would be represented by 175

bank_account_id

string

ID of the bank account that is sending/receiving the RFP.

canceled_at

string

The timestamp at which the Realtime RFP was canceled.

completed_at

string

The timestamp at which the Realtime RFP was completed.

counterparty_id

string

ID of the counterparty that is receiving/sending the RFP.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD.

description

string

A description of the RFP visible in people's accounts.

expired_at

string

The timestamp when the Realtime RFP expired.

id

string

The unique id of the RFP object.

idempotency_key

string

The idempotency key specified in the Realtime RFP.

initiated_at

string

The timestamp when the Realtime RFP was initiated.

is_incoming

boolean

Indicates the Realtime RFP is incoming (true) or outgoing (false).

is_on_us

boolean

Indicates the Realtime RFP is between two bank accounts held at Column.

rejected_at

string

The timestamp at which the Realtime transfer was rejected after accept without posting.

rejection_code

string

Code representing a reason for Realtime payment rejection.

rejection_description

string

Description for the rejection_code.

rejection_additional_info

string

Contains further information on the rejection reason in free-formatted text, if available.

realtime_transfer_id

string

Realtime transfer object of a credit transfer that was sent/received to settle an accepted RFP. See Realtime transfer object here

status

string

The current status of the Realtime transfer. Possible statuses are initiated, presented, received, accepted, completed, rejected, expired, canceled.

end_to_end_id

string

A unique identifier for the transfer that is passed through to the receiving bank. This is used for reconciliation purposes between originator and receiver.

Realtime RFP Object
{
  "accepted_at": "2025-03-05T17:15:19Z",
  "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
  "amount": 650000,
  "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
  "canceled_at": null,
  "completed_at": "2025-03-05T17:15:19Z",
  "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
  "currency_code": "USD",
  "description": "rent payment",
  "expired_at": "2025-03-06T11:33:00Z",
  "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
  "initiated_at": null,
  "is_incoming": true,
  "received_at": "2025-03-05T16:40:45Z",
  "rejected_at": null,
  "status": "completed",
  "realtime_transfer_id": "rttr_2tuHDRK00xaBzfPyEpQXru534KE"
}
Create a Realtime RFP
POST

/transfers/realtime/request-for-payment

Create a Realtime Request For Payment (RFP) between a Column account and a counterparty.

Body Parameters
description

string

Optional

A description of the RFP visible in people's accounts.

amount

int64

Required

Amount (in cents) of the funds that will be requested by originator from counterparty account.

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

account_number_id

string

Optional

ID of the account number that is originating the RFP. If this is specified, the bank_account_id does not need to be included.

account_number_id or bank_account_id is required

bank_account_id

string

Optional

ID of the bank account that is originating the RFP. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required

counterparty_id

string

Required

ID of the counterparty that will receive the RFP.

Note: A wire object must be attached to the counterparty. If it is not, this request will fail.

end_to_end_id

string

Optional

A unique identifier for the RFP that is passed through to the receiving bank. This is used for reconciliation purposes between originator and receiver. If not set, RFP ID is used by default (eg.: rrfp_2twxfSZjhYsXGIj6ZHbi9DEdZHF).

Request
curl 'https://api.column.com/transfers/realtime/request-for-payment' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d description="Example RFP" \
  -d amount=10000 \
  -d currency_code="USD" \
  -d bank_account_id="<bank_account_id>" \
  -d counterparty_id="<counterparty_id>"
Response

200

400

{
  "accepted_at": "2025-03-05T17:15:19Z",
  "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
  "amount": 650000,
  "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
  "canceled_at": null,
  "completed_at": "2025-03-05T17:15:19Z",
  "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
  "currency_code": "USD",
  "description": "rent payment",
  "expired_at": "2025-03-06T11:33:00Z",
  "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
  "initiated_at": null,
  "is_incoming": true,
  "received_at": "2025-03-05T16:40:45Z",
  "rejected_at": null,
  "status": "completed",
  "transfer": null
}
List all Realtime RFPs
GET

/transfers/realtime/request-for-payment

Retrieve all Realtime Requests for Payments (RFPs) under your platform

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

Request
curl 'https://api.column.com/transfers/realtime/request-for-payment' \
  -u :<YOUR API KEY>
Response

200

400

{
  "realtime_rfps": [
    {
      "accepted_at": "2025-03-05T17:15:19Z",
      "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
      "amount": 650000,
      "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
      "canceled_at": null,
      "completed_at": "2025-03-05T17:15:19Z",
      "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
      "currency_code": "USD",
      "description": "rent payment",
      "expired_at": "2025-03-06T11:33:00Z",
      "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
      "initiated_at": null,
      "is_incoming": true,
      "received_at": "2025-03-05T16:40:45Z",
      "rejected_at": null,
      "status": "completed",
      "transfer": null
    }
  ],
  "has_more": true
}
Get Realtime RFP
GET

/transfers/realtime/request-for-payment/<realtime_rfp_id>

Retrieve a single Realtime Request for Payment (RFP) by its ID

Path Parameters
realtime_rfp_id

string

Required

ID of the Realtime RFP you're looking up.

Request
curl 'https://api.column.com/transfers/realtime/request-for-payment/<realtime_rfp_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "accepted_at": "2025-03-05T17:15:19Z",
  "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
  "amount": 650000,
  "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
  "canceled_at": null,
  "completed_at": null,
  "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
  "currency_code": "USD",
  "description": "rent payment",
  "expired_at": null,
  "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
  "initiated_at": null,
  "is_incoming": true,
  "received_at": "2025-03-05T16:40:45Z",
  "rejected_at": null,
  "status": "received",
  "transfer": null,
}
Accept Realtime RFP
PATCH

/transfers/realtime/request-for-payment/<realtime_rfp_id>/accept

Accept an outstanding Realtime RFP by its ID.

Only incoming Realtime RFPs with status presented or received can be accepted.

Path Parameters
realtime_rfp_id

string

Required

ID of the Realtime RFP you're accepting.

Request
curl 'https://api.column.com/transfers/realtime/request-for-payment/<realtime_rfp_id>/accept' \
  -u :<YOUR API KEY>
Response

200

400

{
  "accepted_at": "2025-03-06T17:15:19Z",
  "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
  "amount": 650000,
  "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
  "canceled_at": null,
  "completed_at": null,
  "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
  "currency_code": "USD",
  "description": "rent payment",
  "expired_at": null,
  "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
  "initiated_at": null,
  "is_incoming": true,
  "received_at": "2025-03-05T16:40:45Z",
  "rejected_at": null,
  "status": "accepted",
  "transfer": null,
}
Reject Realtime RFP
PATCH

/transfers/realtime/request-for-payment/<realtime_rfp_id>/reject

Reject an outstanding Realtime RFP by its ID.

Only incoming Realtime RFPs in status presented or received can be rejected.

Path Parameters
realtime_rfp_id

string

Required

ID of the Realtime RFP you're rejecting.

Body Parameters
rejection_reason

string

Optional

Optional reason for rejecting the RFP. Maximum length is 105 characters.

Request
curl 'https://api.column.com/transfers/realtime/request-for-payment/<realtime_rfp_id>/reject' \
  -u :<YOUR API KEY>
Response

200

400

{
  "accepted_at": null,
  "account_number_id": "acno_2toLl6m5mCvdnC1ffcRBIvqq12e",
  "amount": 650000,
  "bank_account_id": "bacc_2toLl7dxbfa4VE9U8mbrUOloqw3",
  "canceled_at": null,
  "completed_at": null,
  "counterparty_id": "cpty_2tuD0cMoZrq5mEUVUX6KsYRMzqR",
  "currency_code": "USD",
  "description": "rent payment",
  "expired_at": null,
  "id": "rrfp_2tuD0rBe0o8NmxvcxcHRzt5poZQ",
  "initiated_at": null,
  "is_incoming": true,
  "received_at": "2025-03-05T16:40:45Z",
  "rejected_at": "2025-03-06T17:15:19Z",
  "status": "rejected",
  "transfer": null,
}
Realtime Return Request object

The Realtime Return Request represents a request to return funds from a previously completed Realtime transfer.

Object Parameters
id

string

The unique id of the Return Request object.

status

string

The current status of the Return Request. Possible statuses are pending, accepted, and rejected.

is_incoming

boolean

Indicates whether the Return Request is incoming (true) or outgoing (false).

pending_at

string

The timestamp at which the Return Request was created and status was set to pending.

accepted_at

string

The timestamp at which the Return Request was accepted.

rejected_at

string

The timestamp at which the Return Request was rejected.

original_transfer_id

string

ID of the original Realtime transfer for which the return of funds is being requested.

return_transfer_id

string

ID of the Realtime transfer created when the Return Request is accepted, representing the return of funds.

Realtime Return Request Object
{
  "id": "rtrr_2bKM7RczpzxdvWY22BsHKw2Lb5F",
  "reason": "requested_by_originator",
  "status": "accepted",
  "is_incoming": false,
  "pending_at": "2023-12-30T14:22:10Z",
  "accepted_at": "2023-12-30T16:13:11Z",
  "rejected_at": null,
  "original_transfer_id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "return_transfer_id": "rttr_2bKN8SdzqAydwXZ33CsILx3Mc6G"
}
Accept Realtime Return Request
PATCH

/transfers/realtime/return-requests/<realtime_return_request_id>/accept

Accept an outstanding Realtime Return Request by its ID.

Only incoming Realtime Return Requests with a pending status can be accepted.

Path Parameters
realtime_return_request_id

string

Required

ID of the Realtime Return Request you're accepting.

Request
curl 'https://api.column.com/transfers/realtime/return-requests/<realtime_return_request_id>/accept' \
  -u :<YOUR API KEY> -X PATCH
Response

200

400

{
  "id": "rtrr_2bKM7RczpzxdvWY22BsHKw2Lb5F",
  "status": "accepted",
  "is_incoming": false,
  "pending_at": "2023-12-30T14:22:10Z",
  "accepted_at": "2023-12-30T16:13:11Z",
  "rejected_at": null,
  "original_transfer_id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "return_transfer_id": "rttr_2bKN8SdzqAydwXZ33CsILx3Mc6G"
}
Reject Realtime Return Request
PATCH

/transfers/realtime/return-requests/<realtime_return_request_id>/reject

Reject an outstanding Realtime Return Request by its ID.

Only incoming Realtime Return Requests with a pending status can be rejected.

Path Parameters
realtime_return_request_id

string

Required

ID of the Realtime Return Request you're rejecting.

Body Parameters
reason

string

Required

Reason for rejecting the Realtime Return Request. Possible values are beneficiary_account_closed, non_sufficient_funds, funds_already_returned, rejected_by_beneficiary, legal_decision, and no_response_from_beneficiary.

description

string

Optional

Additional comment for why you are rejecting the Realtime Return Request.

Request
curl 'https://api.column.com/transfers/realtime/return-requests/<realtime_return_request_id>/reject' \
  -u :<YOUR API KEY> -X PATCH
Response

200

400

{
  "id": "rtrr_2bKM7RczpzxdvWY22BsHKw2Lb5F",
  "status": "accepted",
  "is_incoming": false,
  "pending_at": "2023-12-30T14:22:10Z",
  "accepted_at": null,
  "rejected_at": "2023-12-30T16:13:11Z",
  "original_transfer_id": "rttr_2aEM6RbzozxcvVY11ArHJw1Ka4E",
  "return_transfer_id": null,
}
Check transfer object

The check transfer object represents the current state of a single check transfer initiated by or received by Column. Check transfers are used to send and receive money over Check 21-Enabled services. The check transfer object exposes all relevant information about the check transfer to developers. Read about more about check transfers here.

Object Parameters
account_number_id

string

ID of the account number that is sending the transfer.

allow_overdraft

boolean

Allow the account to go negative for the transfer. The bank account needs to have is_overdraftable enabled with an overdraft reserve account linked to it.

back_image

base 64 encoded image

Base 64 encoded TIFF image of the back of the deposited check image. This field is not populated in the check transfer object until after the check is deposited.

bank_account_id

string

ID of the bank number that is sending the transfer.

check_number

int64

Sequence number of the check.

created_at

string

Date (format: YYYY-MM-DD) on which the check was created.

currency_code

string

The three-letter currency code defined in ISO 4217. e.g. USD

delivered_by_column

boolean

For issued check, whether this check is also mailed by Column.

delivery_status

string

The current delivery status of the check delivered by Column. Possible statuses are created,mailed, in_transit, in_local_area,processed_for_delivery, delivered, failed, rerouted, and returned_to_sender.

deposited_amount

int64

Amount (in cents) of the funds that is deposited.

e.g. $1.75 would be represented by 175

deposited_at

string

Date (format: YYYY-MM-DD) on which the check is deposited (applies only to check deposited at Column).

description

string

A description of the transfer visible in people's accounts.

external_routing_number

string

For issued check, this is the routing number of bank of first deposit

extracted_payee_name

string

The payee name extracted from the ICL file supplied by the bank of first deposit (for Column issued checks only). This can be compared to the payee name on the issued check to detect fraudulently altered checks. Not guaranteed to be accurate.

first_return_at

string

Date (format: YYYY-MM-DD) on which the check is returned for the first time.

front_image

base 64 encoded image

Base 64 encoded TIFF image of the front of the deposited check image. This field is not populated in the check transfer object until after the check is deposited.

id

string

The unique id of the object.

idempotency_key

string

The idempotency key specified in the check transfer.

is_preview_pdf_available

boolean

For check delivered by Column, whether the preview PDF is ready to be downloaded.

issued_at

boolean

Date (format: YYYY-MM-DD) at which the check was issued.

manual_review_at

string

Date (format: YYYY-MM-DD) at which the check transfer went into manual review.

message

string

Message to the payee. Only available for checks delivered by Column.

memo

string

Memo on the check. Only available for checks delivered by Column.

micr_line

object

The MICR line is the sequence of numbers and characters at the bottom of a check.

amount_field

string

Amount of the issued check.

auxiliary_on_us

string

Auxiliary on us. This field is provided by the issuing bank and most commonly used for a check number. In many cases, auxiliary_on_us will be the string before a routing number in the MICR line.

external_processing_code

string

External processing code.

payor_bank_routing_number

string

Payor bank routing number.

on_us

string

On us. This field is provided by the issuing bank and most commonly contains both check number and account number. In many cases, on-us will be the string after a routing number in the MICR line.

payee_company

string

Company name of the payee. Only available for checks delivered by Column.

payee_address

object

The receiving address of the check. Only available for checks delivered by Column.

line_1

string

Address line 1

line_2

string

Address line 2

city

string

City

state

string

State name. For US addresses, only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Postal code

country_code

string

Only US is allowed for now.

payee_name

string

The name of the person who is receiving the check.

returns

array

List of check returns associated with the check transfer

pending_deposit_at

string

Date (format: YYYY-MM-DD) on which the check was pending deposit.

pending_first_return_at

string

Date (format: YYYY-MM-DD) on which the check was pending first return.

pending_stop_at

string

Date (format: YYYY-MM-DD) on which the check was stopped.

pending_user_initiated_return_at

string

Date (format: YYYY-MM-DD) on which the user initiates the return.

positive_pay_amount

int64

Amount (in cents) of the issued check that will be used in positive pay validation if account number is provided.

e.g. $1.75 would be represented by 175.

reclear_at

string

Date (format: YYYY-MM-DD) on which the check was recleared.

rejected_at

string

Date (format: YYYY-MM-DD) on which the check was rejected.

returned_at

string

Date (format: YYYY-MM-DD) on which the check was returned (deposited checks only).

second_return_at

string

Date (format: YYYY-MM-DD) on which the check was returned for the second time.

settled_at

string

Date (format: YYYY-MM-DD) on which the check was settled.

status

string

The current status of the check transfer. Possible statuses are initiated, issued,manual_review, rejected, pending_deposit, pending_stop,deposited, stopped, pending_first_return, pending_second_return,first_return, pending_reclear, recleared, second_return, settled,returned, pending_user_initiated_return, user_initiated_return_submitted,user_initiated_returned , and pending_user_initiated_return_dishonored.

stopped_at

string

Date (format: YYYY-MM-DD) on which funds locked for a check in a pending_stop state are made available.

type

string

Check transfer type. For checks deposited at Column, this is credit. For checks issued by Column and deposited at another FI, this is debit. Learn more here.

updated_at

string

The timestamp at which the Check transfer was lastly updated.

user_initiated_return_submitted_at

string

Date (format: YYYY-MM-DD) on which the user initiated return is submitted to the Fed.

user_initiated_returned_at

string

Date (format: YYYY-MM-DD) on which the user initiated return is completed.

user_initiated_return_dishonored_at

string

Date (format: YYYY-MM-DD) on which the user initiated return is dishonored.

Check Transfer Object
{
  "account_number_id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "allow_overdraft": false, 
  "back_image":"<base 64 encoded string>"
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "check_number": 1001,
  "created_at": "2022-03-02T00:05:54Z",
  "currency_code": "USD",
  "delivered_by_column": false,
  "delivery_status": null,
  "deposited_amount": "100000",
  "deposited_amount": int64,
  "deposited_at": null,
  "description": "incoming check transfer",
  "external_routing_number":"<BOFD routing number>",
  "extracted_payee_name":"Alex Gold",
  "first_return_at": null,
  "front_image":"<base 64 encoded string>"
  "id": "chkt_25o3LGGbxLjpabTm6zHquAM1ti2",
  "idempotency_key": "",
  "is_preview_pdf_available":false,
  "issued_at": "2023-03-02T00:05:54Z",
  "manual_review_at": null,
  "memo": null,
  "message": null,
  "micr_line": {
    "amount_field": "100000",
    "auxiliary_on_us": "1001",
    "external_processing_code": "",
    "payor_bank_routing_number": "322271627",
    "on_us": "12345678910"
  },
  "payee_address": null,
  "payee_name": "Olive Column",
  "returns": [],
  "pending_deposit_at": "2022-03-02T00:05:54Z",
  "pending_first_return_at": null,
  "pending_stop_at": null,
  "pending_user_initiated_return_at": null,
  "positive_pay_amount": "100000",
  "reclear_at": null,
  "rejected_at": null,
  "returned_at": null,
  "second_return_at": null,
  "settled_at": "2022-03-02T00:05:54Z",
  "status": "settled",
  "stopped_at": null,
  "type": "debit",
  "updated_at": "2022-03-02T00:05:54Z",
  "user_initiated_returned_at": null,
  "user_initiated_return_dishonored_at": null,
  "user_initiated_return_submitted_at": null
}
Issue a check
POST

/transfers/checks/issue

Issue a check to a specific payee for a given amount. If mail_check_request is included, the check will be delivered by Column too.

Body Parameters
bank_account_id

string

Required

ID of the bank account from which the check will be issued.

account_number_id or bank_account_id is required.

account_number_id

string

Optional

Account number from which the check will be issued. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required.

description

string

Optional

Description of the issued check visible only in your platform. Maximum length: 255 characters.

positive_pay_amount

int64

Required

Amount (in cents) of the issued check that will be used in positive pay validation if account number is provided.

e.g. $1.75 would be represented by 175.

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

payee_name

string

Required

Name of the payee or recipient of the issued check.

allow_overdraft

boolean

Optional

Allow the account to go negative for the transfer. The bank account needs to have is_overdraftable enabled with an overdraft reserve account linked to it.

mail_check_request

object

Optional

Optional field to have Column to mail the check for you.

message

string

Required

Message to the payee. Maximum length: 400 characters.

memo

string

Optional

Memo on the check. Maximum length: 40 characters.

attachment_document_id

string

Optional

Optional - Document ID of a check_attachment document. If provided, the document will be printed and included in the envelope. See Check Issuing, Printing and Mailing and Upload a document for more information.

payee_company

string

Optional

Company name of the payee. Maximum length: 40 characters.

payee_address

object

Required

The receiving address of the check.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Required

State name. For US addresses, only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Required

Postal code

country_code

string

Required

Only US is allowed for now.

payor_name

string

Required

Payor name to be printed on the check. Maximum length: 40 characters.

courtesy_of

string

Optional

"Courtesy of" line printed after payor name on the check. Maximum length: 40 characters.

payor_address

object

Required

The payor address to be printed on the check.

line_1

string

Required

Address line 1

line_2

string

Optional

Address line 2

city

string

Required

City

state

string

Required

State name. For US addresses, only postal abbreviations (e.g. AL, CA, DE, ...) are allowed.

postal_code

string

Required

Postal code

country_code

string

Required

Only US is allowed for now.

signatory

string

Optional

Signer of the check. Maximum length: 30 characters.

Request
curl 'https://api.column.com/transfers/checks/issue' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d bank_account_id="<bank_account_id>" \
  -d positive_pay_amount=100000 \
  -d currency_code="USD" \
  -d payee_name="Oliver Hockey"

Response

200

400

{
  "account_number_id": "acno_2Nc1pSb55eCJ7YxQnzCVis9OXrv",
  "back_image": null,
  "bank_account_id": "bacc_2Nc1pNdlOtyKM0SzfemCyHsWUn5",
  "check_number": 1003,
  "created_at": "2023-06-16T18:09:00.61936799Z",
  "currency_code": "USD",
  "delivered_by_column": false,
  "delivery_status": null,
  "deposited_amount": null,
  "deposited_at": null,
  "description": null,
  "external_routing_number": null,
  "first_return_at": null,
  "front_image": null,
  "id": "chkt_2RIYDHnZCWKEYyU12qhTpjsVmzy",
  "idempotency_key": null,
  "is_preview_pdf_available": false,
  "issued_at": "2023-06-16T18:09:00.653492083Z",
  "manual_review_at": null,
  "memo": null,
  "message": null,
  "micr_line": {
    "amount_field": "100000",
    "auxiliary_on_us": "1003",
    "external_processing_code": "",
    "on_us": "199175569013840",
    "payor_bank_routing_number": "121145307"
  },
  "payee_address": null,
  "payee_name": "Oliver Hockey",
  "pending_deposit_at": null,
  "pending_first_return_at": null,
  "pending_stop_at": null,
  "pending_user_initiated_return_at": null,
  "positive_pay_amount": "100000",
  "reclear_at": null,
  "rejected_at": null,
  "second_return_at": null,
  "settled_at": null,
  "status": "issued",
  "stopped_at": null,
  "type": "debit",
  "updated_at": "2023-06-16T18:09:00.654Z",
  "user_initiated_return_submitted_at": null,
  "user_initiated_returned_at": null,
  "user_initiated_return_dishonored_at": null
}
Get a check preview PDF for issued transfer
GET

/transfers/checks/<check_transfer_id>/preview-pdf

Get a preview PDF for a transfer. Only available for check delivered by Column

Path Parameters
check_transfer_id

string

Required

ID of the check transfer you're looking up.
Request
curl 'https://api.column.com/transfers/checks/<check_transfer_id>/preview-pdf' \
  -u :<YOUR API KEY>

Response

200

400

PDF Binary
Get a check transfer
GET

/transfers/checks/<check_transfer_id>

Retrieve a single check transfer by its ID.

Path Parameters
check_transfer_id

string

Required

ID of the check transfer you're looking up.
Request
curl 'https://api.column.com/transfers/checks/<check_transfer_id>' \
  -u :<YOUR API KEY>

Response

200

400

{
  "account_number_id": "acno_2Nc1pSb55eCJ7YxQnzCVis9OXrv",
  "back_image": null,
  "bank_account_id": "bacc_2Nc1pNdlOtyKM0SzfemCyHsWUn5",
  "check_number": 1003,
  "created_at": "2023-06-16T18:09:00.61936799Z",
  "currency_code": "USD",
  "delivered_by_column": false,
  "delivery_status": null,
  "deposited_amount": null,
  "deposited_amount": 100000,
  "deposited_at": null,
  "description": null,
  "external_routing_number": null,
  "first_return_at": null,
  "front_image": null,
  "id": "chkt_2RIYDHnZCWKEYyU12qhTpjsVmzy",
  "idempotency_key": null,
  "is_preview_pdf_available": false,
  "issued_at": "2023-06-16T18:09:00.653492083Z",
  "manual_review_at": null,
  "memo": null,
  "message": null,
  "micr_line": {
    "amount_field": "100000",
    "auxiliary_on_us": "1003",
    "external_processing_code": "",
    "on_us": "199175569013840",
    "payor_bank_routing_number": "121145307"
  },
  "payee_address": null,
  "payee_name": "Olive Column",
  "pending_deposit_at": null,
  "pending_first_return_at": null,
  "pending_stop_at": null,
  "pending_user_initiated_return_at": null,
  "positive_pay_amount": "100000",
  "reclear_at": null,
  "rejected_at": null,
  "second_return_at": null,
  "settled_at": null,
  "status": "issued",
  "stopped_at": null,
  "type": "debit",
  "updated_at": "2023-06-16T18:09:00.654Z",
  "user_initiated_return_submitted_at": null,
  "user_initiated_returned_at": null,
  "user_initiated_return_dishonored_at": null
}
List all check transfer
GET

/transfers/checks

Retrieve all check transfers on your platform.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/transfers/checks' \
  -u :<YOUR API KEY>

Response

200

400

{
  "transfers":[
    {
      "account_number_id": "acno_2Nc1pSb55eCJ7YxQnzCVis9OXrv",
      "back_image": null,
      "bank_account_id": "bacc_2Nc1pNdlOtyKM0SzfemCyHsWUn5",
      "check_number": 1003,
      "created_at": "2023-06-16T18:09:00.61936799Z",
      "currency_code": "USD",
      "delivered_by_column": false,
      "delivery_status": null,
      "deposited_amount": null,
      "deposited_at": null,
      "description": null,
      "external_routing_number": null,
      "first_return_at": null,
      "front_image": null,
      "id": "chkt_2RIYDHnZCWKEYyU12qhTpjsVmzy",
      "idempotency_key": null,
      "is_preview_pdf_available": false,
      "issued_at": "2023-06-16T18:09:00.653492083Z",
      "manual_review_at": null,
      "memo": null,
      "message": null,
      "micr_line": {
        "amount_field": "100000",
        "auxiliary_on_us": "1003",
        "external_processing_code": "",
        "on_us": "199175569013840",
        "payor_bank_routing_number": "121145307"
      },
      "payee_address": null,
      "payee_name": "Olive Column",
      "pending_deposit_at": null,
      "pending_first_return_at": null,
      "pending_stop_at": null,
      "pending_user_initiated_return_at": null,
      "positive_pay_amount": "100000",
      "reclear_at": null,
      "rejected_at": null,
      "second_return_at": null,
      "settled_at": null,
      "status": "issued",
      "stopped_at": null,
      "type": "debit",
      "updated_at": "2023-06-16T18:09:00.654Z",
      "user_initiated_return_submitted_at": null,
      "user_initiated_returned_at": null,
      "user_initiated_return_dishonored_at": null
    }
  ]
  "has_more": true
}
Stop a check transfer
POST

/transfers/checks/<check_transfer_id>/stop-payment

Create a stop payment on a single check transfer by its ID. A check can only be stopped if it is of type debit and is in issued or manual_review status. A stopped check will move into a pending_stop status with a pending_stop_at timestamp until funds are released, at which point the status will be stopped and the stopped_at timestamp will be set.

Path Parameters
check_transfer_id

string

Required

ID of the check transfer you're looking up.
Request
curl 'https://api.column.com/transfers/checks/<check_transfer_id>/stop-payment' \
  -XPOST \
  -u :<YOUR API KEY>

Response

200

400

{
  "account_number_id": "acno_2Nc1pSb55eCJ7YxQnzCVis9OXrv",
  "back_image": null,
  "bank_account_id": "bacc_2Nc1pNdlOtyKM0SzfemCyHsWUn5",
  "check_number": 1003,
  "created_at": "2023-06-16T18:09:00.61936799Z",
  "currency_code": "USD",
  "delivered_by_column": false,
  "delivery_status": null,
  "deposited_amount": null,
  "deposited_at": null,
  "description": null,
  "external_routing_number": null,
  "first_return_at": null,
  "front_image": null,
  "id": "chkt_2RIYDHnZCWKEYyU12qhTpjsVmzy",
  "idempotency_key": null,
  "is_preview_pdf_available": false,
  "issued_at": "2023-06-16T18:09:00.653492083Z",
  "manual_review_at": null,
  "memo": null,
  "message": null,
  "micr_line": {
    "amount_field": "100000",
    "auxiliary_on_us": "1003",
    "external_processing_code": "",
    "on_us": "199175569013840",
    "payor_bank_routing_number": "121145307"
  },
  "payee_address": null,
  "payee_name": "Olive Column",
  "pending_deposit_at": null,
  "pending_first_return_at": null,
  "pending_stop_at": "2023-06-16T18:09:00.654Z",
  "pending_user_initiated_return_at": null,
  "positive_pay_amount": "100000",
  "reclear_at": null,
  "rejected_at": null,
  "second_return_at": null,
  "settled_at": null,
  "status": "pending_stop",
  "stopped_at": null,
  "type": "debit",
  "updated_at": "2023-06-16T18:09:00.654Z",
  "user_initiated_return_submitted_at": null,
  "user_initiated_returned_at": null,
  "user_initiated_return_dishonored_at": null
}
Deposit a check
POST

/transfers/checks/deposit

Deposit a check into a Column bank account.

Body Parameters
bank_account_id

string

Required

ID of the bank account to which the check will be deposited.

account_number_id or bank_account_id is required.

account_number_id

string

Optional

Account number to which the check will be deposited. If no account_number_id is specified, the default account number on bank_account_id is used.

account_number_id or bank_account_id is required.

description

string

Optional

Description of the deposited check visible only in your platform. Maximum length: 255 characters.

deposited_amount

int64

Required

Amount (in cents) of the check that is being deposited.

e.g. $1.75 would be represented by 175.

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

micr_line

object

Required

The MICR line is the sequence of numbers and characters at the bottom of a check.

amount_field

string

Optional

Amount of the issued check.

auxiliary_on_us

string

Optional

Auxiliary on us. This field is provided by the issuing bank and most commonly used for a check number. In many cases, auxiliary_on_us will be the string before a routing number in the MICR line.

external_processing_code

string

Optional

External processing code.

payor_bank_routing_number

string

Required

Payor bank routing number.

on_us

string

Required

On us. This field is provided by the issuing bank and most commonly contains both check number and account number. In many cases, on-us will be the string after a routing number in the MICR line.

image_front

string

Required

Base64 encoded image of the front of the check. The image should be cropped along the edges of the check and oriented correctly.

image_back

string

Required

Base64 encoded image of the back of the check. The image should be cropped along the edges of the check and oriented correctly.

Request
curl 'https://api.column.com/transfers/checks/deposit' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d bank_account_id="<bank_account_id>" \
  -d deposited_amount=50000 \
  -d currency_code="USD" \
  -d micr_line[auxiliary_on_us]="1" \
  -d micr_line[on_us]="1" \
  -d micr_line[payor_bank_routing_number]="123456789" \
  -d image_front="<base64_encoded_image>" \
  -d image_back="<base64_encoded_image>"
Response

200

400

{
  "account_number_id": "acno_25nacNsLD8qLI1Vc6x67sxFU27c",
  "back_image":"<base 64 encoded string>"
  "bank_account_id": "bacc_25nVQr05nZybpyEzw8j0wV6VRUh",
  "check_number": "1001",
  "created_at": "2022-03-02T00:05:54Z",
  "currency_code": "USD",
  "delivered_by_column": false,
  "delivery_status": null,
  "deposited_amount": "100000",
  "deposited_at": "2022-03-02T00:05:54Z",
  "description": "deposited check transfer",
  "external_routing_number": "<payor bank routing number>",
  "first_return_at": null,
  "front_image":"<base 64 encoded string>"
  "id": "chkt_25o3LGGbxLjpabTm6zHquAM1ti2",
  "idempotency_key": "",
  "is_preview_pdf_available": false,
  "issued_at": null,
  "manual_review_at": null,
  "memo": null,
  "message": null,
  "micr_line": {
    "amount_field": "100000",
    "auxiliary_on_us": "1001",
    "external_processing_code": "",
    "payor_bank_routing_number": "322271627",
    "on_us": "12345678910"
  },
  "payee_address": null,
  "payee_name": "Olive Column",
  "pending_deposit_at": "2022-03-02T00:05:54Z",
  "pending_first_return_at": null,
  "pending_stop_at": null,
  "pending_user_initiated_return_at": null,
  "positive_pay_amount": null,
  "reclear_at": null,
  "rejected_at": null,
  "second_return_at": null,
  "settled_at": "2022-03-02T00:05:54Z",
  "status": "settled",
  "stopped_at": null,
  "deposited_amount": 50000,
  "rejected_at": null,
  "status": "pending_deposit",
  "type": "credit",
  "updated_at": "2022-03-02T00:05:54Z",
  "user_initiated_return_submitted_at": null,
  "user_initiated_returned_at": null,
  "user_initiated_return_dishonored_at": null
}
Capture front of check
POST

/transfers/checks/image/front

Preprocess an image of the front of a check. The response is going to include the parsed MICR Line data, deposit amount, and a processed TIFF image that conforms to the ICL file standard. The response fields are in the same format as the input of the check deposit API.

We recommend placing the check on a darker background, such as a darker shade if the check paper is white. The check itself should occupy the majority of the image. Additionally, we suggest using a higher DPI to ensure that the characters are easily recognizable. It is also advisable to correctly orient the check.

Note that the MICR and amount parsing is still in Beta. We recommend you validate parsed data with the user before submitting a check deposit.

Body Parameters
file

file

Required

An image file to upload (maximum size: 16MB). Most common image types are supported (PNG, JPEG, HEIC, TIFF, etc.). The file should follow the specifications of RFC 2388 for multipart/form-data protocol.

Request
curl 'https://api.column.com/transfers/checks/image/front' \
  -u :<YOUR API KEY> \
  -F file=@<YOUR FILE> \
Response

200

400

{
  "image_front": "<base64_encoded_tiff_image>"
  "micr_line": {
    "amount_field": "50000",
    "auxiliary_on_us": "1",
    "on_us": "string",
    "payor_bank_routing_number": "string"
  },
  "micr_line_confidence": 0.99,
  "deposited_amount": "50000",
  "deposited_amount_confidence": 0.99,
  "receiver_name": "string",
  "receiver_name_confidence": 0.99,
  "receiver_address": "string",
  "receiver_address_confidence": 0.99,
}
Capture back of check
POST

/transfers/checks/image/back

Preprocess an image of the back of a check. The response is going to include a processed TIFF image that conforms to the ICL file standard. The response fields are in the same format as the input of the check deposit API.

We recommend placing the check on a darker background, such as a darker shade if the check paper is white. The check itself should occupy the majority of the image. Additionally, we suggest using a higher DPI to ensure that the characters are easily recognizable. It is also advisable to correctly orient the check.

Note that the MICR and amount parsing is still in Beta. We recommend you validate parsed data with the user before submitting a check deposit.

Body Parameters
file

file

Required

An image file to upload (maximum size: 16MB). Most common image types are supported (PNG, JPEG, HEIC, TIFF, etc.). The file should follow the specifications of RFC 2388 for multipart/form-data protocol.

Request
curl 'https://api.column.com/transfers/checks/image/back' \
  -u :<YOUR API KEY> \
  -F file=@<YOUR FILE> \
Response

200

400

{
  "image_back": "<base64_encoded_tiff_image>"
}
Check return object

The check return object represents the current state of a single check return initiated by or received by Column. The check return object exposes all relevant information about the check return to developers. Read about more about check returns here.

Object Parameters
cancelled_at

string

Date (format: YYYY-MM-DD) on which the check return was cancelled.

check_transfer_id

string

ID of the check transfer that has been returned.

created_at

string

Date (format: YYYY-MM-DD) on which the check return was created.

id

string

The unique id of the check return object.

pending_review_at

string

Date (format: YYYY-MM-DD) on which the check return was flagged for review.

processed_at

string

Date (format: YYYY-MM-DD) on which the check return was processed.

return_reason

string

The reason for which the check was returned.

status

string

The current status of the check return. Possible statuses are scheduled andprocessed.

updated_at

string

The timestamp at which the check return was last updated.

Check Return Object
{
  "cancelled_at": null, 
  "check_transfer_id": "chkt_2Mk9STaPIGvIPJFy2DTBmcQhGWr",
  "created_at": "2023-03-08T19:22:01Z",
  "id": "chrt_2MkEkAVdv0Cc80AJAzgq5QxXEk5",
  "pending_review_at": null,
  "processed_at": "2023-03-08T21:00:33Z",
  "return_reason": "Q",
  "status": "processed",
  "updated_at": "2023-03-08T21:00:33Z"
}

Create a check return
POST

/transfers/checks/<check_transfer_id>/return

Submit a request to return an incoming check transfer received from an ODFI. At most only one return request can be submitted for each check. You can read more about check returns here.

Path Parameters
check_transfer_id

string

Required

ID of the check transfer you're looking up.

Body Parameters
return_reason

string

Required

Return reason for a manual return. Only Q and N are allowed as manual return reasons.

Request
curl 'https://api.column.com/transfers/checks/<check_transfer_id>/return' \
  -XPOST \
  -u :<YOUR API KEY>
Response

200

400

{}
Get check transfer returns
GET

/transfers/checks/<check_transfer_id>/returns

Retrieve all returns for a check transfer by the check transfer ID.

Path Parameters
check_transfer_id

string

Required

ID of the check transfer for which you're looking up returns.
Request
curl 'https://api.column.com/transfers/checks/<check_transfer_id>/returns' \
  -u :<YOUR API KEY>

Response

200

400

{
  "returns": [
    {
      "cancelled_at": null, 
      "check_transfer_id": "chkt_2Mk9STaPIGvIPJFy2DTBmcQhGWr",
      "created_at": "2023-03-08T19:22:01Z",
      "id": "chrt_2MkEkAVdv0Cc80AJAzgq5QxXEk5",
      "pending_review_at": null,
      "processed_at": "2023-03-08T21:00:33Z",
      "return_reason": "Q",
      "status": "processed",
      "updated_at": "2023-03-08T21:00:33Z"
    }
  ],
  "has_more": false
}
List all check returns
GET

/transfers/checks/returns

Retrieve the return processing details of all check returns under your platform, including returns created by you and other financial institutions.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/transfers/checks/returns' \
  -u :<YOUR API KEY>

Response

200

400

{
  "returns": [
    {
      "cancelled_at": null, 
      "check_transfer_id": "chkt_2Mk9STaPIGvIPJFy2DTBmcQhGWr",
      "created_at": "2023-03-08T19:22:01Z",
      "id": "chrt_2MkEkAVdv0Cc80AJAzgq5QxXEk5",
      "pending_review_at": null,
      "processed_at": "2023-03-08T21:00:33Z",
      "return_reason": "Q",
      "status": "processed",
      "updated_at": "2023-03-08T21:00:33Z"
    },
    {
      "cancelled_at": null, 
      "check_transfer_id": "chkt_2NcKdWa6FQZ9wZ8ZNX8gijPjGXU",
      "created_at": "2023-03-27T23:00:17Z",
      "id": "chrt_2NcKdYxShVu8tl8DAxNPljMbdeG",
      "pending_review_at": null,
      "processed_at": "2023-03-28T00:00:31Z",
      "return_reason": "Y",
      "status": "processed",
      "updated_at": "2023-03-28T00:00:31Z"
    },
  ],
  "has_more": false
}
List all transfers
GET

/transfers

Returns all ACH, Book, Check, Wire, Realtime and SWIFT transfers, both incoming and outgoing. Transfers are sorted from newest to oldest (transfers created within the same second are sorted alphabetically by transfer ID). The transfer type is specified in the type field, which is one of ach_credit, ach_debit, book, check_credit (issued check), check_debit (deposited check), wire, realtime and swift.

The is_incoming field is used to flag incoming transfers. The sender is the originator of the transfer for ach_debit, ach_credit, wire, realtime and swift transfers. For incoming transfers, external_source and receiver_internal_account will be returned. For outgoing transfers, external_destination and sender_internal_account will be returned. For book transfers, sender_internal_account and receiver_internal_account will be returned.

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

type

string

Optional

Return results of the given transfer type (accepts multiple values, comma separated)

Possible enum values:

ach_debit
ach_credit
book
deposited_check
issued_check
wire
realtime
swift
bank_account_id

string

Optional

Return results where this bank account is either sender or receiver of the transfer.

sender_bank_account_id

string

Optional

Return results where this bank account is a sender of the transfer.

receiver_bank_account_id

string

Optional

Return results where this bank account is a receiver of the transfer.

account_number_id

string

Optional

Return results where this account number is either sender or receiver of the transfer.

sender_account_number_id

string

Optional

Return results where this account number is a sender of the transfer.

receiver_account_number_id

string

Optional

Return results where this account number is a receiver of the transfer.

counterparty_id

string

Optional

Return results associated with this counterparty.

transfer_id

string

Optional

Return results associated with this transfer_id (of any type)

description

string

Optional

Return results with transfers matching the description.

amount

string

Optional

Return results with transfers matching the amount.

amount_gt

int

Optional

Return results with transfers that have the amount greater than the value (in smallest currency unit)

amount_lt

int

Optional

Return results with transfers that have the amount lesser than the value (in smallest currency unit)

amount_gte

int

Optional

Return results that have the amount greater or equal than the value (in smallest currency unit)

amount_lte

int

Optional

Return results with transfers that have the amount lesser than or equal the value (in smallest currency unit)

created_at_gt

date / time

Optional

Return results that were created after the date / time specified. Example: 2023-12-01T00:00:00-00:00

created_at_lt

date / time

Optional

Return results that were created before the date / time specified. Example: 2023-12-01T00:00:00-00:00

created_at_gte

date / time

Optional

Return results that were created after or equal to the date / time specified. Example: 2023-12-01T00:00:00-00:00

created_at_lte

date / time

Optional

Return results that were created before or equal to the date / time specified. Example: 2023-12-01T00:00:00-00:00

is_incoming

boolean

Optional

Return transfers that is either incoming or outgoing.

status

string

Optional

Return results with this status (accepts multiple values, comma separated).

Possible enum values:

canceled
completed
deposited
failed
first_return
hold
initiated
issued
manual_review
manual_review_approved
pending_deposit
pending_first_return
pending_reclear
pending_return
pending_second_return
pending_stop
pending_submission
pending_user_initiated_return
recleared
rejected
return_contested
return_dishonored
returned
scheduled
second_return
settled
stopped
submitted
user_initiated_returned
user_initiated_return_submitted
user_initiated_return_dishonored
pending
accepted
blocked
Request
curl 'https://api.column.com/transfers' \
  -u :<YOUR API KEY>
Response

200

400

{
  "transfers": [
    {
      "id": "string",
      "created_at": "2021-11-29T21:16:16.779Z",
      "updated_at": "2021-11-29T21:16:16.779Z",
      "completed_at": "2021-11-29T21:16:16.779Z",
      "status": "string",
      "type": "string",
      "amount": int64,
      "currency_code": "string",
      "is_incoming": true,
      "idempotency_key": "string",
      "description": "string",
      "sender_internal_account": {
        "bank_account_id": "string",
        "account_number_id": "string"
      },
      "external_source": {
        "bank_name": "string",
        "sender_name": "string",
        "counterparty_id": "string"
      },
      "receiver_internal_account": {
        "bank_account_id": "string",
        "account_number_id": "string"
      },
      "external_destination": {
        "counterparty_id": "string"
      }
    }
  ],
  "has_more": true
  "total_results_count": 100,
}
Receive an ACH Credit
POST

/simulate/receive-ach-credit

Simulates an incoming ACH Credit transfer to an account for the amount specified

To more accurately represent a production environment, we process incoming ACH transfers every hour. You will not see the effects of an incoming ACH transfer till the ACH is processed.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit or debit

amount

string

Required

Amount (in cents) to credit or debit the account

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/receive-ach-credit' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="USD"
Response

200

400

{}
Receive an ACH Debit
POST

/simulate/receive-ach-debit

Simulates an incoming ACH Debit transfer from an account for the amount specified.

To more accurately represent a production environment, we process incoming ACH transfers every hour. You will not see the effects of an incoming ACH transfer till the ACH is processed.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit or debit

amount

string

Required

Amount (in cents) to credit or debit the account

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/receive-ach-debit' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="USD"
Response

200

400

{}
Receive a Wire Transfer
POST

/simulate/receive-wire

Simulates an incoming wire transfer to an account for the amount specified.

We recommend using this API to set a balance on your account in the sandbox environment. This API is always enabled, and is not affected by the operating hours of the sandbox FedWire system.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit

amount

string

Required

Amount (in cents) to credit the account

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/receive-wire' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="USD"
Response

200

400

{}
Receive an international wire
POST

/simulate/receive-international-wire

Simulates an incoming international wire transfer to an account for the amount specified.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit

amount

string

Required

Amount (in the smallest unit of the currency) to credit the account.

e.g. CNY 1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. CNY

Request
curl 'https://api.column.com/simulate/receive-international-wire' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="CNY"
Response

200

400

{}
Receive a wire drawdown request
POST

/simulate/receive-wire-drawdown-request

Simulates an incoming wire drawdown request into the specified account number id.

Body Parameters
destination_account_number_id

string

Required

Identifier for Column bank account which the drawdown request will be processed from

amount

string

Required

Amount (in cents) specified in the drawdown request

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/receive-wire-drawdown-request' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="USD"
Response

200

400

{}
Receive a wire return request
POST

/simulate/receive-wire-return-request

Simulates an incoming wire return request for a simulated incoming wire transfer.

Body Parameters
wire_transfer_id

string

Required

ID of the incoming wire transfer that we want to receive a return request for

Request
curl 'https://api.column.com/simulate/receive-wire-return-request' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d wire_transfer_id="<wire_transfer_id>"
Response

200

400

{}
Receive a Realtime Transfer
POST

/simulate/transfers/realtime/receive-credit

Simulates an incoming realtime transfer to an account for the amount specified.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit

amount

string

Required

Amount (in cents) to credit the account

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/transfers/realtime/receive-credit' \
  -X POST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="100000" \
  -d currency_code="USD"
Response

200

400

{}
Receive a Realtime RFP (Request for Payment)
POST

/simulate/transfers/realtime/receive-rfp

Simulates an incoming Realtime RFP to an account for the amount specified.

Body Parameters
destination_account_number_id

string

Required

Identifier for the account to credit

amount

string

Required

Amount (in cents) to credit the account

e.g. $1.75 would be represented by 175

currency_code

string

Required

The three-letter currency code defined in ISO 4217. e.g. USD

Request
curl 'https://api.column.com/simulate/transfers/realtime/receive-rfp' \
  -X POST \
  -u :<YOUR API KEY> \
  -d destination_account_number_id="<destination_account_number_id>" \
  -d amount="12300" \
  -d currency_code="USD"
Response

200

400

{}
Settle ACH transfer
POST

/simulate/transfers/ach/settle

Forces the settlement of an outgoing ACH transfer, regardless of the operating hours of the Sandbox Fed

Body Parameters
ach_transfer_id

string

Required

ID of the outgoing transfer to force a settlement

Request
curl 'https://api.column.com/simulate/transfers/ach/settle' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d ach_transfer_id="<ach_transfer_id>"
Response

200

400

{}
Settle wire transfer
POST

/simulate/transfers/wire/settle

Forces the submission and settlement of an outgoing Wire transfer, regardless of the operating hours of the Sandbox Fed.

The wire message should move from PENDING_SUBMISSION to COMPLETED after this API call

Body Parameters
wire_transfer_id

string

Required

ID of the outgoing transfer to force a settlement

Request
curl 'https://api.column.com/simulate/transfers/wire/settle' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d wire_transfer_id="<wire_transfer_id>"
Response

200

400

{}
Settle check deposit
POST

/simulate/transfers/checks/settle

Forces the settlement of a deposited check. After a check is deposited in sandbox, it is going to move from a pending_deposit state to a deposited state within an hour to simulate check forwarding to the Fed. This endpoint allows you to force settlement after the check is transitioned to a deposited state. This will transition the transfer to settled and make funds available immediately.

Body Parameters
check_transfer_id

string

Required

ID of the check transfer

Request
curl 'https://api.column.com/simulate/transfers/checks/settle' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d check_transfer_id="<check_transfer_id>"
Response

200

400

{}
Deposit an issued check
POST

/simulate/deposit-issued-check

Simulates the deposit of an issued check. This API is always enabled, and is not affected by the operating hours of the sandbox Fed Check21 system.

Body Parameters
check_transfer_id

string

Required

Identifier for the issued check transfer to settle.

Request
curl 'https://api.column.com/simulate/deposit-issued-check' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d check_transfer_id="<check_transfer_id>" \
Response

200

400

{}
Event object

The event object is a snapshot of a particular data object (ACH, wire, book, return...etc) in time. An event object will be created each time a data object is created, or changes state. For example, you can use events to track state changes of a particular transfer over time - like an ACH transfer that has been initiated, submitted, settled, or returned. Read about more about events here.

Object Parameters
created_at

string

The timestamp at which the event was emitted.

data

object

The object instance that triggered the event to be emitted. For example, on an ach.* event, this will be the ACH object.

id

string

The unique id of the object

type

string

The type of event which was emitted. See Events and Webhooks for more information.

Event object
{
{
  "created_at": "2022-02-21T17:19:41Z",
  "data": {
      <returned object>
  },
  "id": "evnt_25Qex2OLy3qrssrKvds7df4D1ej",
  "type": "book.transfer.completed"
}
}
List all events
GET

/events

Lists all events, inclusive of events sent via webhooks.

Query Parameters
created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an event ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with evnt_id1, your subsequent call can include ending_before=evnt_id1 in order to fetch the previous page of the list.

limit

int32

Optional

A limit of the number of objects to be returned. The default is 20.

object_ids

array of strings

Optional

Filter events by their associated objects (e.g., wire transfer IDs, bank account IDs, etc.). Format: object_ids=id_1&object_ids=id_2&object_ids=id_3....

starting_after

string

Optional

A cursor for use in pagination. starting_after is an event ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with evnt_id2, your subsequent call can include starting_after=evnt_id2 in order to fetch the next page of the list.

types

array of strings

Optional

The types of events you want to retrieve (format: types=type_1&types=type_2&types=type_3...). See all events here.

Request
curl 'https://api.column.com/events?types=type_1&types=type_2&types=type_3' \
  -u :<YOUR API KEY>
Response

200

400

{
  "events": [
    {
      "id": "string",
      "created_at": "2021-11-29T21:26:42.872Z",
      "type": "string",
      "data": {
        "type_url": "string",
        "value": "string"
      }
    }
  ], 
  "has_more": false
}
List all webhook events
GET

/events/webhook

Lists just the events that resulted in webhooks. Useful for reconciling webhooks.

Query Parameters
created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an event ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with evnt_id1, your subsequent call can include ending_before=evnt_id1 in order to fetch the previous page of the list.

limit

int32

Optional

A limit of the number of objects to be returned. The default is 20.

object_ids

array of strings

Optional

Filter events by their associated objects (e.g., wire transfer IDs, bank account IDs, etc.). Format: object_ids=id_1&object_ids=id_2&object_ids=id_3....

starting_after

string

Optional

A cursor for use in pagination. starting_after is an event ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with evnt_id2, your subsequent call can include starting_after=evnt_id2 in order to fetch the next page of the list.

types

array of strings

Optional

The types of events you want to retrieve (format: types=type_1&types=type_2&types=type_3...). See all events here.

Request
curl 'https://api.column.com/events/webhook' \
  -u :<YOUR API KEY>
Response

200

400

{
  "events": [
    {
      "id": "string",
      "created_at": "2021-11-29T21:26:42.872Z",
      "type": "string",
      "data": {
        "type_url": "string",
        "value": "string"
      }
    }
  ], 
  "has_more": false
}
Get an event by ID
GET

/events/<id>

Retrieve an event by its id

Path Parameters
id

string

Required

Request
curl 'https://api.column.com/events/<event_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T21:29:34.023Z",
  "type": "string",
  "data": {
    "type_url": "string",
    "value": "string"
  }
}
Document object

Document objects are a pointer to documents that are created or stored on Column. There are two main types of documents: Documents you upload to Column which support KYC/KYB verification for entities. And report documents generated by Column, which you can download.

Object Parameters
checksum

string

The SHA-256 checksum of the uploaded document.

created_at

string

Timestamp at which the document was created in the Column system.

description

string

Description of the document provided when the document was created.

id

string

The unique id of this object.

size

integer

type

string

The type of document. Can be one of bank_interest_report, bank_summary_report, bank_transaction_report, check_attachment, daily_loan_tape, daily_originations_activity, daily_statement, daily_transaction_activity, dda_agreement, identity_license, identity_passport, identity_utility, irs_letter, monthly_applications, monthly_loan_reporting, monthly_statement, network_settlement_file, receivable_purchases, w9 or other.

updated_at

string

The timestamp the document was updated.

url

string

URL to download the document. Expire after 60 seconds. Note: When retrieving this URL with curl in terminal, some characters become encoded and copy and pasting the URL will throw an error in the browser. Try testing this out using POSTMAN instead.

Document object
{
  "checksum": "f58b9e7dda62420b6c016ed71ff5d6b224437ec74ace972a333622e1de8bbfdf",
  "created_at": "2022-03-03T22:47:33Z",
  "description": "",
  "id": "docu_25tY3k5619LebLZNk4EcN1a9Zka",
  "size": 422989,
  "type": "identity_license",
  "updated_at": "2022-03-03T22:47:33Z",
  "url": "https://bucket.s3.us-west-2.amazonaws.com/..."
}
Upload a document
POST

/documents

To upload a file to Column, you will need to send a request with Content-Type: multipart/form-data. The request should contain the file you would like to upload, as well as other metadata.

Body Parameters
file

file

Required

A file to upload (maximum size: 5GB). The file should follow the specifications of RFC 2388 for multipart/form-data protocol.

type

string

Required

bank_interest_report: report detailing bank interest information
bank_summary_report: a summary report of bank account activity
bank_transaction_report: a report containing bank transaction details
check_attachment: an attachment to a mailed check. PDFs, HTML, PNGs, and JPGs are allowed as attachments. For PDFs, PNGs, and JPGs, all pages must be sized at 8.5"x11" at 300 DPI. If HTML is supplied, it will be rendered and trimmed to fit as many 8.5"x11" pages as necessary. If a PDF is provided, it must be 6 pages or fewer. The attachment will be printed double-sided in black and white and included in the envelope after the check page. The ID can be used as `attachment_document_id` in the check issuing request.
daily_loan_tape: daily report of loan activities
daily_originations_activity: daily report of loan originations
daily_statement: daily account statement
daily_transaction_activity: daily report of transaction activities
dda_agreement: a demand deposit account agreement
identity_license: a document to verify the identity of an account owner (e.g., driver licenses, state ID cards, Articles of Incorporation, etc.)
identity_passport: the passport of an account owner to verify the identity
identity_utility: an utility bill of an account owner
irs_letter: correspondence from the IRS
monthly_applications: monthly report of applications
monthly_loan_reporting: monthly report of loan activities
monthly_statement: monthly account statement
network_settlement_file: file containing network settlement information
receivable_purchases: documentation of receivable purchases
w9: IRS Form W-9 for tax identification
other: any other type of document not covered by the above categories
description

string

Optional

Description of the document. Maximum length: 127 characters.

tag

string

Optional

An optional tag for document identification and organization. Maximum length: 255 characters.

Request
curl 'https://api.column.com/documents' \
  -u :<YOUR API KEY> \
  -F file=@<YOUR FILE> \
  -F type="identity_license"
Response

200

400

{
  "checksum": "f58b9e7dda62420b6c016ed71ff5d6b224437ec74ace972a333622e1de8bbfdf",
  "created_at": "2022-03-03T22:47:33Z",
  "description": "",
  "id": "docu_25tY3k5619LebLZNk4EcN1a9Zka",
  "size": 422989,
  "type": "identity_license",
  "updated_at": "2022-03-03T22:47:33Z",
  "url": "https://bucket.s3.us-west-2.amazonaws.com/..."
}
Get a document
GET

/documents/<document_id>

Retrieves the details of an existing document.

Path Parameters
document_id

string

Required

ID of the document you're requesting

Request
curl 'https://api.column.com/documents/<document_id>' \
  -u :<YOUR API KEY>'
Response

200

400

{
  "checksum": "f58b9e7dda62420b6c016ed71ff5d6b224437ec74ace972a333622e1de8bbfdf",
  "created_at": "2022-03-03T22:47:33Z",
  "description": "",
  "id": "docu_25tY3k5619LebLZNk4EcN1a9Zka",
  "size": 422989,
  "type": "identity_license",
  "updated_at": "2022-03-03T22:47:33Z",
  "url": "https://bucket.s3.us-west-2.amazonaws.com/..."
}
List all documents
GET

/documents

List all documents under the platform. Filtered results can be retrieved with extra parameters in the query.

Query Parameters
type

string

Optional

List documents that are of the specified document type. Can be one of bank_interest_report, bank_summary_report, bank_transaction_report, check_attachment, daily_loan_tape, daily_originations_activity, daily_statement, daily_transaction_activity, dda_agreement, identity_license, identity_passport, identity_utility, irs_letter, monthly_applications, monthly_loan_reporting, monthly_statement, network_settlement_file, receivable_purchases, w9 or other.

tag

string

Optional

List documents whose tag exactly match the specified value.

file_name

string

Optional

List documents whose file name contain the specified value.

description

string

Optional

List documents whose description contain the specified value.

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

created.gt

date-time

Optional

Return results where the specified time field is greater than this value.

created.gte

date-time

Optional

Return results where the specified time field is greater than or equal to this value.

created.lt

date-time

Optional

Return results where the specified time field is less than this value.

created.lte

date-time

Optional

Return results where the specified time field is less than or equal to this value.

Request
curl 'https://api.column.com/documents?type=identity_license' \
  -u :<YOUR API KEY>
Response

200

400

{
  "documents": [
    {
      "created_at": "2025-04-03T18:09:57Z",
      "description": "Identity license for Bob Smith",
      "ext": "jpeg",
      "id": "docu_2vEIREWZMACw88iXeToRJ34t8MV",
      "size": 30535,
      "tag": "drivers_license",
      "type": "identity_license"
    },
    {
      "created_at": "2025-04-03T17:54:01Z",
      "description": null,
      "ext": "jpeg",
      "id": "docu_2vEGVEsT9OTMpraLZyDG0TDMs7s",
      "size": 30535,
      "tag": null,
      "type": "identity_license"
    }
  ],
  "has_more": false
}%
Settlement Report object

The settlement report object is a pointer to a settlement report generated by Column. Settlement reports contain data about historical bank account balances, and historical bank account transactions (book transfers, ACH, and wires). Read more about reports here.

Object Parameters
columns

array

List of columns in the settlement report. Refer to Reporting Guidance for more details.

completed_at

string

The timestamp the settlement report was generated successfully.

created_at

string

The timestamp the settlement report was scheduled.

csv_document_id

string

Document ID to download the CSV format of the settlement report.

from_date

string

Starting date (inclusive, from the beginning of from_date in time_zone) of transactions included in the settlement report.

id

string

Unique identifier for the object.

initiated_at

string

The timestamp the settlement report was initiated to be processed.

json_document_id

string

Document ID to download the JSON format of the settlement report.

parquet_document_id

string

Document ID to download the Parquet format of the settlement report.

row_count

int32

Total number of records in the settlement report.

status

string

The current status of the report. Can be scheduled, initiated, completed, or failed.

time_zone

string

Time zone of the settlement report to decide day boundaries. It is a value defined in the IANA TZ database (e.g., America/Los_Angeles, UTC, etc.). You can set your platform reporting time zone in Platform Settings on Dashboard.

to_date

string

Ending date (inclusive, up to the end of to_date in time_zone) of transactions included in the settlement report.

type

string

Settlement report type. Can be bank_account_summary, bank_account_transaction, bank_account_daily_statement, loan_daily_summary.

updated_at

string

The timestamp the settlement report was last updated.

Settlement Report object
{
  "id": "srpt_27kkUzwpYqt78g3L1DWU7cBRjyL",
  "created_at": "2022-04-13T17:38:11Z",
  "updated_at": "2022-04-13T17:38:11Z",
  "type": "bank_account_transaction",
  "status": "completed",
  "time_zone": "America/Los_Angeles",
  "from_date": "2022-03-02",
  "to_date": "2022-03-02",
  "initiated_at": "2022-04-13T17:10:15Z",
  "completed_at": "2022-04-13T17:11:15Z",
  "row_count": 666,
  "columns": [
    "effective_at",
    "effective_at_utc",
    "bank_account_id",
    "bank_account_type",
    "account_number_id",
    "entity_id",
    "entity_name",
    "entity_type",
    "transaction_id",
    "transaction_type",
    "currency",
    "available_amount",
    "available_balance",
    "pending_amount",
    "pending_balance",
    "locked_amount",
    "locked_balance",
    "holding_amount",
    "holding_balance"
  ],
  "csv_document_id": "docu_27kh6IxwJjShHV314ig7ioPEwSf",
  "json_document_id": "docu_27kh6KhcfYDkPthUdoMSCHD3tv9",
  "parquet_document_id": "docu_27kh6LSgYvc1gdcLlpQnAOGzPl6"
}
Schedule a settlement report
POST

/reporting

Schedule a request to generate a settlement report. You must set your platform reporting time zone in Platform Settings on Dashboard. Please refer to our Reporting Guides for more details.

Body Parameters
from_date

string

Required

Starting date (inclusive) of data included. Earliest available date: 2022-01-01.

to_date

string

Required

Ending date (inclusive) of data included. Maximum date range: 93 days.

type

string

Required

Settlement report type. Can be bank_account_summary or bank_account_transaction.

Request
curl 'https://api.column.com/reporting' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d type="bank_account_transaction" \
  -d from_date="2022-03-01" \
  -d to_date="2022-03-31"
Response

200

400

{
  "id": "srpt_27kigaqHolth6UzjnOohU9tNdSt",
  "created_at": "2022-04-13T10:23:16",
  "updated_at": "2022-04-13T10:23:16",
  "type": "bank_account_transaction",
  "status": "scheduled",
  "time_zone": "America/Los_Angeles",
  "from_date": "2022-03-01",
  "to_date": "2022-03-31",
  "initiated_at": null,
  "completed_at": null,
  "row_count": null,
  "columns": null,
  "csv_document_id": "",
  "json_document_id": "",
  "parquet_document_id": ""
}
List all settlement reports
GET

/reporting

List all available settlement reports under the platform. Filtered results can be retrieved with extra parameters in the query.

Query Parameters
from_date

string

Optional

Starting date (inclusive) of data included. Format: YYYY-MM-DD.

to_date

string

Optional

Ending date (inclusive) of data included. Format: YYYY-MM-DD.

type

string

Optional

Settlement report type. Can be bank_account_summary, bank_account_transaction, bank_account_daily_statement, or loan_daily_summary.

limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

Request
curl 'https://api.column.com/reporting' \
  -u :<YOUR API KEY> \
  -d type="bank_account_transaction" \
  -d from_date="2022-03-01" \
  -d to_date="2022-03-02"
Response

200

400

{
  "reports": [
    {
      "id": "srpt_27kigaqHolth6UzjnOohU9tNdSt",
      "created_at": "2022-04-13T10:23:16",
      "updated_at": "2022-04-13T10:23:16",
      "type": "bank_account_transaction",
      "status": "scheduled",
      "time_zone": "America/Los_Angeles",
      "from_date": "2022-03-02",
      "to_date": "2022-03-02",
      "initiated_at": null,
      "completed_at": null,
      "row_count": null,
      "columns": null,
      "csv_document_id": "",
      "json_document_id": "",
      "parquet_document_id": ""
    },
    {
      "id": "srpt_27kkUwEPiFqmhxLsDgLihgE8pKr",
      "created_at": "2022-04-13T17:38:11Z",
      "updated_at": "2022-04-13T17:38:11Z",
      "type": "bank_account_transaction",
      "status": "completed",
      "time_zone": "America/Los_Angeles",
      "from_date": "2022-03-01",
      "to_date": "2022-03-01",
      "initiated_at": "2022-04-13T17:10:15Z",
      "completed_at": "2022-04-13T17:11:15Z",
      "row_count": 888,
      "columns": [
        "effective_at",
        "effective_at_utc",
        "bank_account_id",
        "bank_account_type",
        "account_number_id",
        "entity_id",
        "entity_name",
        "entity_type",
        "transaction_id",
        "transaction_type",
        "currency",
        "available_amount",
        "available_balance",
        "pending_amount",
        "pending_balance",
        "locked_amount",
        "locked_balance",
        "holding_amount",
        "holding_balance"
      ],
      "csv_document_id": "docu_27kh6MA1yp5d1QT7HorEchZrwab",
      "json_document_id": "docu_27kh6MzwxYZGGVa4ZD7GICMY5kd",
      "parquet_document_id": "docu_27kh6PbEbYbhMHEDocJ7pYQFQZo"
    }
  ],
  "has_more": false
}
Get a settlement report by ID
GET

/reporting/<settlement_report_id>

Get a settlement report by its ID. Please refer to our Reporting Guides for more details.

Path Parameters
settlement_report_id

string

Required

The ID of the settlement report you are looking up

Request
curl 'https://api.column.com/reporting/srpt_27kigaqHolth6UzjnOohU9tNdSt' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "srpt_27kkUzwpYqt78g3L1DWU7cBRjyL",
  "created_at": "2022-04-13T17:38:11Z",
  "updated_at": "2022-04-13T17:38:11Z",
  "type": "bank_account_transaction",
  "status": "completed",
  "time_zone": "America/Los_Angeles",
  "from_date": "2022-03-02",
  "to_date": "2022-03-02",
  "initiated_at": "2022-04-13T17:10:15Z",
  "completed_at": "2022-04-13T17:11:15Z",
  "row_count": 666,
  "columns": [
    "effective_at",
    "effective_at_utc",
    "bank_account_id",
    "bank_account_type",
    "account_number_id",
    "entity_id",
    "entity_name",
    "entity_type",
    "transaction_id",
    "transaction_type",
    "currency",
    "available_amount",
    "available_balance",
    "pending_amount",
    "pending_balance",
    "locked_amount",
    "locked_balance",
    "holding_amount",
    "holding_balance"
  ],
  "csv_document_id": "docu_27kh6IxwJjShHV314ig7ioPEwSf",
  "json_document_id": "docu_27kh6KhcfYDkPthUdoMSCHD3tv9",
  "parquet_document_id": "docu_27kh6LSgYvc1gdcLlpQnAOGzPl6"
}
Webhook object

The webhook object is the current state of a particular webhook endpoint set up in Column. Webhook endpoints are used to configure URLs used to receive Column events. Read about more about events and webhooks here.

Object Parameters
created_at

string

Date (format: YYYY-MM-DD) on which the event was emitted.

description

string

A description for this webhook.

enabled_events

array

A list of events and event types which are being sent to this webhook's url.

id

string

The unique id of the object.

is_disabled

boolean

Indicates whether this webhook url is actively receiving events.

secret

string

Secret key which allows you to verify that the event was sent by Column, and not by a third party.

updated_at

string

Timestamp of when this webhook was last updated.

url

string

The https url that webhooks are going to be delivered to.

e.g. https://yoursite.com/columnevents

Webhook object
{
  "created_at": "2022-02-08T18:00:02Z",
  "description": "",
  "enabled_events": ["*"],
  "id": "whep_24q1FvNZuDjwj5w310VaD46oFTD",
  "is_disabled": false,
  "secret": "whsr_24q1Fwr2aFvAW9BbL5gXXRyS5gR",
  "updated_at": "2022-03-03T00:41:04Z",
  "url": "https://webhook.site/af74c831-b794-4311-9d49-2678e6faee36"
}
Create a webhook endpoint
POST

/webhook-endpoints

Create a webhook url and description.

This can also be done on the dashboard.

Body Parameters
enabled_events

array of strings

Required

Enables you to subscribe to certain events. See all events here.

enabled_events can contain specific event types, or can include wildcard string (e.g., ach.* for all ACH events)

url

string

Required

The https url that webhooks are going to be delivered to.

e.g. https://yoursite.com/columnevents

description

string

Optional

A description for this webhook.

Request
curl 'https://api.column.com/webhook-endpoints' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d "enabled_events[]"="ach.*" \
  -d url="https://docs.column.com"
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T21:30:48.799Z",
  "updated_at": "2021-11-29T21:30:48.799Z",
  "description": "string",
  "enabled_events": ["string"],
  "secret": "string",
  "is_disabled": true,
  "url": "string"
}
List all webhook endpoints
GET

/webhook-endpoints

List all webhooks under your developer account

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned, between 1 and 100. The default is 10.

starting_after

string

Optional

A cursor for use in pagination. starting_after is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with foo_ZXhhbXBsZQo, your subsequent call can include starting_after=foo_ZXhhbXBsZQo in order to fetch the next page of the list.

ending_before

string

Optional

A cursor for use in pagination. ending_before is an ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with foo_ZXhhbXBsZQo=, your subsequent call can include ending_before=foo_ZXhhbXBsZQo= in order to fetch the previous page of the list.

Request
curl 'https://api.column.com/webhook-endpoints' \
  -u :<YOUR API KEY>
Response

200

400

{
  "webhook_endpoints": [
    {
      "id": "string",
      "created_at": "2021-11-29T21:35:26.409Z",
      "updated_at": "2021-11-29T21:35:26.409Z",
      "description": "string",
      "enabled_events": ["string"],
      "secret": "string",
      "is_disabled": true,
      "url": "string"
    }
  ]
}
Get a webhook endpoint by ID
GET

/webhook-endpoints/<id>

Retrieve information about the webhook by its id

Path Parameters
id

string

Required

Request
curl 'https://api.column.com/webhook-endpoints/<webhook_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T21:37:17.367Z",
  "updated_at": "2021-11-29T21:37:17.367Z",
  "description": "string",
  "enabled_events": ["string"],
  "secret": "string",
  "is_disabled": true,
  "url": "string"
}
Update a webhook url
PATCH

/webhook-endpoints/<id>

Update fields on the webhooks

Path Parameters
id

string

Required

The ID of the webhook endpoint you want to update.

Body Parameters
enabled_events

array of strings

Required

Enables you to subscribe to certain events. See all events here.

enabled_events can contain specific event types, or can include wildcard string (e.g., ach.* for all ACH events)

url

string

Required

The https url that webhooks are going to be delivered to.

e.g. https://yoursite.com/columnevents

description

string

Optional

A description for this webhook.

is_disabled

boolean

Optional

Disable the webhook endpoint if set to true.

Request
curl 'https://api.column.com/webhook-endpoints/<webhook_id>' \
  -XPATCH \
  -u :<YOUR API KEY> \
  -d "enabled_events[]"="ach.*" \
  -d url="https://newsdocs.column.com"
Response

200

400

{
  "id": "string",
  "created_at": "2021-11-29T21:38:16.031Z",
  "updated_at": "2021-11-29T21:38:16.031Z",
  "description": "string",
  "enabled_events": ["string"],
  "secret": "string",
  "is_disabled": true,
  "url": "string"
}
Delete a webhook endpoint
DELETE

/webhook-endpoints/<id>

Deletes a webhook

Path Parameters
id

string

Required

The ID of the webhook endpoint you want to delete.

Request
curl 'https://api.column.com/webhook-endpoints/<webhook_id>' \
  -XDELETE \
  -u :<YOUR API KEY>
Response

200

400

{}
Verify a webhook endpoint
POST

/webhook-endpoints/<id>/verify

Verifies a webhook

Path Parameters
id

string

Required

The ID of the webhook endpoint you want to verify.

Body Parameters
event_type

string

Required

Event type. See all events here.

Request
curl 'https://api.column.com/webhook-endpoints/<webhook_id>/verify' \
  -XPOST \
  -u :<YOUR API KEY> \
  -d event_type="ach.outgoing_transfer.initiated"
Response

200

400

{
  "request_body": "string",
  "response_body": "string",
  "response_code": 0,
  "success": true
}
List all webhook deliveries
GET

/webhook-deliveries/endpoint/<id>

List all the webhook delivery and retry attempts for this endpoint.

Path Parameters
id

string

Required

Query Parameters
limit

int32

Optional

A limit of the number of objects to be returned. The default is 20.

Request
curl 'https://api.column.com/webhook-deliveries/endpoint/<webhook_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "webhook_deliveries": [
    {
      "event": {
        "id": "string",
        "created_at": "2021-11-29T21:41:05.518Z",
        "type": "string",
        "data": {
          "type_url": "string",
          "value": "string"
        }
      },
      "scheduled_at": "2021-11-29T21:41:05.518Z",
      "status": "UNKNOWN"
    }
  ]
}
List webhook deliveries by event
GET

/webhook-deliveries/event/<id>

List all the webhook delivery and retry attempts for this event.

Path Parameters
id

string

Required

Request
curl 'https://api.column.com//webhook-deliveries/event/<event_id>' \
  -u :<YOUR API KEY>
Response

200

400

{
  "webhook_deliveries": [
    {
      "event": {
        "id": "string",
        "created_at": "2021-11-29T21:47:18.447Z",
        "type": "string",
        "data": {
          "type_url": "string",
          "value": "string"
        }
      },
      "scheduled_at": "2021-11-29T21:47:18.447Z",
      "status": "UNKNOWN"
    }
  ]
}
Base admin transfer object

The admin transfer object represents a transfer initiated by Column that debits or credits a bank account on your platform. Read about more about administrative transfers here. Admin transfer objects are sent via webhooks or are available in the /events API response.

Object Parameters
created_at

string

Timestamp of when the admin transfer was created.

admin_transfer_id

string

The unique ID of the admin transfer.

bank_account_id

string

The bank account the admin transfer was executed against.

type

string

credit or debit depending on the direction of the transfer.

currency

string

The currency code of the transfer.

amount

int

The amount of the transfer in cents.

description

string

The reason for the transfer.

details_type

string

The type of the details struct.

details

json

Additional metadata related to the transfer, the schema is defined by the details_type field.

Admin Transfer Object
{
  "created_at": "2024-12-08T21:00:33Z"
  "admin_transfer_id": "admt_2q0qYAq5faWfM6YWJukxNCEkq7j", 
  "bank_account_id": "bacc_2q0qoKAZilGUfiIAaj9zpo4cBmj",
  "type": "credit",
  "currency": "USD",
  "amount": 12300,
  "description": "Reclaimed lost wire"
  "details_type": "reclaimed_wire",
  "details": {
  	...
  }
}
Admin transfers: Reclaimed lost wires

This use of the admin transfer is the scenario where a wire is sent to Column with invalid beneficiary details and is unable to be matched to a valid account. Once the correct account is found, the funds will be credited to the correct bank account using an admin transfer. The transfer will include a details object that contains the metadata from the original wire.

The details_type for this type of admin transfer is reclaimed_wire and the structure of details will be a wire object.

Admin transfer: reclaimed lost wires
{
  "created_at": "2024-12-08T21:00:33Z"
  "admin_transfer_id": "admt_2q0qYAq5faWfM6YWJukxNCEkq7j", 
  "bank_account_id": "bacc_2q0qoKAZilGUfiIAaj9zpo4cBmj",
  "type": "credit",
  "currency": "USD",
  "amount": 12300,
  "description": "Reclaimed lost wire"
  "details_type": "reclaimed_wire",
  "details": {
	"allow_overdraft": false,
	"amount": 100000,
	"beneficiary_account_number": "256783259046169",
	"beneficiary_name": "Column account",
	"business_function_code": "CTR"
	"completed_at": "2022-03-02T00:05:54Z",
	"counterparty_id": "cpty_25QihOzMbXhGQVNHQmeIp6UJNnj",
	"created_at": "2022-03-02T00:05:54Z",
	"currency_code": "USD",
	"description": "incoming CTR wire transfer",
	"fi_to_fi_information_line_1": "",
	"fi_to_fi_information_line_2": "",
	"fi_to_fi_information_line_3": "",
	"fi_to_fi_information_line_4": "",
	"fi_to_fi_information_line_5": "",
	"fi_to_fi_information_line_6": "",
	"idempotency_key": "",
	"imad": "20220301CHASE001000001",
	"initiated_at": "2022-03-02T00:05:54Z",
	"is_incoming": true,
	"is_on_us": false,
	"manual_review_at": null,
	"omad": "20220301MMQFMC2U000001",
	"originator_account_number": "1234567890",
	"originator_name": "Chase account",
	"pending_submission_at": null,
	"previous_message_reference": "",
	"raw_beneficiary_address": "",
	"raw_originator_address": "",
	"receiver_di_name": "Column Bank",
	"receiver_di_routing_number": "091000019",
	"rejected_at": null,
	"reversal_pair_transfer_id": null,
	"sender_di_name": "TestBank",
	"sender_di_routing_number": "322271627",
	"sender_reference": "",
	"status": "COMPLETED",
	"submitted_at": null,
	"subtype_code": "00",
	"type_code": "10",
	"updated_at": "2022-03-02T00:05:54Z",
	"wire_drawdown_request_id":"",
  }
}
Market rate object

The market rate object represents current market rates published by the New York Fed on each business day. They are used as the default pivot rates for various interest-bearing products.

Object Parameters
type

string

Rate type. Available values and their daily publish times:

BGCR: Broad General Collateral Rate (around 8:00am ET)
EFFR: Effective Federal Funds Rate (around 9:00am ET)
OBFR: Overnight Bank Funding Rate (around 9:00am ET)
SOFR: Secured Overnight Financing Rate (around 8:00am ET)
TGCR: Tri-Party General Collateral Rate (around 8:00am ET)
effective_date

string

Rate effective date. Format: YYYY-MM-DD

rate

string

Rate value. Format: "0.0433" means 4.33%.

Market Rate Object
{
  "market_rates": [
    {
      "type": "BGCR",
      "effective_date": "2025-08-22",
      "rate": "0.0435"
    },
    {
      "type": "EFFR",
      "effective_date": "2025-08-22",
      "rate": "0.0433"
    },
    {
      "type": "OBFR",
      "effective_date": "2025-08-22",
      "rate": "0.0433"
    },
    {
      "type": "SOFR",
      "effective_date": "2025-08-22",
      "rate": "0.0436"
    },
    {
      "type": "TGCR",
      "effective_date": "2025-08-22",
      "rate": "0.0435"
    }
  ],
  "has_more": false
}
List market rates
GET

/market-rates

Retrieve all market rates published by the New York Fed on a given date.

Query Parameters
date

string

Optional

Effective date of market rates. Format: YYYY-MM-DD. If this value is not set, the latest market rates for all types will be returned. Otherwise, the market rates for all types before or on the given date will be returned. Since the New York Fed only publishes market data daily on business days, if the given date is a non-business day, the market rates for the last business day before the given date will be returned.

Request
# Get latest market rates
curl 'https://api.column.com/market-rates' \
  -u :<YOUR API KEY>

# Get market rates for a specific date
curl 'https://api.column.com/market-rates?date=2025-08-22' \
  -u :<YOUR API KEY>
Response

200

400

{
  "market_rates": [
    {
      "type": "BGCR",
      "effective_date": "2025-08-22",
      "rate": "0.0435"
    },
    {
      "type": "EFFR",
      "effective_date": "2025-08-22",
      "rate": "0.0433"
    },
    {
      "type": "OBFR",
      "effective_date": "2025-08-22",
      "rate": "0.0433"
    },
    {
      "type": "SOFR",
      "effective_date": "2025-08-22",
      "rate": "0.0436"
    },
    {
      "type": "TGCR",
      "effective_date": "2025-08-22",
      "rate": "0.0435"
    }
  ],
  "has_more": false
}